{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/Comment/Comment.js\";\nimport React, { useState } from \"react\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport { Value } from \"slate\";\nimport styles from \"../Page/Page.module.css\";\nimport Html from \"slate-html-serializer\";\n\nconst Comment = props => {\n  const [textEditorValue, setTextEditorValue] = useState(Value.fromJSON(props.initialValue));\n  const [isEditable, setIsEditable] = useState(props.isEditable);\n  const BLOCK_TAGS = {\n    p: \"paragraph\",\n    blockquote: \"block-quote\",\n    ul: `bulleted-list`,\n    h1: `heading-one`,\n    h2: `heading-two`,\n    li: `list-item`,\n    ol: `numbered-list`,\n    img: `image`\n  }; // Add a dictionary of mark tags.\n\n  const MARK_TAGS = {\n    em: \"italic\",\n    strong: \"bold\",\n    u: \"underlined\",\n    code: `code`\n  };\n  const rules = [{\n    deserialize(el, next) {\n      const type = BLOCK_TAGS[el.tagName.toLowerCase()];\n\n      if (type) {\n        return {\n          object: \"block\",\n          type: type,\n          data: {\n            className: el.getAttribute(\"class\")\n          },\n          nodes: next(el.childNodes)\n        };\n      }\n    },\n\n    serialize(obj, children) {\n      if (obj.object == \"block\") {\n        switch (obj.type) {\n          case \"paragraph\":\n            return /*#__PURE__*/React.createElement(\"di\", {\n              className: styles[\"main-pane\"],\n              v: true,\n              className: styles[\"main-pane-item\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"block-quote\":\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: `${styles[\"main-pane-item\"]} ${styles[\"main-pane-item-centered\"]}`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"blockquote\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"bulleted-list\":\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: styles[\"main-pane-item\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"ul\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"heading-one\":\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: styles[\"main-pane-item\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"h1\", {\n              className: styles[\"heading\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"heading-two\":\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: styles[\"main-pane-item\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"h2\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"list-item\":\n            return /*#__PURE__*/React.createElement(\"li\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 22\n              }\n            }, children);\n\n          case \"numbered-list\":\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: styles[\"main-pane-item\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"ol\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"image\":\n            {\n              const src = obj.data[\"src\"];\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `${styles[\"main-pane-item\"]} ${styles[\"main-pane-item-centered\"]}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"figure\", {\n                className: styles[\"image-container\"],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: src,\n                loading: \"lazy\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }\n              })));\n            }\n\n          case \"figure\":\n            {\n              const src = obj.data[\"src\"];\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `${styles[\"main-pane-item\"]} ${styles[\"main-pane-item-centered\"]}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"figure\", {\n                className: styles[\"image-container\"],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: src,\n                loading: \"lazy\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }\n              }), /*#__PURE__*/React.createElement(\"figcaption\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"strong\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }\n              }, children))));\n            }\n        }\n      }\n    }\n\n  }, // Add a new rule that handles marks...\n  {\n    deserialize(el, next) {\n      const type = MARK_TAGS[el.tagName.toLowerCase()];\n\n      if (type) {\n        return {\n          object: \"mark\",\n          type: type,\n          nodes: next(el.childNodes)\n        };\n      }\n    },\n\n    serialize(obj, children) {\n      if (obj.object == \"mark\") {\n        switch (obj.type) {\n          case \"bold\":\n            return /*#__PURE__*/React.createElement(\"strong\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 22\n              }\n            }, children);\n\n          case \"italic\":\n            return /*#__PURE__*/React.createElement(\"em\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 22\n              }\n            }, children);\n\n          case \"code\":\n            return /*#__PURE__*/React.createElement(\"code\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 22\n              }\n            }, children);\n\n          case \"underlined\":\n            return /*#__PURE__*/React.createElement(\"u\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 22\n              }\n            }, children);\n        }\n      }\n    }\n\n  }];\n  const html = new Html({\n    rules\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, isEditable ? /*#__PURE__*/React.createElement(TextEditor, {\n    value: textEditorValue,\n    setValue: setTextEditorValue,\n    onSave: () => {},\n    toolbarFixed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 8\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: html.serialize(textEditorValue)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default Comment;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/Comment/Comment.js"],"names":["React","useState","TextEditor","Value","styles","Html","Comment","props","textEditorValue","setTextEditorValue","fromJSON","initialValue","isEditable","setIsEditable","BLOCK_TAGS","p","blockquote","ul","h1","h2","li","ol","img","MARK_TAGS","em","strong","u","code","rules","deserialize","el","next","type","tagName","toLowerCase","object","data","className","getAttribute","nodes","childNodes","serialize","obj","children","src","html","__html"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport { Value } from \"slate\";\nimport styles from \"../Page/Page.module.css\"\nimport Html from \"slate-html-serializer\";\nconst Comment = (props) => {\n  const [textEditorValue, setTextEditorValue] = useState(\n    Value.fromJSON(props.initialValue)\n  );\n  const [isEditable, setIsEditable] = useState(props.isEditable)\n \n  const BLOCK_TAGS = {\n    p: \"paragraph\",\n    blockquote: \"block-quote\",\n    ul: `bulleted-list`,\n    h1: `heading-one`,\n    h2: `heading-two`,\n    li: `list-item`,\n    ol: `numbered-list`,\n    img: `image`,\n  };\n\n  // Add a dictionary of mark tags.\n  const MARK_TAGS = {\n    em: \"italic\",\n    strong: \"bold\",\n    u: \"underlined\",\n    code: `code`,\n  };\n\n  const rules = [\n    {\n      deserialize(el, next) {\n        const type = BLOCK_TAGS[el.tagName.toLowerCase()];\n        if (type) {\n          return {\n            object: \"block\",\n            type: type,\n            data: {\n              className: el.getAttribute(\"class\"),\n            },\n            nodes: next(el.childNodes),\n          };\n        }\n      },\n      serialize(obj, children) {\n        if (obj.object == \"block\") {\n          switch (obj.type) {\n            case \"paragraph\":\n              return (\n                <di\n                  className={styles[\"main-pane\"]}\n                  v\n                  className={styles[\"main-pane-item\"]}\n                >\n                  <p>{children}</p>\n                </di>\n              );\n            case \"block-quote\":\n              return (\n                <div className={`${styles[\"main-pane-item\"]} ${styles[\"main-pane-item-centered\"]}`}>\n                  <blockquote>{children}</blockquote>\n                </div>\n              );\n            case \"bulleted-list\":\n              return (\n                <div className={styles[\"main-pane-item\"]}>\n                  <ul>{children}</ul>\n                </div>\n              );\n            case \"heading-one\":\n              return (\n                <div className={styles[\"main-pane-item\"]}>\n                  <h1 className={styles[\"heading\"]}>{children}</h1>\n                </div>\n              );\n            case \"heading-two\":\n              return (\n                <div className={styles[\"main-pane-item\"]}>\n                  <h2>{children}</h2>\n                </div>\n              );\n            case \"list-item\":\n              return <li>{children}</li>;\n            case \"numbered-list\":\n              return (\n                <div className={styles[\"main-pane-item\"]}>\n                  <ol>{children}</ol>\n                </div>\n              );\n            case \"image\": {\n              const src = obj.data[\"src\"];\n              return (\n                <div className={`${styles[\"main-pane-item\"]} ${styles[\"main-pane-item-centered\"]}`}>\n                  <figure className={styles[\"image-container\"]}>\n                    <img src={src} loading=\"lazy\"/>\n                  </figure>\n                </div>\n              );\n            }\n            case \"figure\": {\n              const src = obj.data[\"src\"];\n              return (\n                <div className={`${styles[\"main-pane-item\"]} ${styles[\"main-pane-item-centered\"]}`}>\n                  <figure className={styles[\"image-container\"]}>\n                    <img src={src} loading=\"lazy\"/>\n                    <figcaption>\n                      <strong>{children}</strong>\n                    </figcaption>\n                  </figure>\n                </div>\n              );\n            }\n          }\n        }\n      },\n    },\n    // Add a new rule that handles marks...\n    {\n      deserialize(el, next) {\n        const type = MARK_TAGS[el.tagName.toLowerCase()];\n        if (type) {\n          return {\n            object: \"mark\",\n            type: type,\n            nodes: next(el.childNodes),\n          };\n        }\n      },\n      serialize(obj, children) {\n        if (obj.object == \"mark\") {\n          switch (obj.type) {\n            case \"bold\":\n              return <strong>{children}</strong>;\n            case \"italic\":\n              return <em>{children}</em>;\n            case \"code\":\n              return <code>{children}</code>;\n            case \"underlined\":\n              return <u>{children}</u>;\n          }\n        }\n      },\n    },\n  ];\n  const html = new Html({ rules });\n \n \n \n  return (\n    <div>\n      {isEditable? \n      (<TextEditor\n        value={textEditorValue}\n        setValue={setTextEditorValue}\n        onSave={() => {}}\n        toolbarFixed={false}\n      />): \n  (<div dangerouslySetInnerHTML={{ __html:  html.serialize(textEditorValue) }}></div>)\n        \n    }\n    </div>\n  );\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}