{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { useState, useMemo, useEffect, useCallback } from \"react\";\nimport { createEditor, Transforms, Editor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\n\nconst TextEditor = () => {\n  const [value, setValue] = useState([{\n    type: \"paragraph\",\n    children: [{\n      text: \"A line of text in a paragraph.\"\n    }]\n  }]);\n  const editor = useMemo(() => withReact(createEditor()), []);\n  const renderElement = useCallback(props => {\n    switch (props.element.type) {\n      case 'code':\n        return /*#__PURE__*/React.createElement(CodeElement, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 24\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(DefaultElement, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 24\n          }\n        }));\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Slate, {\n    editor: editor,\n    value: value,\n    onChange: newValue => setValue(newValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Editable, {\n    renderElement: renderElement,\n    onKeyDown: event => {\n      if (event.key === '`' && event.ctrlKey) {\n        event.preventDefault();\n        Transforms.setNodes(editor, {\n          type: 'code'\n        }, {\n          match: n => Editor.isBlock(editor, n)\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst DefaultElement = props => {\n  return /*#__PURE__*/React.createElement(\"p\", Object.assign({}, props.attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }), props.children);\n};\n\nconst CodeElement = props => {\n  return /*#__PURE__*/React.createElement(\"pre\", Object.assign({}, props.attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, props.children));\n};\n\nexport default TextEditor;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","useState","useMemo","useEffect","useCallback","createEditor","Transforms","Editor","Slate","Editable","withReact","TextEditor","value","setValue","type","children","text","editor","renderElement","props","element","newValue","event","key","ctrlKey","preventDefault","setNodes","match","n","isBlock","DefaultElement","attributes","CodeElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,EAA8CC,WAA9C,QAAiE,OAAjE;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,MAAnC,QAAiD,OAAjD;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,aAA3C;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CACjC;AACEa,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD;AAFZ,GADiC,CAAD,CAAlC;AAMA,QAAMC,MAAM,GAAGf,OAAO,CAAC,MAAMQ,SAAS,CAACL,YAAY,EAAb,CAAhB,EAAkC,EAAlC,CAAtB;AAGA,QAAMa,aAAa,GAAEd,WAAW,CAC3Be,KAAD,IAAW;AACT,YAAOA,KAAK,CAACC,OAAN,CAAcN,IAArB;AACI,WAAK,MAAL;AACI,4BAAO,oBAAC,WAAD,oBAAkBK,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;;AACJ;AACI,4BAAO,oBAAC,cAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAJR;AAMH,GAR6B,EAS5B,EAT4B,CAAhC;AAaA,sBACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEF,MADV;AAEE,IAAA,KAAK,EAAEL,KAFT;AAGE,IAAA,QAAQ,EAAGS,QAAD,IAAcR,QAAQ,CAACQ,QAAD,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,QAAD;AACE,IAAA,aAAa,EAAEH,aADjB;AAEE,IAAA,SAAS,EAAGI,KAAD,IAAW;AAClB,UAAGA,KAAK,CAACC,GAAN,KAAc,GAAd,IAAqBD,KAAK,CAACE,OAA9B,EAAsC;AAClCF,QAAAA,KAAK,CAACG,cAAN;AACAnB,QAAAA,UAAU,CAACoB,QAAX,CACIT,MADJ,EAEI;AAACH,UAAAA,IAAI,EAAE;AAAP,SAFJ,EAGI;AAACa,UAAAA,KAAK,EAAEC,CAAC,IAAGrB,MAAM,CAACsB,OAAP,CAAeZ,MAAf,EAAuBW,CAAvB;AAAZ,SAHJ;AAKH;AACJ,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAqBD,CA5CD;;AA8CA,MAAME,cAAc,GAAGX,KAAK,IAAI;AAC5B,sBAAO,2CAAOA,KAAK,CAACY,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA0BZ,KAAK,CAACJ,QAAhC,CAAP;AACH,CAFD;;AAIA,MAAMiB,WAAW,GAAGb,KAAK,IAAI;AACzB,sBACI,6CAASA,KAAK,CAACY,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,KAAK,CAACJ,QAAb,CADJ,CADJ;AAKH,CAND;;AAQA,eAAeJ,UAAf","sourcesContent":["import React, { useState, useMemo, useEffect, useCallback } from \"react\";\nimport { createEditor, Transforms, Editor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\n\nconst TextEditor = () => {\n  const [value, setValue] = useState([\n    {\n      type: \"paragraph\",\n      children: [{ text: \"A line of text in a paragraph.\" }],\n    },\n  ]);\n  const editor = useMemo(() => withReact(createEditor()), []);\n  \n\n  const renderElement= useCallback(\n      (props) => {\n        switch(props.element.type){\n            case 'code':\n                return <CodeElement {... props}/>\n            default:\n                return <DefaultElement {...props}/>\n        }      \n    },\n      [],\n  )\n\n\n  return (\n    <Slate\n      editor={editor}\n      value={value}\n      onChange={(newValue) => setValue(newValue)}\n    >\n      <Editable\n        renderElement={renderElement}\n        onKeyDown={(event) => {\n            if(event.key === '`' && event.ctrlKey){\n                event.preventDefault();\n                Transforms.setNodes(\n                    editor,\n                    {type: 'code'},\n                    {match: n=> Editor.isBlock(editor, n)}\n                )\n            }\n        }}\n      />\n    </Slate>\n  );\n};\n\nconst DefaultElement = props => {\n    return <p {...props.attributes}>{props.children}</p>\n}\n\nconst CodeElement = props => {\n    return( \n        <pre {...props.attributes}>\n            <code>{props.children}</code>\n        </pre>\n    )\n}\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}