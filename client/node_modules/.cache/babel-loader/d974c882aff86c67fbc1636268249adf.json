{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './redux/reducers';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\nimport { setAudioPlayerPodcasts } from './redux/actions';\n\nconst fetchPodcasts = () => {\n  return function (dispatch) {\n    axios.get(\"/podcasts\").then(response => {\n      dispatch(setAudioPlayerPodcasts({\n        items: response.data[\"items\"],\n        currentlyPlaying: 0\n      }));\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};\n\nconst fetchYoutubeVideos = () => {\n  return function (dispatch) {\n    axios.get(\"/youtube\").then(response => {\n      const curVideos = response.data[\"items\"].map(item => {\n        return {\n          id: item.id,\n          title: item.title,\n          date: item.date\n        };\n      });\n      dispatch(setVideoPlayerYoutubeVideos(curVideos));\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\nstore.dispatch(fetchPodcasts());\nstore.dispatch(fetchYoutubeVideos());\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","thunk","Provider","axios","setAudioPlayerPodcasts","fetchPodcasts","dispatch","get","then","response","items","data","currentlyPlaying","catch","error","console","log","message","fetchYoutubeVideos","curVideos","map","item","id","title","date","setVideoPlayerYoutubeVideos","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,sBAAR,QAAqC,iBAArC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAE1B,SAAO,UAASC,QAAT,EAAkB;AACvBH,IAAAA,KAAK,CAACI,GAAN,CAAU,WAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBH,MAAAA,QAAQ,CAACF,sBAAsB,CAAC;AAAEM,QAAAA,KAAK,EAAED,QAAQ,CAACE,IAAT,CAAc,OAAd,CAAT;AAAiCC,QAAAA,gBAAgB,EAAE;AAAnD,OAAD,CAAvB,CAAR;AACD,KAHH,EAIGC,KAJH,CAISC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,KANH;AAOD,GARD;AASD,CAXD;;AAaA,MAAMC,kBAAkB,GAAG,MAAM;AAE/B,SAAO,UAASZ,QAAT,EAAkB;AACvBH,IAAAA,KAAK,CAACI,GAAN,CAAU,UAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,YAAMU,SAAS,GAAGV,QAAQ,CAACE,IAAT,CAAc,OAAd,EAAuBS,GAAvB,CAA4BC,IAAD,IAAU;AACrD,eAAO;AAAEC,UAAAA,EAAE,EAAED,IAAI,CAACC,EAAX;AAAeC,UAAAA,KAAK,EAAEF,IAAI,CAACE,KAA3B;AAAkCC,UAAAA,IAAI,EAAEH,IAAI,CAACG;AAA7C,SAAP;AACD,OAFiB,CAAlB;AAGAlB,MAAAA,QAAQ,CAACmB,2BAA2B,CAACN,SAAD,CAA5B,CAAR;AACD,KANH,EAOGN,KAPH,CAOSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,KATH;AAUD,GAXD;AAYD,CAdD;;AAgBA,MAAMS,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C7B,OAAvE;AACA,MAAM8B,KAAK,GAAGhC,WAAW,CAACG,WAAD,EAAc0B,eAAe,CAAC5B,eAAe,CAACG,KAAD,CAAhB,CAA7B,CAAzB;AACA4B,KAAK,CAACvB,QAAN,CAAeD,aAAa,EAA5B;AACAwB,KAAK,CAACvB,QAAN,CAAeY,kBAAkB,EAAjC;AAGAxB,QAAQ,CAACoC,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADA,CADF,EAOEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF,E,CAUA;AACA;AACA;;AACApC,aAAa,CAACqC,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk'\nimport {Provider} from 'react-redux'\nimport axios from 'axios'\nimport {setAudioPlayerPodcasts} from './redux/actions'\n\nconst fetchPodcasts = () => {\n\n  return function(dispatch){\n    axios.get(\"/podcasts\")\n      .then(response => {\n        dispatch(setAudioPlayerPodcasts({ items: response.data[\"items\"], currentlyPlaying: 0 }))\n      })\n      .catch(error => {\n        console.log(error.message)\n      })\n  }\n}\n\nconst fetchYoutubeVideos = () => {\n\n  return function(dispatch){\n    axios.get(\"/youtube\")\n      .then(response => {\n        const curVideos = response.data[\"items\"].map((item) => {\n          return { id: item.id, title: item.title, date: item.date };\n        });\n        dispatch(setVideoPlayerYoutubeVideos(curVideos))\n      })\n      .catch(error => {\n        console.log(error.message)\n      })\n  }\n}\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)))\nstore.dispatch(fetchPodcasts())\nstore.dispatch(fetchYoutubeVideos())\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}