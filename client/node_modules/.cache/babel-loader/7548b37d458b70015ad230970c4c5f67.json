{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/VideoPlayer/VideoPlayer.js\";\nimport React, { useRef, useEffect } from 'react';\nimport styles from './VideoPlayer.module.css';\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport { useSelector } from 'react-redux';\n\nconst VideoPlayer = (props, ref) => {\n  const scrollLockRef = useRef();\n  const isPlaying = useSelector(state => state.videoPlayer.isPlaying);\n  useEffect(() => {\n    console.log(\"Should be locked\");\n    disableBodyScroll(scrollLockRef.current);\n  }, []);\n  const selected = useSelector(state => state.videoPlayer.selected);\n  return isPlaying ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"youtube-video-container\"],\n    id: \"youtube-video-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    ref: scrollLockRef,\n    style: ({\n      height: \"200vw\"\n    }, {\n      overflowY: \"scrollable\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 93\n    }\n  }, \"Hello\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"closeable\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"close-button\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: `${styles[\"fas\"]} ${styles[\"fa-times\"]} fas fa-times`,\n    onClick: () => {\n      props.closeVideo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: styles[\"close-btn-label\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollLockRef,\n    className: styles[\"video\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    src: props.src,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  })))) : null;\n};\n\nexport default VideoPlayer;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/VideoPlayer/VideoPlayer.js"],"names":["React","useRef","useEffect","styles","disableBodyScroll","enableBodyScroll","clearAllBodyScrollLocks","useSelector","VideoPlayer","props","ref","scrollLockRef","isPlaying","state","videoPlayer","console","log","current","selected","height","overflowY","color","closeVideo","src"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAsBC,SAAtB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,uBAHF,QAIO,kBAJP;AAKA,SAAQC,WAAR,QAA0B,aAA1B;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAChC,QAAMC,aAAa,GAAGV,MAAM,EAA5B;AACA,QAAMW,SAAS,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBF,SAA5B,CAA7B;AACAV,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAZ,IAAAA,iBAAiB,CAACO,aAAa,CAACM,OAAf,CAAjB;AACD,GAHQ,EAGN,EAHM,CAAT;AAMA,QAAMC,QAAQ,GAAGX,WAAW,CAACM,KAAK,IAAGA,KAAK,CAACC,WAAN,CAAkBI,QAA3B,CAA5B;AACA,SACIN,SAAS,gBACJ;AAAK,IAAA,SAAS,EAAET,MAAM,CAAC,yBAAD,CAAtB;AAAmD,IAAA,EAAE,EAAC,yBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAI,IAAA,GAAG,EAAEQ,aAAT;AAAwB,IAAA,KAAK,GAAE;AAACQ,MAAAA,MAAM,EAAE;AAAT,OAAkB;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAApB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4E;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA5E,CADH,eAEC;AAAK,IAAA,SAAS,EAAElB,MAAM,CAAC,WAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEA,MAAM,CAAC,cAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAG,GAAEA,MAAM,CAAC,KAAD,CAAQ,IAAGA,MAAM,CAAC,UAAD,CAAa,eAArD;AAAqE,IAAA,OAAO,EAAE,MAAM;AAACM,MAAAA,KAAK,CAACa,UAAN;AAAmB,KAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,SAAS,EAAEnB,MAAM,CAAC,iBAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,eAKE;AAAK,IAAA,GAAG,EAAEQ,aAAV;AAAwB,IAAA,SAAS,EAAER,MAAM,CAAC,OAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEM,KAAK,CAACc,GADb;AAEE,IAAA,WAAW,EAAC,GAFd;AAGE,IAAA,KAAK,EAAC,yEAHR;AAIE,IAAA,eAAe,EAAC,MAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CAFD,CADI,GAkBH,IAnBV;AAqBH,CA/BD;;AAgCA,eAAef,WAAf","sourcesContent":["import React,{useRef, useEffect} from 'react'\nimport styles from './VideoPlayer.module.css'\nimport {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks\n} from \"body-scroll-lock\";\nimport {useSelector} from 'react-redux'\nconst VideoPlayer = (props, ref) => {\n    const scrollLockRef = useRef();\n    const isPlaying = useSelector(state => state.videoPlayer.isPlaying)\n    useEffect(() => {\n      console.log(\"Should be locked\")\n      disableBodyScroll(scrollLockRef.current)\n    }, [])\n\n  \n    const selected = useSelector(state=> state.videoPlayer.selected)\n    return (\n        isPlaying? \n            (<div className={styles[\"youtube-video-container\"]} id=\"youtube-video-container\">\n                <ul ref={scrollLockRef} style={{height: \"200vw\"},{overflowY: \"scrollable\"}}><li style={{color: \"white\"}}>Hello</li></ul>\n              <div className={styles[\"closeable\"]}>\n                <div className={styles[\"close-button\"]}>\n                  <i className={`${styles[\"fas\"]} ${styles[\"fa-times\"]} fas fa-times`} onClick={() => {props.closeVideo()}}></i>\n                  <label className={styles[\"close-btn-label\"]}>Close</label>\n                </div>\n                <div ref={scrollLockRef}className={styles[\"video\"]}>\n                  <iframe\n                    src={props.src}\n                    frameborder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen=\"true\"\n                  ></iframe>\n                </div>\n              </div>\n            </div>)\n            : null        \n    )\n};\nexport default VideoPlayer"]},"metadata":{},"sourceType":"module"}