{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { Component } from \"react\";\nimport { Editor } from \"slate-react\";\nimport { Value } from \"slate\";\nimport styles from './TextEditor.module.css';\nconst initialValue = Value.fromJSON({\n  document: {\n    nodes: [{\n      object: \"block\",\n      type: \"paragraph\",\n      nodes: [{\n        object: \"text\",\n        leaves: [{\n          text: \"My first paragraph\"\n        }]\n      }]\n    }]\n  }\n});\nexport default class TextEditor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: initialValue\n    };\n\n    this.onChange = ({\n      value\n    }) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.onKeyDown = (e, change) => {\n      if (!e.ctrlKey) {\n        return;\n      }\n\n      e.preventDefault();\n\n      switch (e.key) {\n        case \"b\":\n          {\n            change.toggleMark(\"bold\");\n            return true;\n          }\n\n        case \"i\":\n          {\n            change.toggleMark(\"italic\");\n            return true;\n          }\n      }\n    };\n\n    this.renderMark = props => {\n      switch (props.mark.type) {\n        case \"bold\":\n          return /*#__PURE__*/React.createElement(BoldMark, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 16\n            }\n          }));\n\n        case \"italic\":\n          return /*#__PURE__*/React.createElement(ItalicMark, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 16\n            }\n          }));\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Editor, {\n      value: this.state.value,\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      renderMark: this.renderMark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst BoldMark = props => /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 29\n  }\n}, props.children);\n\nconst ItalicMark = props => /*#__PURE__*/React.createElement(\"em\", {\n  property: \"italic\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 31\n  }\n}, props.children);","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","Component","Editor","Value","styles","initialValue","fromJSON","document","nodes","object","type","leaves","text","TextEditor","state","value","onChange","setState","onKeyDown","e","change","ctrlKey","preventDefault","key","toggleMark","renderMark","props","mark","render","BoldMark","children","ItalicMark"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,MAAMC,YAAY,GAAGF,KAAK,CAACG,QAAN,CAAe;AAClCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE,OADV;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEF,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEE,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,IAAI,EAAE;AADR,SADM;AAFV,OADK;AAHT,KADK;AADC;AADwB,CAAf,CAArB;AAqBA,eAAe,MAAMC,UAAN,SAAyBZ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAChDa,KADgD,GACxC;AACNC,MAAAA,KAAK,EAAEV;AADD,KADwC;;AAAA,SAKhDW,QALgD,GAKrC,CAAC;AAAED,MAAAA;AAAF,KAAD,KAAe;AACxB,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KAP+C;;AAAA,SAShDG,SATgD,GASpC,CAACC,CAAD,EAAIC,MAAJ,KAAe;AACzB,UAAI,CAACD,CAAC,CAACE,OAAP,EAAgB;AACd;AACD;;AACDF,MAAAA,CAAC,CAACG,cAAF;;AAEA,cAAQH,CAAC,CAACI,GAAV;AACE,aAAK,GAAL;AAAU;AACRH,YAAAA,MAAM,CAACI,UAAP,CAAkB,MAAlB;AACA,mBAAO,IAAP;AACD;;AACD,aAAK,GAAL;AAAU;AACRJ,YAAAA,MAAM,CAACI,UAAP,CAAkB,QAAlB;AACA,mBAAO,IAAP;AACD;AARH;AAUD,KAzB+C;;AAAA,SA2BhDC,UA3BgD,GA2BlCC,KAAD,IAAW;AACtB,cAAQA,KAAK,CAACC,IAAN,CAAWjB,IAAnB;AACE,aAAK,MAAL;AACE,8BAAO,oBAAC,QAAD,oBAAcgB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;;AACF,aAAK,QAAL;AACE,8BAAO,oBAAC,UAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AAJJ;AAMD,KAlC+C;AAAA;;AAoChDE,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,KADpB;AAEE,MAAA,QAAQ,EAAE,KAAKC,QAFjB;AAGE,MAAA,SAAS,EAAE,KAAKE,SAHlB;AAIE,MAAA,UAAU,EAAE,KAAKO,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AA7C+C;;AAgDlD,MAAMI,QAAQ,GAAIH,KAAD,iBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAASA,KAAK,CAACI,QAAf,CAA5B;;AAEA,MAAMC,UAAU,GAAIL,KAAD,iBAAW;AAAI,EAAA,QAAQ,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAuBA,KAAK,CAACI,QAA7B,CAA9B","sourcesContent":["import React, { Component } from \"react\";\nimport { Editor } from \"slate-react\";\nimport { Value } from \"slate\";\nimport styles from './TextEditor.module.css'\n\nconst initialValue = Value.fromJSON({\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"paragraph\",\n        nodes: [\n          {\n            object: \"text\",\n            leaves: [\n              {\n                text: \"My first paragraph\",\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n});\n\nexport default class TextEditor extends Component {\n  state = {\n    value: initialValue,\n  };\n\n  onChange = ({ value }) => {\n    this.setState({ value });\n  };\n\n  onKeyDown = (e, change) => {\n    if (!e.ctrlKey) {\n      return;\n    }\n    e.preventDefault();\n\n    switch (e.key) {\n      case \"b\": {\n        change.toggleMark(\"bold\");\n        return true;\n      }\n      case \"i\": {\n        change.toggleMark(\"italic\");\n        return true;\n      }\n    }\n  };\n\n  renderMark = (props) => {\n    switch (props.mark.type) {\n      case \"bold\":\n        return <BoldMark {...props} />;\n      case \"italic\":\n        return <ItalicMark {...props} />;\n    }\n  };\n\n  render() {\n    return (\n      <Editor\n        value={this.state.value}\n        onChange={this.onChange}\n        onKeyDown={this.onKeyDown}\n        renderMark={this.renderMark}\n      />\n    );\n  }\n}\n\nconst BoldMark = (props) => <strong>{props.children}</strong>;\n\nconst ItalicMark = (props) => <em property=\"italic\">{props.children}</em>;\n"]},"metadata":{},"sourceType":"module"}