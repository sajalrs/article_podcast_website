{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport Card from \"./components/Cards/Card.js\";\nimport axios from \"axios\";\nimport { setAudioPlayerPodcasts, setVideoPlayerYoutubeVideos, setBlogArticles, setIsLoggedIn } from \"./redux/actions\";\n\nconst isLoggedIn = () => {\n  return dispatch => {\n    axios.get(\"/auth/isloggedin\").then(response => {\n      if (response.status !== 200) {\n        dispatch(setIsLoggedIn(false));\n      } else {\n        dispatch(setIsLoggedIn(true));\n      }\n    });\n  };\n};\n\nconst fetchBlogArticles = () => {\n  return dispatch => {\n    axios.get(\"/articles/pages\").then(response => {\n      const articles = response.data[\"links\"].map((item, index) => {\n        return {\n          index: index,\n          ...item,\n          contentType: Card.ContentType[\"article-internal\"],\n          link: `articles/id=${item[\"_id\"]}`\n        };\n      });\n      dispatch(setBlogArticles(articles));\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};\n\nconst fetchPodcasts = () => {\n  return dispatch => {\n    axios.get(\"/podcasts\").then(response => {\n      const podcasts = response.data[\"items\"].map((item, index) => {\n        return {\n          index: index,\n          ...item,\n          contentType: Card.ContentType[\"audio-internal\"]\n        };\n      });\n      dispatch(setAudioPlayerPodcasts(podcasts));\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};\n\nconst fetchYoutubeVideos = () => {\n  return dispatch => {\n    axios.get(\"/youtube\").then(response => {\n      const curVideos = response.data[\"items\"].map((item, index) => {\n        return {\n          index: index,\n          id: item.id,\n          title: item.title,\n          image: `https://img.youtube.com/vi/${item.id}/hqdefault.jpg`,\n          link: `https://www.youtube.com/embed/${item.id}?rel=0&start=0&autoplay=1`,\n          date: item.date,\n          contentType: Card.ContentType[\"video-youtube\"]\n        };\n      });\n      dispatch(setVideoPlayerYoutubeVideos(curVideos));\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\nstore.dispatch(isLoggedIn());\nstore.dispatch(fetchBlogArticles());\nstore.dispatch(fetchPodcasts());\nstore.dispatch(fetchYoutubeVideos());\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","thunk","Provider","Card","axios","setAudioPlayerPodcasts","setVideoPlayerYoutubeVideos","setBlogArticles","setIsLoggedIn","isLoggedIn","dispatch","get","then","response","status","fetchBlogArticles","articles","data","map","item","index","contentType","ContentType","link","catch","error","console","log","message","fetchPodcasts","podcasts","fetchYoutubeVideos","curVideos","id","title","image","date","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport Card from \"./components/Cards/Card.js\";\nimport axios from \"axios\";\nimport {\n  setAudioPlayerPodcasts,\n  setVideoPlayerYoutubeVideos,\n  setBlogArticles,\n  setIsLoggedIn,\n} from \"./redux/actions\";\nconst isLoggedIn = () => {\n  return (dispatch) => {\n    axios.get(\"/auth/isloggedin\").then((response) => {\n      if (response.status !== 200) {\n        dispatch(setIsLoggedIn(false));\n      } else {\n        dispatch(setIsLoggedIn(true));\n      }\n    });\n  };\n};\nconst fetchBlogArticles = () => {\n  return (dispatch) => {\n    axios\n      .get(\"/articles/pages\")\n      .then((response) => {\n        const articles = response.data[\"links\"].map((item, index) => {\n          return {\n            index: index,\n            ...item,\n            contentType: Card.ContentType[\"article-internal\"],\n            link: `articles/id=${item[\"_id\"]}`,\n          };\n        });\n        dispatch(setBlogArticles(articles));\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n};\n\nconst fetchPodcasts = () => {\n  return (dispatch) => {\n    axios\n      .get(\"/podcasts\")\n      .then((response) => {\n        const podcasts = response.data[\"items\"].map((item, index) => {\n          return {\n            index: index,\n            ...item,\n            contentType: Card.ContentType[\"audio-internal\"],\n          };\n        });\n        dispatch(setAudioPlayerPodcasts(podcasts));\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n};\n\nconst fetchYoutubeVideos = () => {\n  return (dispatch) => {\n    axios\n      .get(\"/youtube\")\n      .then((response) => {\n        const curVideos = response.data[\"items\"].map((item, index) => {\n          return {\n            index: index,\n            id: item.id,\n            title: item.title,\n            image: `https://img.youtube.com/vi/${item.id}/hqdefault.jpg`,\n            link: `https://www.youtube.com/embed/${item.id}?rel=0&start=0&autoplay=1`,\n            date: item.date,\n            contentType: Card.ContentType[\"video-youtube\"],\n          };\n        });\n        dispatch(setVideoPlayerYoutubeVideos(curVideos));\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\nstore.dispatch(isLoggedIn());\nstore.dispatch(fetchBlogArticles());\nstore.dispatch(fetchPodcasts());\nstore.dispatch(fetchYoutubeVideos());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}