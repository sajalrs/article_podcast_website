{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/Comment/CommentBar.js\";\nimport React, { useState } from \"react\";\nimport Comment from \"./Comment\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport { Value } from \"slate\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./Comment.module.css\";\nconst initialValue = {\n  document: {\n    nodes: [{\n      object: \"block\",\n      type: \"paragraph\",\n      nodes: [{\n        object: \"text\",\n        leaves: [{\n          text: \"Edit text and save to post comment...\"\n        }]\n      }]\n    }]\n  }\n};\nconst loginWarning = {\n  document: {\n    nodes: [{\n      object: \"block\",\n      type: \"paragraph\",\n      nodes: [{\n        object: \"text\",\n        leaves: [{\n          text: \"Please login to post comments...\"\n        }]\n      }]\n    }]\n  }\n};\n\nconst CommentBar = props => {\n  const isLoggedIn = useSelector(state => state.login.isLoggedIn);\n  const [textEditorValue, setTextEditorValue] = useState(Value.fromJSON(initialValue));\n\n  const postComment = () => {\n    props.postComment(textEditorValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles[\"heading-special\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderStyle: \"solid solid solid solid\",\n      borderColor: \"var(--secondary-color)\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TextEditor, {\n    value: isLoggedIn ? textEditorValue : Value.fromJSON(loginWarning),\n    setValue: isLoggedIn ? setTextEditorValue : () => {},\n    onSave: () => {\n      postComment();\n    },\n    toolbarFixed: false,\n    styles: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), props.comments.map(item => {\n    return /*#__PURE__*/React.createElement(Comment, {\n      author: item.author,\n      date: item.updatedAt,\n      commentText: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\nexport default CommentBar;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/Comment/CommentBar.js"],"names":["React","useState","Comment","TextEditor","Value","useSelector","styles","initialValue","document","nodes","object","type","leaves","text","loginWarning","CommentBar","props","isLoggedIn","state","login","textEditorValue","setTextEditorValue","fromJSON","postComment","width","borderStyle","borderColor","comments","map","item","author","updatedAt","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Comment from \"./Comment\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport { Value } from \"slate\";\nimport {useSelector} from \"react-redux\"\nimport styles from \"./Comment.module.css\";\n\nconst initialValue = {\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"paragraph\",\n        nodes: [\n          {\n            object: \"text\",\n            leaves: [\n              {\n                text: \"Edit text and save to post comment...\",\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst loginWarning = {\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"paragraph\",\n        nodes: [\n          {\n            object: \"text\",\n            leaves: [\n              {\n                text: \"Please login to post comments...\",\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\n\n\nconst CommentBar = (props) => {\n  const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n  const [textEditorValue, setTextEditorValue] = useState(\n    Value.fromJSON(initialValue)\n  );\n\n\n  const postComment = () => {\n    props.postComment(textEditorValue);\n  };\n\n  return (\n    <div style={{width: \"100%\"}}>\n      <h1 className={styles[\"heading-special\"]}>Comments</h1>\n   <div   style={{\n          borderStyle: \"solid solid solid solid\",\n          borderColor: \"var(--secondary-color)\",\n          width: \"100%\"\n        }}>\n   <div\n        style={{\n          width: \"100%\"\n        }}\n      >\n        <TextEditor\n          value={isLoggedIn? textEditorValue : Value.fromJSON(loginWarning)}\n          setValue={isLoggedIn ? setTextEditorValue : () => {}}\n          onSave={() => {\n            postComment();\n          }}\n          toolbarFixed={false}\n          styles={styles}\n        />\n      </div>\n\n      {props.comments.map((item) => {\n        return (\n          <Comment\n            author={item.author}\n            date={item.updatedAt}\n            commentText={item.content}\n          />\n        );\n      })}\n      </div>\n    </div>\n\n  );\n};\n\nexport default CommentBar;\n"]},"metadata":{},"sourceType":"module"}