{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/AudioPlayer/AudioPlayer.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nconst AudioPlayer = () => {\n  const [selectedTrack, setSelectedTrack] = useState({\n    title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link: \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    duration: \"35143625\",\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\"\n  });\n  const [player, setPlayer] = useState(\"stopped\");\n  const audioRef = useRef();\n  const prevTrack = usePrevious(selectedTrack);\n  const prevPlayer = usePrevious(player);\n  useEffect(() => {\n    if (selectedTrack !== prevTrack) {\n      let track;\n      track = selectedTrack ? selectedTrack.link : null;\n\n      if (track) {\n        audioRef.current.src = track;\n        audioRef.current.play();\n        setPlayer(\"playing\");\n      }\n    }\n  }, [selectedTrack]);\n  useEffect(() => {\n    if (player !== prevPlayer) {\n      if (player === \"paused\") {\n        audioRef.current.pause();\n      } else if (player === \"stopped\") {\n        audioRef.current.pause();\n        audioRef.current.currentTime = 0;\n        setSelectedTrack(null);\n      } else if (player === \"playing\" && prevPlayer === \"paused\") {\n        audioRef.current.play();\n      }\n    }\n  }, [player]);\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, player === \"paused\" && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayer(\"playing\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Play\"), player === \"playing\" && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayer(\"paused\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Pause\"), player === \"playing\" || player === \"paused\" ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayer(\"stopped\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Stop\") : \"\"), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: audioRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AudioPlayer;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/AudioPlayer/AudioPlayer.js"],"names":["React","useState","useRef","useEffect","AudioPlayer","selectedTrack","setSelectedTrack","title","by","link","duration","date","player","setPlayer","audioRef","prevTrack","usePrevious","prevPlayer","track","current","src","play","pause","currentTime","value","ref"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nconst AudioPlayer = () => {\n  const [selectedTrack, setSelectedTrack] = useState({\n    title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link:\n      \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    duration: \"35143625\",\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n  });\n  const [player, setPlayer] = useState(\"stopped\");\n  const audioRef = useRef();\n  const prevTrack = usePrevious(selectedTrack);\n  const prevPlayer = usePrevious(player);\n\n\n  useEffect(() => {\n    if (selectedTrack !== prevTrack) {\n      let track;\n      track = selectedTrack? selectedTrack.link : null;\n      if (track) {\n        audioRef.current.src = track;\n        audioRef.current.play();\n        setPlayer(\"playing\");\n      }\n    }\n  }, [selectedTrack]);\n\n  useEffect(() => {\n    if (player !== prevPlayer) {\n      if (player === \"paused\") {\n        audioRef.current.pause();\n      } else if (player === \"stopped\") {\n        audioRef.current.pause();\n        audioRef.current.currentTime = 0;\n        setSelectedTrack(null);\n      } else if (player === \"playing\" && prevPlayer === \"paused\") {\n        audioRef.current.play();\n      }\n    }\n  }, [player]);\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  return (\n    <div>\n      <div>\n        {player === \"paused\" && (\n          <button onClick={() => setPlayer(\"playing\")}>Play</button>\n        )}\n        {player === \"playing\" && (\n          <button onClick={() => setPlayer(\"paused\")}>Pause</button>\n        )}\n        {player === \"playing\" || player === \"paused\" ? (\n          <button onClick={() => setPlayer(\"stopped\")}>Stop</button>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <audio ref={audioRef} />\n      {/*https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a  */}\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}