{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { Component } from \"react\";\nimport { Editor } from \"slate-react\";\nimport { Value } from \"slate\";\nimport styles from './TextEditor.module.css';\nimport FormatToolbar from \"./FormatToolbar\";\nimport Icon from \"react-icons-kit\";\nimport { bold } from \"react-icons-kit/feather/bold\";\nimport { italic } from \"react-icons-kit/feather/italic\";\nimport { code } from \"react-icons-kit/feather/code\";\nimport { list } from \"react-icons-kit/feather/list\";\nimport { underline } from \"react-icons-kit/feather/underline\";\nimport Edit from \"../../pages/Articles/Edit\";\nconst initialValue = Value.fromJSON({\n  document: {\n    nodes: [{\n      object: \"block\",\n      type: \"paragraph\",\n      nodes: [{\n        object: \"text\",\n        leaves: [{\n          text: \"My first paragraph\"\n        }]\n      }]\n    }]\n  }\n});\nexport default class TextEditor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: initialValue\n    };\n\n    this.ref = editor => {\n      this.editor = editor;\n    };\n\n    this.onChange = ({\n      value\n    }) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.onKeyDown = (e, change) => {\n      if (!e.ctrlKey) {\n        return;\n      }\n\n      e.preventDefault();\n\n      switch (e.key) {\n        case \"b\":\n          {\n            change.toggleMark(\"bold\");\n            return true;\n          }\n\n        case \"i\":\n          {\n            change.toggleMark(\"italic\");\n            return true;\n          }\n\n        case \"`\":\n          {\n            change.toggleMark(\"code\");\n            return true;\n          }\n\n        case 'l':\n          {\n            change.toggleMark('list');\n            return true;\n          }\n\n        case 'u':\n          {\n            change.toggleMark('underline');\n            return true;\n          }\n      }\n    };\n\n    this.renderMark = props => {\n      switch (props.mark.type) {\n        case \"bold\":\n          return /*#__PURE__*/React.createElement(BoldMark, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 16\n            }\n          }));\n\n        case \"italic\":\n          return /*#__PURE__*/React.createElement(ItalicMark, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 16\n            }\n          }));\n\n        case \"code\":\n          return /*#__PURE__*/React.createElement(\"code\", Object.assign({}, props.attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 18\n            }\n          }), props.children);\n\n        case \"list\":\n          return /*#__PURE__*/React.createElement(\"ul\", Object.assign({}, props.attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }\n          }, props.children));\n\n        case \"underline\":\n          return /*#__PURE__*/React.createElement(\"u\", Object.assign({}, props.attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 18\n            }\n          }), props.children);\n      }\n    };\n\n    this.onMarkClick = (e, type) => {\n      e.preventDefault(); //   const {value} = this.state;\n\n      const change = this.editor.toggleMark(type); //   this.onChange(change);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles[\"overarching\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormatToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onPointerDown: e => this.onMarkClick(e, 'bold'),\n      className: styles[\"tooltip-icon-button\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: bold,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onPointerDown: e => this.onMarkClick(e, 'italic'),\n      className: styles[\"tooltip-icon-button\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: italic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onPointerDown: e => this.onMarkClick(e, 'code'),\n      className: styles[\"tooltip-icon-button\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onPointerDown: e => this.onMarkClick(e, 'list'),\n      className: styles[\"tooltip-icon-button\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Editor, {\n      ref: this.ref,\n      className: styles[\"Editor\"],\n      value: this.state.value,\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      renderMark: this.renderMark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst BoldMark = props => /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 29\n  }\n}, props.children);\n\nconst ItalicMark = props => /*#__PURE__*/React.createElement(\"em\", {\n  property: \"italic\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 31\n  }\n}, props.children);","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","Component","Editor","Value","styles","FormatToolbar","Icon","bold","italic","code","list","underline","Edit","initialValue","fromJSON","document","nodes","object","type","leaves","text","TextEditor","state","value","ref","editor","onChange","setState","onKeyDown","e","change","ctrlKey","preventDefault","key","toggleMark","renderMark","props","mark","attributes","children","onMarkClick","render","BoldMark","ItalicMark"],"mappings":"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","sourcesContent":["import React, { Component} from \"react\";\nimport { Editor } from \"slate-react\";\nimport { Value } from \"slate\";\nimport styles from './TextEditor.module.css'\nimport FormatToolbar from \"./FormatToolbar\"\n\nimport Icon from \"react-icons-kit\"\nimport {bold} from \"react-icons-kit/feather/bold\"\nimport {italic} from \"react-icons-kit/feather/italic\"\nimport {code} from \"react-icons-kit/feather/code\"\nimport {list} from \"react-icons-kit/feather/list\"\nimport {underline} from \"react-icons-kit/feather/underline\"\nimport Edit from \"../../pages/Articles/Edit\";\n\n\nconst initialValue = Value.fromJSON({\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"paragraph\",\n        nodes: [\n          {\n            object: \"text\",\n            leaves: [\n              {\n                text: \"My first paragraph\",\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n});\n\nexport default class TextEditor extends Component {\n  state = {\n    value: initialValue,\n  };\n\n  ref= editor => {this.editor = editor}\n  onChange = ({ value }) => {\n    this.setState({ value });\n  };\n\n  onKeyDown = (e, change) => {\n    if (!e.ctrlKey) {\n      return;\n    }\n    e.preventDefault();\n\n    switch (e.key) {\n      case \"b\": {\n        change.toggleMark(\"bold\");\n        return true;\n      }\n      case \"i\": {\n        change.toggleMark(\"italic\");\n        return true;\n      }\n      case \"`\":{\n          change.toggleMark(\"code\");\n          return true;\n      }\n      case 'l':{ \n          change.toggleMark('list');\n          return true;\n      }\n\n      case 'u':{\n          change.toggleMark('underline');\n          return true;\n      }\n    }\n  };\n\n  renderMark = (props) => {\n    switch (props.mark.type) {\n      case \"bold\":\n        return <BoldMark {...props} />;\n      case \"italic\":\n        return <ItalicMark {...props} />;\n      case \"code\":\n          return <code {...props.attributes}>{props.children}</code>\n      case \"list\":\n          return (\n              <ul {...props.attributes}>\n                  <li>{props.children}</li>\n              </ul>\n          )\n      case \"underline\":\n          return <u {...props.attributes}>{props.children}</u>\n    }\n  };\n\n  onMarkClick = (e, type) => {\n      e.preventDefault();\n    //   const {value} = this.state;\n      const change = this.editor.toggleMark(type);\n    //   this.onChange(change);\n      \n}\n\n\n\n  render() {\n    return (\n        <div className={styles[\"overarching\"]}>\n        <FormatToolbar>\n            <button \n            onPointerDown={(e) => this.onMarkClick(e, 'bold')}\n            className={styles[\"tooltip-icon-button\"]}>\n                <Icon icon ={bold}/>\n            </button>\n            <button \n            onPointerDown={(e) => this.onMarkClick(e, 'italic')}\n            className={styles[\"tooltip-icon-button\"]}>\n                <Icon icon ={italic}/>\n            </button>\n            <button \n            onPointerDown={(e) => this.onMarkClick(e, 'code')}\n            className={styles[\"tooltip-icon-button\"]}>\n                <Icon icon ={code}/>\n            </button>\n            <button \n            onPointerDown={(e) => this.onMarkClick(e, 'list')}\n            className={styles[\"tooltip-icon-button\"]}>\n                <Icon icon ={list}/>\n            </button>\n        </FormatToolbar>\n        <Editor\n        ref={this.ref}\n        className={styles[\"Editor\"]}\n        value={this.state.value}\n        onChange={this.onChange}\n        onKeyDown={this.onKeyDown}\n        renderMark={this.renderMark}\n        />\n        </div>\n\n     \n    );\n  }\n}\n\nconst BoldMark = (props) => <strong>{props.children}</strong>;\n\nconst ItalicMark = (props) => <em property=\"italic\">{props.children}</em>;\n\n"]},"metadata":{},"sourceType":"module"}