{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/VideoPlayer/VideoPlayer.js\";\nimport React, { useEffect } from 'react';\nimport styles from './VideoPlayer.module.css';\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { closeVideo } from '../../redux/actions';\n\nconst VideoPlayer = props => {\n  const isPlaying = useSelector(state => state.videoPlayer.isPlaying);\n  useEffect(() => {\n    if (isPlaying) {\n      disableBodyScroll(props.scrollLockRef.current);\n    } else {\n      enableBodyScroll(props.scrollLockRef.current);\n    }\n  }, [isPlaying, props.scrollLockRef.current]);\n  const selected = useSelector(state => state.videoPlayer.selected);\n  const dispatch = useDispatch();\n  return isPlaying ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"youtube-video-container\"],\n    id: \"youtube-video-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"closeable\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"close-button\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: `${styles[\"fas\"]} ${styles[\"fa-times\"]} fas fa-times`,\n    onClick: () => {\n      dispatch(closeVideo());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: styles[\"close-btn-label\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"video\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    src: selected,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  })))) : null;\n};\n\nexport default VideoPlayer;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/VideoPlayer/VideoPlayer.js"],"names":["React","useEffect","styles","disableBodyScroll","enableBodyScroll","useSelector","useDispatch","closeVideo","VideoPlayer","props","isPlaying","state","videoPlayer","scrollLockRef","current","selected","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,kBAHP;AAIA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,QAAyB,qBAAzB;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,QAAMC,SAAS,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBF,SAA5B,CAA7B;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGS,SAAH,EAAa;AACXP,MAAAA,iBAAiB,CAACM,KAAK,CAACI,aAAN,CAAoBC,OAArB,CAAjB;AACD,KAFD,MAEM;AACJV,MAAAA,gBAAgB,CAACK,KAAK,CAACI,aAAN,CAAoBC,OAArB,CAAhB;AACD;AAEF,GAPQ,EAOP,CAACJ,SAAD,EAAYD,KAAK,CAACI,aAAN,CAAoBC,OAAhC,CAPO,CAAT;AASA,QAAMC,QAAQ,GAAGV,WAAW,CAACM,KAAK,IAAGA,KAAK,CAACC,WAAN,CAAkBG,QAA3B,CAA5B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,SACII,SAAS,gBACJ;AAAK,IAAA,SAAS,EAAER,MAAM,CAAC,yBAAD,CAAtB;AAAmD,IAAA,EAAE,EAAC,yBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC;AAAK,IAAA,SAAS,EAAEA,MAAM,CAAC,WAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEA,MAAM,CAAC,cAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAG,GAAEA,MAAM,CAAC,KAAD,CAAQ,IAAGA,MAAM,CAAC,UAAD,CAAa,eAArD;AAAqE,IAAA,OAAO,EAAE,MAAM;AAACc,MAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AAAuB,KAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,SAAS,EAAEL,MAAM,CAAC,iBAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAEA,MAAM,CAAC,OAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEa,QADP;AAEE,IAAA,WAAW,EAAC,GAFd;AAGE,IAAA,KAAK,EAAC,yEAHR;AAIE,IAAA,eAAe,EAAC,MAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CAFD,CADI,GAkBH,IAnBV;AAqBH,CArCD;;AAsCA,eAAeP,WAAf","sourcesContent":["import React,{useEffect} from 'react'\nimport styles from './VideoPlayer.module.css'\nimport {\n  disableBodyScroll,\n  enableBodyScroll,\n} from \"body-scroll-lock\";\nimport {useSelector, useDispatch} from 'react-redux'\nimport {closeVideo} from '../../redux/actions'\nconst VideoPlayer = (props) => {\n    \n    const isPlaying = useSelector(state => state.videoPlayer.isPlaying)\n  \n\n    useEffect(() => {\n      if(isPlaying){\n        disableBodyScroll(props.scrollLockRef.current)\n      } else{\n        enableBodyScroll(props.scrollLockRef.current)\n      }\n\n    },[isPlaying, props.scrollLockRef.current])\n\n    const selected = useSelector(state=> state.videoPlayer.selected)\n    const dispatch = useDispatch();\n    return (\n        isPlaying? \n            (<div className={styles[\"youtube-video-container\"]} id=\"youtube-video-container\">\n            \n              <div className={styles[\"closeable\"]}>\n                <div className={styles[\"close-button\"]}>\n                  <i className={`${styles[\"fas\"]} ${styles[\"fa-times\"]} fas fa-times`} onClick={() => {dispatch(closeVideo())}}></i>\n                  <label className={styles[\"close-btn-label\"]}>Close</label>\n                </div>\n                <div className={styles[\"video\"]}>\n                  <iframe\n                    src={selected}\n                    frameborder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen=\"true\"\n                  ></iframe>\n                </div>\n              </div>\n            </div>)\n            : null        \n    )\n};\nexport default VideoPlayer"]},"metadata":{},"sourceType":"module"}