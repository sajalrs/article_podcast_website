{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block, Value } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from 'image-extensions';\nimport isUrl from 'is-url';\nconst initialValue = Value.fromJSON({\n  document: {\n    nodes: [{\n      object: \"block\",\n      type: \"paragraph\",\n      nodes: [{\n        object: \"text\",\n        leaves: [{\n          text: \"This text is editable\"\n        }]\n      }]\n    }]\n  }\n});\n\nconst TextEditor = () => {\n  const [value, setValue] = useState(initialValue);\n  const ref = useRef();\n  const DEFAULT_NODE = 'paragraph';\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n\n  const hasMark = type => {\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  const hasBlock = type => {\n    return value.blocks.some(node => node.type === type);\n  };\n\n  const isImage = url => {\n    return imageExtensions.includes(getExtension(url));\n  };\n\n  const getExtension = url => {\n    return new URL(url).pathname.split('.').pop;\n  };\n\n  const insertImage = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: 'image',\n      data: {\n        src\n      }\n    });\n  };\n\n  const schema = {\n    document: {\n      last: {\n        type: 'paragraph'\n      },\n      normalize: (editor, {\n        code,\n        node,\n        child\n      }) => {\n        switch (code) {\n          case 'last_child_type_invalid':\n            {\n              const paragraph = Block.create('paragraph');\n              return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n            }\n        }\n      }\n    },\n    blocks: {\n      image: {\n        isVoid: true\n      }\n    }\n  };\n\n  const renderMarkButton = (type, icon) => {\n    const isActive = hasMark(type);\n    return /*#__PURE__*/React.createElement(\"button\", {\n      active: isActive,\n      onPointerDown: event => onClickMark(event, type),\n      className: isActive ? `styles[\"active] styles[\"tooltip-icon-button\"]` : styles[\"tooltip-icon-button\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderImageButton = icon => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: styles[\"tooltip-icon-button\"],\n      onPointerDown: onClickImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderBlockButton = (type, icon) => {\n    let isActive = hasBlock(type);\n\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const {\n        document,\n        blocks\n      } = value;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: isActive ? `styles[\"active] styles[\"tooltip-icon-button\"]` : styles[\"tooltip-icon-button\"],\n      active: isActive,\n      onPointerDown: event => onClickBlock(event, type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderBlock = (props, editor, next) => {\n    const {\n      attributes,\n      children,\n      node\n    } = props;\n\n    switch (node.type) {\n      case \"block-quote\":\n        return /*#__PURE__*/React.createElement(\"blockquote\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"bulleted-list\":\n        return /*#__PURE__*/React.createElement(\"ul\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"heading-one\":\n        return /*#__PURE__*/React.createElement(\"h1\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"heading-two\":\n        return /*#__PURE__*/React.createElement(\"h2\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"list-item\":\n        return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"numbered-list\":\n        return /*#__PURE__*/React.createElement(\"ol\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"image\":\n        {\n          const src = node.data.get('src');\n          return /*#__PURE__*/React.createElement(\"img\", Object.assign({}, attributes, {\n            src: src,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 11\n            }\n          }));\n        }\n\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const {\n      children,\n      mark,\n      attributes\n    } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return /*#__PURE__*/React.createElement(\"strong\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"code\":\n        return /*#__PURE__*/React.createElement(\"code\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"italic\":\n        return /*#__PURE__*/React.createElement(\"em\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"underlined\":\n        return /*#__PURE__*/React.createElement(\"u\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 16\n          }\n        }), children);\n\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = event => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\");\n    if (!src) return;\n    ref.current.command(insertImage, src);\n  };\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document; // Handle everything but list buttons.\n\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some(block => {\n        return !!document.getClosest(block.key, parent => parent.type === type);\n      });\n\n      if (isList && isType) {\n        editor.setBlocks(DEFAULT_NODE).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor.unwrapBlock(type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\").wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n  const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event);\n    if (!target && event.type === 'drop') return next();\n    const transfer = getEventTransfer(event);\n    const {\n      type,\n      text,\n      files\n    } = transfer;\n\n    if (type === 'files') {\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split('/');\n        if (mime !== 'image') continue;\n        reader.addEventListener('load', () => {\n          editor.command(insertImage, reader.result, target);\n        });\n        reader.readAsDataURL(file);\n      }\n\n      return;\n    }\n\n    if (type === 'text') {\n      if (!isUrl(text)) return next();\n      if (!isImage(text)) return next();\n      editor.command(insertImage, text, target);\n      return;\n    }\n\n    next();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"overarching\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormatToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, renderMarkButton(\"bold\", `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`), renderMarkButton(\"italic\", `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`), renderMarkButton(\"underlined\", `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`), renderMarkButton(\"code\", `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`), renderBlockButton(\"heading-one\", `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`), renderBlockButton(\"heading-two\", `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`), renderBlockButton(\"block-quote\", `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`), renderBlockButton(\"numbered-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`), renderBlockButton(\"bulleted-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`), renderImageButton(\"fas fa-image\"), /*#__PURE__*/React.createElement(\"button\", {\n    onPointerDown: () => console.log(value.document),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: `${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Editor, {\n    ref: ref,\n    className: styles[\"Editor\"],\n    value: value,\n    onChange: opts => setValue(opts.value),\n    onKeyDown: onKeyDown,\n    renderMark: renderMark,\n    renderBlock: renderBlock,\n    onDrop: onDropOrPaste,\n    schema: schema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TextEditor;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","useState","useRef","Editor","getEventTransfer","Block","Value","styles","FormatToolbar","isKeyHotkey","imageExtensions","isUrl","initialValue","fromJSON","document","nodes","object","type","leaves","text","TextEditor","value","setValue","ref","DEFAULT_NODE","isBoldHotkey","isItalicHotkey","isUnderlinedHotkey","isCodeHotkey","hasMark","activeMarks","some","mark","hasBlock","blocks","node","isImage","url","includes","getExtension","URL","pathname","split","pop","insertImage","editor","src","target","select","insertBlock","data","schema","last","normalize","code","child","paragraph","create","insertNodeByKey","key","size","image","isVoid","renderMarkButton","icon","isActive","event","onClickMark","renderImageButton","onClickImage","renderBlockButton","parent","getParent","first","onClickBlock","renderBlock","props","next","attributes","children","get","renderMark","onKeyDown","preventDefault","toggleMark","current","window","prompt","command","isList","setBlocks","unwrapBlock","isType","block","getClosest","wrapBlock","onDropOrPaste","findEventRange","transfer","files","file","reader","FileReader","mime","addEventListener","result","readAsDataURL","console","log","opts"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block, Value } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from 'image-extensions'\nimport isUrl from 'is-url'\n\n\nconst initialValue = Value.fromJSON({\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"paragraph\",\n        nodes: [\n          {\n            object: \"text\",\n            leaves: [\n              {\n                text: \"This text is editable\",\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n});\n\nconst TextEditor = () => {\n  const [value, setValue] = useState(initialValue);\n  const ref = useRef();\n  const DEFAULT_NODE = 'paragraph'\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n\n  const hasMark = type => {\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n const hasBlock = type => {\n    return value.blocks.some(node => node.type === type)\n  }\n\n  const isImage = (url) => {\n    return imageExtensions.includes(getExtension(url));\n  }\n\n  const getExtension = (url) => {\n      return new URL(url).pathname.split('.').pop;\n  }\n\n  const insertImage = (editor, src, target) => {\n    if(target){\n        editor.select(target)\n    }\n\n    editor.insertBlock({\n        type: 'image',\n        data: {src},\n    })\n  } \n\n  const schema = {\n    document: {\n      last: { type: 'paragraph' },\n      normalize: (editor, { code, node, child }) => {\n        switch (code) {\n          case 'last_child_type_invalid': {\n            const paragraph = Block.create('paragraph')\n            return editor.insertNodeByKey(node.key, node.nodes.size, paragraph)\n          }\n        }\n      },\n    },\n    blocks: {\n      image: {\n        isVoid: true,\n      },\n    },\n  }\n  \n\n  const renderMarkButton = (type, icon) => {\n    const isActive = hasMark(type);\n    return (\n      <button\n        active={isActive}\n        onPointerDown={(event) => onClickMark(event, type)}\n        className={isActive? `styles[\"active] styles[\"tooltip-icon-button\"]`: styles[\"tooltip-icon-button\"]}\n      >\n        <i className={icon} />\n      </button>\n    );\n  };\n\n  const renderImageButton = (icon) => {\n      return(\n        <button\n        className={styles[\"tooltip-icon-button\"]}\n        onPointerDown={onClickImage}\n      >\n        <i className={icon} />\n      </button>\n      )\n  }\n\n  const renderBlockButton = (type, icon) => {\n    let isActive = hasBlock(type);\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const { document, blocks } = value;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return (\n      <button\n      className={isActive? `styles[\"active] styles[\"tooltip-icon-button\"]`: styles[\"tooltip-icon-button\"]}\n        active={isActive}\n        onPointerDown={(event) => onClickBlock(event, type)}\n      >\n        <i className={icon}></i>\n      </button>\n    );\n  };\n\n  const renderBlock = (props, editor, next) => {\n    const { attributes, children, node } = props;\n\n    switch (node.type) {\n      case \"block-quote\":\n        return <blockquote {...attributes}>{children}</blockquote>;\n      case \"bulleted-list\":\n        return <ul {...attributes}>{children}</ul>;\n      case \"heading-one\":\n        return <h1 {...attributes}>{children}</h1>;\n      case \"heading-two\":\n        return <h2 {...attributes}>{children}</h2>;\n      case \"list-item\":\n        return <li {...attributes}>{children}</li>;\n      case \"numbered-list\":\n        return <ol {...attributes}>{children}</ol>;\n      case \"image\": {\n        const src = node.data.get('src')\n        return (\n          <img\n            {...attributes}\n            src={src}\n          />\n        )\n      }\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return <strong {...attributes}>{children}</strong>;\n      case \"code\":\n        return <code {...attributes}>{children}</code>;\n      case \"italic\":\n        return <em {...attributes}>{children}</em>;\n      case \"underlined\":\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = event => {\n      event.preventDefault();\n      const src = window.prompt(\"enter the URL of the image:\");\n      if(!src) return\n      ref.current.command(insertImage, src)\n  }\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document;\n\n    // Handle everything but list buttons.\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor\n          .setBlocks(isActive ? DEFAULT_NODE : type)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some((block) => {\n        return !!document.getClosest(\n          block.key,\n          (parent) => parent.type === type\n        );\n      });\n\n      if (isList && isType) {\n        editor\n          .setBlocks(DEFAULT_NODE)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor\n          .unwrapBlock(\n            type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\"\n          )\n          .wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n   const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event)\n    if (!target && event.type === 'drop') return next()\n\n    const transfer = getEventTransfer(event)\n    const { type, text, files } = transfer\n\n    if (type === 'files') {\n      for (const file of files) {\n        const reader = new FileReader()\n        const [mime] = file.type.split('/')\n        if (mime !== 'image') continue\n\n        reader.addEventListener('load', () => {\n          editor.command(insertImage, reader.result, target)\n        })\n\n        reader.readAsDataURL(file)\n      }\n      return\n    }\n\n    if (type === 'text') {\n      if (!isUrl(text)) return next()\n      if (!isImage(text)) return next()\n      editor.command(insertImage, text, target)\n      return\n    }\n\n    next()\n  }\n\n\n  return (\n    <div className={styles[\"overarching\"]}>\n      <FormatToolbar>\n        {renderMarkButton(\"bold\", `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`)}\n        {renderMarkButton(\"italic\", `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`)}\n        {renderMarkButton(\"underlined\", `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`)}\n        {renderMarkButton(\"code\", `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`)}\n        {renderBlockButton(\"heading-one\", `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`)}\n        {renderBlockButton(\"heading-two\", `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`)}\n        {renderBlockButton(\"block-quote\", `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`)}\n        {renderBlockButton(\"numbered-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`)}\n        {renderBlockButton(\"bulleted-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`)}\n        {renderImageButton(\"fas fa-image\")}\n        <button\n        onPointerDown={() => console.log(value.document)}>\n            <i className={`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`}></i>\n        </button>\n      </FormatToolbar>\n      <Editor\n        ref={ref}\n        className={styles[\"Editor\"]}\n        value={value}\n        onChange={(opts) => setValue(opts.value)}\n        onKeyDown={onKeyDown}\n        renderMark={renderMark}\n        renderBlock={renderBlock}\n        onDrop={onDropOrPaste}\n        schema={schema}\n      />\n    </div>\n  );\n  };\n\n\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}