{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/AudioPlayer/AudioPlayer.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nconst AudioPlayer = () => {\n  const [selectedTrack, setSelectedTrack] = useState({\n    title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link: \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    duration: 0,\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n    currentTime: 0\n  });\n  const [player, setPlayer] = useState(\"paused\");\n  const audioRef = useRef();\n  const prevTrack = usePrevious(selectedTrack);\n  const prevPlayer = usePrevious(player); // const [duration, setDuration] = useState(0);\n\n  const seekBarRef = useRef();\n  useEffect(() => {\n    console.log(\"Ran\");\n\n    if (selectedTrack !== prevTrack) {\n      let track;\n      track = selectedTrack ? selectedTrack.link : null;\n\n      if (track) {\n        audioRef.current.src = track;\n        audioRef.current.play();\n        setPlayer(\"playing\");\n      }\n    }\n  }, [selectedTrack.title]);\n  useEffect(() => {\n    console.log(\"Ran this\");\n\n    if (player !== prevPlayer) {\n      if (player === \"paused\") {\n        audioRef.current.pause();\n      } else if (player === \"playing\" && prevPlayer === \"paused\") {\n        audioRef.current.play();\n      }\n    }\n  }, [player]);\n  useEffect(() => {\n    console.log(\"Runner\");\n    audioRef.current.addEventListener(\"timeupdate\", e => {\n      setSelectedTrack({ ...selectedTrack,\n        currentTime: e.target.currentTime\n      });\n      setSelectedTrack({ ...selectedTrack,\n        duration: e.target.duration\n      });\n    });\n    return () => {\n      audioRef.current.removeEventListener(\"timeupdate\", () => {});\n    };\n  }, []); // useEffect(() => {\n  //   seekBarRef.current.addEventListener(\"change\", e => {\n  //       const time = duration * (e.target.value / 100);\n  //       audioRef.current.currentTime = time;\n  //       setCurrentTime(time);\n  //   })\n  //     return () => {\n  //       seekBarRef.current.removeEventListener(\"change\", () => {});\n  //     }\n  // }, [])\n\n  const handleSliderChange = e => {\n    const time = selectedTrack.duration * (e.target.value / 100);\n    audioRef.current.currentTime = time;\n    setSelectedTrack({ ...selectedTrack,\n      currentTime: time\n    });\n  };\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  function getTime(time) {\n    if (!isNaN(time)) {\n      return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2);\n    }\n  }\n\n  const progressDuration = getTime(selectedTrack.duration);\n  const progressTime = getTime(selectedTrack.currentTime);\n  const progress = 100 / duration * selectedTrack.currentTime;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, player === \"paused\" && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayer(\"playing\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Play\"), player === \"playing\" && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayer(\"paused\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Pause\"), player === \"playing\" || player === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, progressTime, \" / \", progressDuration, /*#__PURE__*/React.createElement(\"input\", {\n    ref: seekBarRef,\n    type: \"range\",\n    onChange: handleSliderChange,\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })) : \"\"), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: audioRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AudioPlayer;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/AudioPlayer/AudioPlayer.js"],"names":["React","useState","useRef","useEffect","AudioPlayer","selectedTrack","setSelectedTrack","title","by","link","duration","date","currentTime","player","setPlayer","audioRef","prevTrack","usePrevious","prevPlayer","seekBarRef","console","log","track","current","src","play","pause","addEventListener","e","target","removeEventListener","handleSliderChange","time","value","ref","getTime","isNaN","Math","floor","slice","progressDuration","progressTime","progress"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nconst AudioPlayer = () => {\n  const [selectedTrack, setSelectedTrack] = useState({\n    title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link:\n      \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    duration: 0,\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n    currentTime: 0\n  });\n  const [player, setPlayer] = useState(\"paused\");\n  const audioRef = useRef();\n  const prevTrack = usePrevious(selectedTrack);\n  const prevPlayer = usePrevious(player);\n  // const [duration, setDuration] = useState(0);\n  const seekBarRef = useRef()\n  useEffect(() => {\n      console.log(\"Ran\")\n    if (selectedTrack !== prevTrack) {\n      let track;\n      track = selectedTrack? selectedTrack.link : null;\n      if (track) {\n        audioRef.current.src = track;\n        audioRef.current.play();\n        setPlayer(\"playing\");\n      }\n    }\n  }, [selectedTrack.title]);\n\n  useEffect(() => {\n      console.log(\"Ran this\")\n    if (player !== prevPlayer) {\n      if (player === \"paused\") {\n        audioRef.current.pause();\n      } else if (player === \"playing\" && prevPlayer === \"paused\") {\n        audioRef.current.play();\n      }\n    }\n  },[player]);\n\n  useEffect(() => {\n    console.log(\"Runner\");\n    audioRef.current.addEventListener(\"timeupdate\", e => {\n        setSelectedTrack({...selectedTrack, currentTime: e.target.currentTime})\n        setSelectedTrack({...selectedTrack, duration: e.target.duration})\n        \n    })\n      return () => {\n        audioRef.current.removeEventListener(\"timeupdate\", () => {});\n      }\n  }, [])\n\n  // useEffect(() => {\n  //   seekBarRef.current.addEventListener(\"change\", e => {\n  //       const time = duration * (e.target.value / 100);\n  //       audioRef.current.currentTime = time;\n  //       setCurrentTime(time);\n  //   })\n  //     return () => {\n  //       seekBarRef.current.removeEventListener(\"change\", () => {});\n  //     }\n  // }, [])\n\n  const handleSliderChange = (e) => {\n    const time = selectedTrack.duration * (e.target.value / 100);\n    audioRef.current.currentTime = time;\n    setSelectedTrack({...selectedTrack, currentTime: time})\n  }\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n  \n  function getTime(time) {\n    if(!isNaN(time)) {\n      return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n    }\n  }\n  const progressDuration = getTime(selectedTrack.duration);\n  const progressTime = getTime(selectedTrack.currentTime);\n  const progress = (100/ duration) * selectedTrack.currentTime\n  return (\n    <div>\n      <div>\n        {player === \"paused\" && (\n          <button onClick={() => setPlayer(\"playing\")}>Play</button>\n        )}\n        {player === \"playing\" && (\n          <button onClick={() => setPlayer(\"paused\")}>Pause</button>\n        )}\n      {player === \"playing\" || player === \"paused\" ? (\n          <div>\n            {progressTime} / {progressDuration}\n            <input ref={seekBarRef} type=\"range\" onChange={handleSliderChange} value={progress}/>\n          </div>\n        ) : (\n          \"\"\n        )}\n            \n      </div>\n\n      <audio ref={audioRef} />\n      {/*https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a  */}\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}