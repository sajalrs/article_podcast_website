{"ast":null,"code":"/**\n * This is a straight rip-off of the React.js ReactPropTypes.js proptype validators,\n * modified to make it possible to validate Immutable.js data.\n *     ImmutableTypes.listOf is patterned after React.PropTypes.arrayOf, but for Immutable.List\n *     ImmutableTypes.shape  is based on React.PropTypes.shape, but for any Immutable.Iterable\n */\n\"use strict\";\n\nvar Immutable = require(\"immutable\");\n\nvar ANONYMOUS = \"<<anonymous>>\";\nvar ImmutablePropTypes;\n\nif (process.env.NODE_ENV !== \"production\") {\n  ImmutablePropTypes = {\n    listOf: createListOfTypeChecker,\n    mapOf: createMapOfTypeChecker,\n    orderedMapOf: createOrderedMapOfTypeChecker,\n    setOf: createSetOfTypeChecker,\n    orderedSetOf: createOrderedSetOfTypeChecker,\n    stackOf: createStackOfTypeChecker,\n    iterableOf: createIterableOfTypeChecker,\n    recordOf: createRecordOfTypeChecker,\n    shape: createShapeChecker,\n    contains: createShapeChecker,\n    mapContains: createMapContainsChecker,\n    orderedMapContains: createOrderedMapContainsChecker,\n    // Primitive Types\n    list: createImmutableTypeChecker(\"List\", Immutable.List.isList),\n    map: createImmutableTypeChecker(\"Map\", Immutable.Map.isMap),\n    orderedMap: createImmutableTypeChecker(\"OrderedMap\", Immutable.OrderedMap.isOrderedMap),\n    set: createImmutableTypeChecker(\"Set\", Immutable.Set.isSet),\n    orderedSet: createImmutableTypeChecker(\"OrderedSet\", Immutable.OrderedSet.isOrderedSet),\n    stack: createImmutableTypeChecker(\"Stack\", Immutable.Stack.isStack),\n    seq: createImmutableTypeChecker(\"Seq\", Immutable.Seq.isSeq),\n    record: createImmutableTypeChecker(\"Record\", function (isRecord) {\n      return isRecord instanceof Immutable.Record;\n    }),\n    iterable: createImmutableTypeChecker(\"Iterable\", Immutable.Iterable.isIterable)\n  };\n} else {\n  var productionTypeChecker = function productionTypeChecker() {\n    invariant(false, \"ImmutablePropTypes type checking code is stripped in production.\");\n  };\n\n  productionTypeChecker.isRequired = productionTypeChecker;\n\n  var getProductionTypeChecker = function getProductionTypeChecker() {\n    return productionTypeChecker;\n  };\n\n  ImmutablePropTypes = {\n    listOf: getProductionTypeChecker,\n    mapOf: getProductionTypeChecker,\n    orderedMapOf: getProductionTypeChecker,\n    setOf: getProductionTypeChecker,\n    orderedSetOf: getProductionTypeChecker,\n    stackOf: getProductionTypeChecker,\n    iterableOf: getProductionTypeChecker,\n    recordOf: getProductionTypeChecker,\n    shape: getProductionTypeChecker,\n    contains: getProductionTypeChecker,\n    mapContains: getProductionTypeChecker,\n    orderedMapContains: getProductionTypeChecker,\n    // Primitive Types\n    list: productionTypeChecker,\n    map: productionTypeChecker,\n    orderedMap: productionTypeChecker,\n    set: productionTypeChecker,\n    orderedSet: productionTypeChecker,\n    stack: productionTypeChecker,\n    seq: productionTypeChecker,\n    record: productionTypeChecker,\n    iterable: productionTypeChecker\n  };\n}\n\nImmutablePropTypes.iterable.indexed = createIterableSubclassTypeChecker(\"Indexed\", Immutable.Iterable.isIndexed);\nImmutablePropTypes.iterable.keyed = createIterableSubclassTypeChecker(\"Keyed\", Immutable.Iterable.isKeyed);\n\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n\n  if (Array.isArray(propValue)) {\n    return \"array\";\n  }\n\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return \"object\";\n  }\n\n  if (propValue instanceof Immutable.Iterable) {\n    return \"Immutable.\" + propValue.toSource().split(\" \")[0];\n  }\n\n  return propType;\n}\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      rest[_key - 6] = arguments[_key];\n    }\n\n    propFullName = propFullName || propName;\n    componentName = componentName || ANONYMOUS;\n\n    if (props[propName] == null) {\n      var locationName = location;\n\n      if (isRequired) {\n        return new Error(\"Required \" + locationName + \" `\" + propFullName + \"` was not specified in \" + (\"`\" + componentName + \"`.\"));\n      }\n    } else {\n      return validate.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n}\n\nfunction createImmutableTypeChecker(immutableClassName, immutableClassTypeValidator) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n\n    if (!immutableClassTypeValidator(propValue)) {\n      var propType = getPropType(propValue);\n      return new Error(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected `\" + immutableClassName + \"`.\"));\n    }\n\n    return null;\n  }\n\n  return createChainableTypeChecker(validate);\n}\n\nfunction createIterableSubclassTypeChecker(subclassName, validator) {\n  return createImmutableTypeChecker(\"Iterable.\" + subclassName, function (propValue) {\n    return Immutable.Iterable.isIterable(propValue) && validator(propValue);\n  });\n}\n\nfunction createIterableTypeChecker(typeChecker, immutableClassName, immutableClassTypeValidator) {\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n\n    if (!immutableClassTypeValidator(propValue)) {\n      var locationName = location;\n      var propType = getPropType(propValue);\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type \" + (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an Immutable.js \" + immutableClassName + \".\"));\n    }\n\n    if (typeof typeChecker !== \"function\") {\n      return new Error(\"Invalid typeChecker supplied to `\" + componentName + \"` \" + (\"for propType `\" + propFullName + \"`, expected a function.\"));\n    }\n\n    var propValues = propValue.valueSeq().toArray();\n\n    for (var i = 0, len = propValues.length; i < len; i++) {\n      var error = typeChecker.apply(undefined, [propValues, i, componentName, location, \"\" + propFullName + \"[\" + i + \"]\"].concat(rest));\n\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n  }\n\n  return createChainableTypeChecker(validate);\n}\n\nfunction createKeysTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n\n    if (typeof typeChecker !== \"function\") {\n      return new Error(\"Invalid keysTypeChecker (optional second argument) supplied to `\" + componentName + \"` \" + (\"for propType `\" + propFullName + \"`, expected a function.\"));\n    }\n\n    var keys = propValue.keySeq().toArray();\n\n    for (var i = 0, len = keys.length; i < len; i++) {\n      var error = typeChecker.apply(undefined, [keys, i, componentName, location, \"\" + propFullName + \" -> key(\" + keys[i] + \")\"].concat(rest));\n\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n  }\n\n  return createChainableTypeChecker(validate);\n}\n\nfunction createListOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"List\", Immutable.List.isList);\n}\n\nfunction createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, immutableClassName, immutableClassTypeValidator) {\n  function validate() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return createIterableTypeChecker(valuesTypeChecker, immutableClassName, immutableClassTypeValidator).apply(undefined, args) || keysTypeChecker && createKeysTypeChecker(keysTypeChecker).apply(undefined, args);\n  }\n\n  return createChainableTypeChecker(validate);\n}\n\nfunction createMapOfTypeChecker(valuesTypeChecker, keysTypeChecker) {\n  return createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, \"Map\", Immutable.Map.isMap);\n}\n\nfunction createOrderedMapOfTypeChecker(valuesTypeChecker, keysTypeChecker) {\n  return createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, \"OrderedMap\", Immutable.OrderedMap.isOrderedMap);\n}\n\nfunction createSetOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Set\", Immutable.Set.isSet);\n}\n\nfunction createOrderedSetOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"OrderedSet\", Immutable.OrderedSet.isOrderedSet);\n}\n\nfunction createStackOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Stack\", Immutable.Stack.isStack);\n}\n\nfunction createIterableOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Iterable\", Immutable.Iterable.isIterable);\n}\n\nfunction createRecordOfTypeChecker(recordKeys) {\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n\n    if (!(propValue instanceof Immutable.Record)) {\n      var propType = getPropType(propValue);\n      var locationName = location;\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected an Immutable.js Record.\"));\n    }\n\n    for (var key in recordKeys) {\n      var checker = recordKeys[key];\n\n      if (!checker) {\n        continue;\n      }\n\n      var mutablePropValue = propValue.toObject();\n      var error = checker.apply(undefined, [mutablePropValue, key, componentName, location, \"\" + propFullName + \".\" + key].concat(rest));\n\n      if (error) {\n        return error;\n      }\n    }\n  }\n\n  return createChainableTypeChecker(validate);\n} // there is some irony in the fact that shapeTypes is a standard hash and not an immutable collection\n\n\nfunction createShapeTypeChecker(shapeTypes) {\n  var immutableClassName = arguments[1] === undefined ? \"Iterable\" : arguments[1];\n  var immutableClassTypeValidator = arguments[2] === undefined ? Immutable.Iterable.isIterable : arguments[2];\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n\n    if (!immutableClassTypeValidator(propValue)) {\n      var propType = getPropType(propValue);\n      var locationName = location;\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected an Immutable.js \" + immutableClassName + \".\"));\n    }\n\n    var mutablePropValue = propValue.toObject();\n\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n\n      if (!checker) {\n        continue;\n      }\n\n      var error = checker.apply(undefined, [mutablePropValue, key, componentName, location, \"\" + propFullName + \".\" + key].concat(rest));\n\n      if (error) {\n        return error;\n      }\n    }\n  }\n\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeChecker(shapeTypes) {\n  return createShapeTypeChecker(shapeTypes);\n}\n\nfunction createMapContainsChecker(shapeTypes) {\n  return createShapeTypeChecker(shapeTypes, \"Map\", Immutable.Map.isMap);\n}\n\nfunction createOrderedMapContainsChecker(shapeTypes) {\n  return createShapeTypeChecker(shapeTypes, \"OrderedMap\", Immutable.OrderedMap.isOrderedMap);\n}\n\nmodule.exports = ImmutablePropTypes;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js"],"names":["Immutable","require","ANONYMOUS","ImmutablePropTypes","process","env","NODE_ENV","listOf","createListOfTypeChecker","mapOf","createMapOfTypeChecker","orderedMapOf","createOrderedMapOfTypeChecker","setOf","createSetOfTypeChecker","orderedSetOf","createOrderedSetOfTypeChecker","stackOf","createStackOfTypeChecker","iterableOf","createIterableOfTypeChecker","recordOf","createRecordOfTypeChecker","shape","createShapeChecker","contains","mapContains","createMapContainsChecker","orderedMapContains","createOrderedMapContainsChecker","list","createImmutableTypeChecker","List","isList","map","Map","isMap","orderedMap","OrderedMap","isOrderedMap","set","Set","isSet","orderedSet","OrderedSet","isOrderedSet","stack","Stack","isStack","seq","Seq","isSeq","record","isRecord","Record","iterable","Iterable","isIterable","productionTypeChecker","invariant","isRequired","getProductionTypeChecker","indexed","createIterableSubclassTypeChecker","isIndexed","keyed","isKeyed","getPropType","propValue","propType","Array","isArray","RegExp","toSource","split","createChainableTypeChecker","validate","checkType","props","propName","componentName","location","propFullName","_len","arguments","length","rest","_key","locationName","Error","apply","undefined","concat","chainedCheckType","bind","immutableClassName","immutableClassTypeValidator","subclassName","validator","createIterableTypeChecker","typeChecker","propValues","valueSeq","toArray","i","len","error","createKeysTypeChecker","keys","keySeq","createMapOfTypeCheckerFactory","valuesTypeChecker","keysTypeChecker","args","recordKeys","key","checker","mutablePropValue","toObject","createShapeTypeChecker","shapeTypes","module","exports"],"mappings":"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","sourcesContent":["/**\n * This is a straight rip-off of the React.js ReactPropTypes.js proptype validators,\n * modified to make it possible to validate Immutable.js data.\n *     ImmutableTypes.listOf is patterned after React.PropTypes.arrayOf, but for Immutable.List\n *     ImmutableTypes.shape  is based on React.PropTypes.shape, but for any Immutable.Iterable\n */\n\"use strict\";\n\nvar Immutable = require(\"immutable\");\n\nvar ANONYMOUS = \"<<anonymous>>\";\n\nvar ImmutablePropTypes;\n\nif (process.env.NODE_ENV !== \"production\") {\n  ImmutablePropTypes = {\n    listOf: createListOfTypeChecker,\n    mapOf: createMapOfTypeChecker,\n    orderedMapOf: createOrderedMapOfTypeChecker,\n    setOf: createSetOfTypeChecker,\n    orderedSetOf: createOrderedSetOfTypeChecker,\n    stackOf: createStackOfTypeChecker,\n    iterableOf: createIterableOfTypeChecker,\n    recordOf: createRecordOfTypeChecker,\n    shape: createShapeChecker,\n    contains: createShapeChecker,\n    mapContains: createMapContainsChecker,\n    orderedMapContains: createOrderedMapContainsChecker,\n    // Primitive Types\n    list: createImmutableTypeChecker(\"List\", Immutable.List.isList),\n    map: createImmutableTypeChecker(\"Map\", Immutable.Map.isMap),\n    orderedMap: createImmutableTypeChecker(\"OrderedMap\", Immutable.OrderedMap.isOrderedMap),\n    set: createImmutableTypeChecker(\"Set\", Immutable.Set.isSet),\n    orderedSet: createImmutableTypeChecker(\"OrderedSet\", Immutable.OrderedSet.isOrderedSet),\n    stack: createImmutableTypeChecker(\"Stack\", Immutable.Stack.isStack),\n    seq: createImmutableTypeChecker(\"Seq\", Immutable.Seq.isSeq),\n    record: createImmutableTypeChecker(\"Record\", function (isRecord) {\n      return isRecord instanceof Immutable.Record;\n    }),\n    iterable: createImmutableTypeChecker(\"Iterable\", Immutable.Iterable.isIterable)\n  };\n} else {\n  var productionTypeChecker = function productionTypeChecker() {\n    invariant(false, \"ImmutablePropTypes type checking code is stripped in production.\");\n  };\n  productionTypeChecker.isRequired = productionTypeChecker;\n  var getProductionTypeChecker = function getProductionTypeChecker() {\n    return productionTypeChecker;\n  };\n\n  ImmutablePropTypes = {\n    listOf: getProductionTypeChecker,\n    mapOf: getProductionTypeChecker,\n    orderedMapOf: getProductionTypeChecker,\n    setOf: getProductionTypeChecker,\n    orderedSetOf: getProductionTypeChecker,\n    stackOf: getProductionTypeChecker,\n    iterableOf: getProductionTypeChecker,\n    recordOf: getProductionTypeChecker,\n    shape: getProductionTypeChecker,\n    contains: getProductionTypeChecker,\n    mapContains: getProductionTypeChecker,\n    orderedMapContains: getProductionTypeChecker,\n    // Primitive Types\n    list: productionTypeChecker,\n    map: productionTypeChecker,\n    orderedMap: productionTypeChecker,\n    set: productionTypeChecker,\n    orderedSet: productionTypeChecker,\n    stack: productionTypeChecker,\n    seq: productionTypeChecker,\n    record: productionTypeChecker,\n    iterable: productionTypeChecker\n  };\n}\n\nImmutablePropTypes.iterable.indexed = createIterableSubclassTypeChecker(\"Indexed\", Immutable.Iterable.isIndexed);\nImmutablePropTypes.iterable.keyed = createIterableSubclassTypeChecker(\"Keyed\", Immutable.Iterable.isKeyed);\n\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return \"array\";\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return \"object\";\n  }\n  if (propValue instanceof Immutable.Iterable) {\n    return \"Immutable.\" + propValue.toSource().split(\" \")[0];\n  }\n  return propType;\n}\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      rest[_key - 6] = arguments[_key];\n    }\n\n    propFullName = propFullName || propName;\n    componentName = componentName || ANONYMOUS;\n    if (props[propName] == null) {\n      var locationName = location;\n      if (isRequired) {\n        return new Error(\"Required \" + locationName + \" `\" + propFullName + \"` was not specified in \" + (\"`\" + componentName + \"`.\"));\n      }\n    } else {\n      return validate.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createImmutableTypeChecker(immutableClassName, immutableClassTypeValidator) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!immutableClassTypeValidator(propValue)) {\n      var propType = getPropType(propValue);\n      return new Error(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected `\" + immutableClassName + \"`.\"));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createIterableSubclassTypeChecker(subclassName, validator) {\n  return createImmutableTypeChecker(\"Iterable.\" + subclassName, function (propValue) {\n    return Immutable.Iterable.isIterable(propValue) && validator(propValue);\n  });\n}\n\nfunction createIterableTypeChecker(typeChecker, immutableClassName, immutableClassTypeValidator) {\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (!immutableClassTypeValidator(propValue)) {\n      var locationName = location;\n      var propType = getPropType(propValue);\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type \" + (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an Immutable.js \" + immutableClassName + \".\"));\n    }\n\n    if (typeof typeChecker !== \"function\") {\n      return new Error(\"Invalid typeChecker supplied to `\" + componentName + \"` \" + (\"for propType `\" + propFullName + \"`, expected a function.\"));\n    }\n\n    var propValues = propValue.valueSeq().toArray();\n    for (var i = 0, len = propValues.length; i < len; i++) {\n      var error = typeChecker.apply(undefined, [propValues, i, componentName, location, \"\" + propFullName + \"[\" + i + \"]\"].concat(rest));\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createKeysTypeChecker(typeChecker) {\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (typeof typeChecker !== \"function\") {\n      return new Error(\"Invalid keysTypeChecker (optional second argument) supplied to `\" + componentName + \"` \" + (\"for propType `\" + propFullName + \"`, expected a function.\"));\n    }\n\n    var keys = propValue.keySeq().toArray();\n    for (var i = 0, len = keys.length; i < len; i++) {\n      var error = typeChecker.apply(undefined, [keys, i, componentName, location, \"\" + propFullName + \" -> key(\" + keys[i] + \")\"].concat(rest));\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createListOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"List\", Immutable.List.isList);\n}\n\nfunction createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, immutableClassName, immutableClassTypeValidator) {\n  function validate() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return createIterableTypeChecker(valuesTypeChecker, immutableClassName, immutableClassTypeValidator).apply(undefined, args) || keysTypeChecker && createKeysTypeChecker(keysTypeChecker).apply(undefined, args);\n  }\n\n  return createChainableTypeChecker(validate);\n}\n\nfunction createMapOfTypeChecker(valuesTypeChecker, keysTypeChecker) {\n  return createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, \"Map\", Immutable.Map.isMap);\n}\n\nfunction createOrderedMapOfTypeChecker(valuesTypeChecker, keysTypeChecker) {\n  return createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, \"OrderedMap\", Immutable.OrderedMap.isOrderedMap);\n}\n\nfunction createSetOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Set\", Immutable.Set.isSet);\n}\n\nfunction createOrderedSetOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"OrderedSet\", Immutable.OrderedSet.isOrderedSet);\n}\n\nfunction createStackOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Stack\", Immutable.Stack.isStack);\n}\n\nfunction createIterableOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Iterable\", Immutable.Iterable.isIterable);\n}\n\nfunction createRecordOfTypeChecker(recordKeys) {\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (!(propValue instanceof Immutable.Record)) {\n      var propType = getPropType(propValue);\n      var locationName = location;\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected an Immutable.js Record.\"));\n    }\n    for (var key in recordKeys) {\n      var checker = recordKeys[key];\n      if (!checker) {\n        continue;\n      }\n      var mutablePropValue = propValue.toObject();\n      var error = checker.apply(undefined, [mutablePropValue, key, componentName, location, \"\" + propFullName + \".\" + key].concat(rest));\n      if (error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\n// there is some irony in the fact that shapeTypes is a standard hash and not an immutable collection\nfunction createShapeTypeChecker(shapeTypes) {\n  var immutableClassName = arguments[1] === undefined ? \"Iterable\" : arguments[1];\n  var immutableClassTypeValidator = arguments[2] === undefined ? Immutable.Iterable.isIterable : arguments[2];\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (!immutableClassTypeValidator(propValue)) {\n      var propType = getPropType(propValue);\n      var locationName = location;\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected an Immutable.js \" + immutableClassName + \".\"));\n    }\n    var mutablePropValue = propValue.toObject();\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker.apply(undefined, [mutablePropValue, key, componentName, location, \"\" + propFullName + \".\" + key].concat(rest));\n      if (error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeChecker(shapeTypes) {\n  return createShapeTypeChecker(shapeTypes);\n}\n\nfunction createMapContainsChecker(shapeTypes) {\n  return createShapeTypeChecker(shapeTypes, \"Map\", Immutable.Map.isMap);\n}\n\nfunction createOrderedMapContainsChecker(shapeTypes) {\n  return createShapeTypeChecker(shapeTypes, \"OrderedMap\", Immutable.OrderedMap.isOrderedMap);\n}\n\nmodule.exports = ImmutablePropTypes;"]},"metadata":{},"sourceType":"script"}