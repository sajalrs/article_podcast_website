{"ast":null,"code":"import { isKeyHotkey } from 'is-hotkey';\nimport { IS_IOS, IS_MAC } from 'slate-dev-environment';\n/**\n * Hotkey mappings for each platform.\n *\n * @type {Object}\n */\n\nvar HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  splitBlock: 'shift?+enter',\n  undo: 'mod+z'\n};\nvar APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t'\n};\nvar WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: 'ctrl+y'\n  /**\n   * Hotkeys.\n   *\n   * @type {Object}\n   */\n\n};\nvar Hotkeys = {};\nvar IS_APPLE = IS_IOS || IS_MAC;\nvar IS_WINDOWS = !IS_APPLE;\nvar KEYS = [].concat(Object.keys(HOTKEYS)).concat(Object.keys(APPLE_HOTKEYS)).concat(Object.keys(WINDOWS_HOTKEYS));\nKEYS.forEach(function (key) {\n  var method = 'is' + key[0].toUpperCase() + key.slice(1);\n  if (Hotkeys[method]) return;\n  var generic = HOTKEYS[key];\n  var apple = APPLE_HOTKEYS[key];\n  var windows = WINDOWS_HOTKEYS[key];\n  var isGeneric = generic && isKeyHotkey(generic);\n  var isApple = apple && isKeyHotkey(apple);\n  var isWindows = windows && isKeyHotkey(windows);\n\n  Hotkeys[method] = function (event) {\n    if (isGeneric && isGeneric(event)) return true;\n    if (IS_APPLE && isApple && isApple(event)) return true;\n    if (IS_WINDOWS && isWindows && isWindows(event)) return true;\n    return false;\n  };\n});\nexport default Hotkeys;","map":{"version":3,"sources":["../src/index.js"],"names":["HOTKEYS","APPLE_HOTKEYS","WINDOWS_HOTKEYS","Hotkeys","IS_APPLE","IS_IOS","IS_WINDOWS","KEYS","Object","method","key","generic","apple","windows","isGeneric","isKeyHotkey","isApple","isWindows"],"mappings":";;AAGA;;;;;;AAMA,IAAMA,OAAAA,GAAU;QAAA,OAAA;WAEL,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,WAAA,EAFK,OAEL,CAFK;gBAAA,MAAA;eAAA,OAAA;oBAAA,WAAA;mBAAA,YAAA;kBAAA,kBAAA;iBAAA,eAAA;kBAAA,YAAA;iBAAA,aAAA;UAAA,OAAA;cAAA,cAAA;QAaR;AAbQ,CAAhB;AAgBA,IAAMC,aAAAA,GAAgB;oBAAA,QAAA;mBAAA,UAAA;oBAAA,UAAA;mBAAA,WAAA;kBAKJ,CAAA,gBAAA,EALI,QAKJ,CALI;iBAML,CAAA,aAAA,EANK,QAML,CANK;sBAAA,sBAAA;qBAQD,CAAA,mBAAA,EARC,QAQD,CARC;sBAAA,sBAAA;qBAAA,mBAAA;sBAAA,cAAA;qBAAA,gBAAA;QAAA,aAAA;sBAcA;AAdA,CAAtB;AAiBA,IAAMC,eAAAA,GAAkB;sBAAA,uBAAA;qBAAA,oBAAA;QAGhB;;;;;;;AAHgB,CAAxB;AAYA,IAAMC,OAAAA,GAAN,EAAA;AAEA,IAAMC,QAAAA,GAAWC,MAAAA,IAAjB,MAAA;AACA,IAAMC,UAAAA,GAAa,CAAnB,QAAA;AACA,IAAMC,IAAAA,GAAO,GAAA,MAAA,CACHC,MAAAA,CAAAA,IAAAA,CADG,OACHA,CADG,EAAA,MAAA,CAEHA,MAAAA,CAAAA,IAAAA,CAFG,aAEHA,CAFG,EAAA,MAAA,CAGHA,MAAAA,CAAAA,IAAAA,CAHV,eAGUA,CAHG,CAAb;AAKAD,IAAAA,CAAAA,OAAAA,CAAa,UAAA,GAAA,EAAO;MACZE,MAAAA,GAAAA,OAAcC,GAAAA,CAAAA,CAAAA,CAAAA,CAAdD,WAAcC,EAAdD,GAAqCC,GAAAA,CAAAA,KAAAA,CAA3C,CAA2CA,C;MACvCP,OAAAA,CAAJ,MAAIA,C,EAAiB;MAEfQ,OAAAA,GAAUX,OAAAA,CAAhB,GAAgBA,C;MACVY,KAAAA,GAAQX,aAAAA,CAAd,GAAcA,C;MACRY,OAAAA,GAAUX,eAAAA,CAAhB,GAAgBA,C;MAEVY,SAAAA,GAAYH,OAAAA,IAAWI,WAAAA,CAA7B,OAA6BA,C;MACvBC,OAAAA,GAAUJ,KAAAA,IAASG,WAAAA,CAAzB,KAAyBA,C;MACnBE,SAAAA,GAAYJ,OAAAA,IAAWE,WAAAA,CAA7B,OAA6BA,C;;UAE7B,M,IAAkB,UAAA,KAAA,EAAS;QACrBD,SAAAA,IAAaA,SAAAA,CAAjB,KAAiBA,C,EAAkB,OAAA,IAAA;QAC/BV,QAAAA,IAAAA,OAAAA,IAAuBY,OAAAA,CAA3B,KAA2BA,C,EAAgB,OAAA,IAAA;QACvCV,UAAAA,IAAAA,SAAAA,IAA2BW,SAAAA,CAA/B,KAA+BA,C,EAAkB,OAAA,IAAA;WACjD,K;AAJF,G;AAZFV,CAAAA","sourcesContent":["import { isKeyHotkey } from 'is-hotkey'\nimport { IS_IOS, IS_MAC } from 'slate-dev-environment'\n\n/**\n * Hotkey mappings for each platform.\n *\n * @type {Object}\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  splitBlock: 'shift?+enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: 'ctrl+y',\n}\n\n/**\n * Hotkeys.\n *\n * @type {Object}\n */\n\nconst Hotkeys = {}\n\nconst IS_APPLE = IS_IOS || IS_MAC\nconst IS_WINDOWS = !IS_APPLE\nconst KEYS = []\n  .concat(Object.keys(HOTKEYS))\n  .concat(Object.keys(APPLE_HOTKEYS))\n  .concat(Object.keys(WINDOWS_HOTKEYS))\n\nKEYS.forEach(key => {\n  const method = `is${key[0].toUpperCase()}${key.slice(1)}`\n  if (Hotkeys[method]) return\n\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n\n  const isGeneric = generic && isKeyHotkey(generic)\n  const isApple = apple && isKeyHotkey(apple)\n  const isWindows = windows && isKeyHotkey(windows)\n\n  Hotkeys[method] = event => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (IS_WINDOWS && isWindows && isWindows(event)) return true\n    return false\n  }\n})\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default Hotkeys\n"]},"metadata":{},"sourceType":"module"}