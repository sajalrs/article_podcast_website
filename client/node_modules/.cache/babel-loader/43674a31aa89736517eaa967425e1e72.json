{"ast":null,"code":"import isBrowser from 'is-in-browser';\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * Browser matching rules.\n *\n * @type {Array}\n */\n\n\nvar BROWSER_RULES = [['edge', /Edge\\/([0-9\\._]+)/], ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/], ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/], ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/], ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)$/], ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+)\\).*Gecko$/], ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/], ['ie', /MSIE\\s(7\\.0)/], ['android', /Android\\s([0-9\\.]+)/], ['safari', /Version\\/([0-9\\._]+).*Safari/]];\nvar browser = void 0;\n\nif (isBrowser) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = BROWSER_RULES[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref = _step.value;\n\n      var _ref2 = slicedToArray(_ref, 2);\n\n      var name = _ref2[0];\n      var regexp = _ref2[1];\n\n      if (regexp.test(window.navigator.userAgent)) {\n        browser = name;\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n/**\n * Operating system matching rules.\n *\n * @type {Array}\n */\n\n\nvar OS_RULES = [['ios', /os ([\\.\\_\\d]+) like mac os/i], // must be before the macos rule\n['macos', /mac os x/i], ['android', /android/i], ['firefoxos', /mozilla\\/[a-z\\.\\_\\d]+ \\((?:mobile)|(?:tablet)/i], ['windows', /windows\\s*(?:nt)?\\s*([\\.\\_\\d]+)/i]];\nvar os = void 0;\n\nif (isBrowser) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = OS_RULES[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _ref3 = _step2.value;\n\n      var _ref4 = slicedToArray(_ref3, 2);\n\n      var _name = _ref4[0];\n      var _regexp = _ref4[1];\n\n      if (_regexp.test(window.navigator.userAgent)) {\n        os = _name;\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n/**\n * Feature matching rules.\n *\n * @type {Array}\n */\n\n\nvar FEATURE_RULES = [['inputeventslevel1', function (window) {\n  var event = window.InputEvent ? new window.InputEvent('input') : {};\n  var support = ('inputType' in event);\n  return support;\n}], ['inputeventslevel2', function (window) {\n  var element = window.document.createElement('div');\n  element.contentEditable = true;\n  var support = ('onbeforeinput' in element);\n  return support;\n}]];\nvar features = [];\n\nif (isBrowser) {\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = FEATURE_RULES[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var _ref5 = _step3.value;\n\n      var _ref6 = slicedToArray(_ref5, 2);\n\n      var _name2 = _ref6[0];\n      var test = _ref6[1];\n\n      if (test(window)) {\n        features.push(_name2);\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n/**\n * Array of regular expression matchers and their API version\n *\n * @type {Array}\n */\n\n\nvar ANDROID_API_VERSIONS = [[/^9([.]0|)/, 28], [/^8[.]1/, 27], [/^8([.]0|)/, 26], [/^7[.]1/, 25], [/^7([.]0|)/, 24], [/^6([.]0|)/, 23], [/^5[.]1/, 22], [/^5([.]0|)/, 21], [/^4[.]4/, 20]];\n/**\n * get the Android API version from the userAgent\n *\n * @return {number} version\n */\n\nfunction getAndroidApiVersion() {\n  if (os !== 'android') return null;\n  var userAgent = window.navigator.userAgent;\n  var matchData = userAgent.match(/Android\\s([0-9\\.]+)/);\n  if (matchData == null) return null;\n  var versionString = matchData[1];\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = ANDROID_API_VERSIONS[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var _ref7 = _step4.value;\n\n      var _ref8 = slicedToArray(_ref7, 2);\n\n      var regex = _ref8[0];\n      var version = _ref8[1];\n      if (versionString.match(regex)) return version;\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * Export.\n *\n * @type {Boolean}\n */\n\n\nvar IS_CHROME = browser === 'chrome';\nvar IS_OPERA = browser === 'opera';\nvar IS_FIREFOX = browser === 'firefox';\nvar IS_SAFARI = browser === 'safari';\nvar IS_IE = browser === 'ie';\nvar IS_EDGE = browser === 'edge';\nvar IS_ANDROID = os === 'android';\nvar IS_IOS = os === 'ios';\nvar IS_MAC = os === 'macos';\nvar IS_WINDOWS = os === 'windows';\nvar ANDROID_API_VERSION = getAndroidApiVersion();\nvar HAS_INPUT_EVENTS_LEVEL_1 = features.includes('inputeventslevel1');\nvar HAS_INPUT_EVENTS_LEVEL_2 = features.includes('inputeventslevel2') || IS_ANDROID && (ANDROID_API_VERSION === 28 || ANDROID_API_VERSION === null);\nexport { IS_CHROME, IS_OPERA, IS_FIREFOX, IS_SAFARI, IS_IE, IS_EDGE, IS_ANDROID, IS_IOS, IS_MAC, IS_WINDOWS, ANDROID_API_VERSION, HAS_INPUT_EVENTS_LEVEL_1, HAS_INPUT_EVENTS_LEVEL_2 };","map":{"version":3,"sources":["../src/index.js"],"names":["BROWSER_RULES","browser","name","regexp","window","OS_RULES","os","FEATURE_RULES","event","support","element","features","test","ANDROID_API_VERSIONS","userAgent","matchData","versionString","regex","version","IS_CHROME","IS_OPERA","IS_FIREFOX","IS_SAFARI","IS_IE","IS_EDGE","IS_ANDROID","IS_IOS","IS_MAC","IS_WINDOWS","ANDROID_API_VERSION","getAndroidApiVersion","HAS_INPUT_EVENTS_LEVEL_1","HAS_INPUT_EVENTS_LEVEL_2"],"mappings":"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","sourcesContent":["import isBrowser from 'is-in-browser'\n\n/**\n * Browser matching rules.\n *\n * @type {Array}\n */\n\nconst BROWSER_RULES = [\n  ['edge', /Edge\\/([0-9\\._]+)/],\n  ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n  ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n  ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n  ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)$/],\n  ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+)\\).*Gecko$/],\n  ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n  ['ie', /MSIE\\s(7\\.0)/],\n  ['android', /Android\\s([0-9\\.]+)/],\n  ['safari', /Version\\/([0-9\\._]+).*Safari/],\n]\n\nlet browser\n\nif (isBrowser) {\n  for (const [name, regexp] of BROWSER_RULES) {\n    if (regexp.test(window.navigator.userAgent)) {\n      browser = name\n      break\n    }\n  }\n}\n\n/**\n * Operating system matching rules.\n *\n * @type {Array}\n */\n\nconst OS_RULES = [\n  ['ios', /os ([\\.\\_\\d]+) like mac os/i], // must be before the macos rule\n  ['macos', /mac os x/i],\n  ['android', /android/i],\n  ['firefoxos', /mozilla\\/[a-z\\.\\_\\d]+ \\((?:mobile)|(?:tablet)/i],\n  ['windows', /windows\\s*(?:nt)?\\s*([\\.\\_\\d]+)/i],\n]\n\nlet os\n\nif (isBrowser) {\n  for (const [name, regexp] of OS_RULES) {\n    if (regexp.test(window.navigator.userAgent)) {\n      os = name\n      break\n    }\n  }\n}\n\n/**\n * Feature matching rules.\n *\n * @type {Array}\n */\n\nconst FEATURE_RULES = [\n  [\n    'inputeventslevel1',\n    window => {\n      const event = window.InputEvent ? new window.InputEvent('input') : {}\n      const support = 'inputType' in event\n      return support\n    },\n  ],\n  [\n    'inputeventslevel2',\n    window => {\n      const element = window.document.createElement('div')\n      element.contentEditable = true\n      const support = 'onbeforeinput' in element\n      return support\n    },\n  ],\n]\n\nconst features = []\n\nif (isBrowser) {\n  for (const [name, test] of FEATURE_RULES) {\n    if (test(window)) {\n      features.push(name)\n    }\n  }\n}\n\n/**\n * Array of regular expression matchers and their API version\n *\n * @type {Array}\n */\n\nconst ANDROID_API_VERSIONS = [\n  [/^9([.]0|)/, 28],\n  [/^8[.]1/, 27],\n  [/^8([.]0|)/, 26],\n  [/^7[.]1/, 25],\n  [/^7([.]0|)/, 24],\n  [/^6([.]0|)/, 23],\n  [/^5[.]1/, 22],\n  [/^5([.]0|)/, 21],\n  [/^4[.]4/, 20],\n]\n\n/**\n * get the Android API version from the userAgent\n *\n * @return {number} version\n */\n\nfunction getAndroidApiVersion() {\n  if (os !== 'android') return null\n  const { userAgent } = window.navigator\n  const matchData = userAgent.match(/Android\\s([0-9\\.]+)/)\n  if (matchData == null) return null\n  const versionString = matchData[1]\n\n  for (const [regex, version] of ANDROID_API_VERSIONS) {\n    if (versionString.match(regex)) return version\n  }\n  return null\n}\n\n/**\n * Export.\n *\n * @type {Boolean}\n */\n\nexport const IS_CHROME = browser === 'chrome'\nexport const IS_OPERA = browser === 'opera'\nexport const IS_FIREFOX = browser === 'firefox'\nexport const IS_SAFARI = browser === 'safari'\nexport const IS_IE = browser === 'ie'\nexport const IS_EDGE = browser === 'edge'\n\nexport const IS_ANDROID = os === 'android'\nexport const IS_IOS = os === 'ios'\nexport const IS_MAC = os === 'macos'\nexport const IS_WINDOWS = os === 'windows'\n\nexport const ANDROID_API_VERSION = getAndroidApiVersion()\n\nexport const HAS_INPUT_EVENTS_LEVEL_1 = features.includes('inputeventslevel1')\nexport const HAS_INPUT_EVENTS_LEVEL_2 =\n  features.includes('inputeventslevel2') ||\n  (IS_ANDROID && (ANDROID_API_VERSION === 28 || ANDROID_API_VERSION === null))\n"]},"metadata":{},"sourceType":"module"}