{"ast":null,"code":"'use strict';\n\nvar GROUP_LEFT_TO_RIGHT, GROUP_RIGHT_TO_LEFT, EXPRESSION_LEFT_TO_RIGHT, EXPRESSION_RIGHT_TO_LEFT;\n/*\n * Character ranges of left-to-right characters.\n */\n\nGROUP_LEFT_TO_RIGHT = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' + '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' + '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF';\n/*\n * Character ranges of right-to-left characters.\n */\n\nGROUP_RIGHT_TO_LEFT = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\n/*\n * Expression to match a left-to-right string.\n *\n * Matches the start of a string, followed by zero or\n * more non-right-to-left characters, followed by a\n * left-to-right character.\n */\n\nEXPRESSION_LEFT_TO_RIGHT = new RegExp('^[^' + GROUP_RIGHT_TO_LEFT + ']*[' + GROUP_LEFT_TO_RIGHT + ']');\n/*\n * Expression to match a right-to-left string.\n *\n * Matches the start of a string, followed by zero or\n * more non-left-to-right characters, followed by a\n * right-to-left character.\n */\n\nEXPRESSION_RIGHT_TO_LEFT = new RegExp('^[^' + GROUP_LEFT_TO_RIGHT + ']*[' + GROUP_RIGHT_TO_LEFT + ']');\n/**\n * Detect the direction of text.\n *\n * @param {string} value - value to stringify and check.\n * @return {string} - One of `\"rtl\"`, `\"ltr\"`, or\n *   `\"neutral\"`.\n */\n\nfunction direction(value) {\n  value = value.toString();\n\n  if (EXPRESSION_RIGHT_TO_LEFT.test(value)) {\n    return 'rtl';\n  }\n\n  if (EXPRESSION_LEFT_TO_RIGHT.test(value)) {\n    return 'ltr';\n  }\n\n  return 'neutral';\n}\n/*\n * Expose `direction`.\n */\n\n\nmodule.exports = direction;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/node_modules/slate/node_modules/direction/index.js"],"names":["GROUP_LEFT_TO_RIGHT","GROUP_RIGHT_TO_LEFT","EXPRESSION_LEFT_TO_RIGHT","EXPRESSION_RIGHT_TO_LEFT","RegExp","direction","value","toString","test","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,mBAAJ,EACIC,mBADJ,EAEIC,wBAFJ,EAGIC,wBAHJ;AAKA;;;;AAIAH,mBAAmB,GAAG,qCAClB,4DADkB,GAElB,4BAFJ;AAIA;;;;AAIAC,mBAAmB,GAAG,yCAAtB;AAEA;;;;;;;;AAQAC,wBAAwB,GAAG,IAAIE,MAAJ,CACvB,QAAQH,mBAAR,GAA8B,KAA9B,GAAsCD,mBAAtC,GAA4D,GADrC,CAA3B;AAIA;;;;;;;;AAQAG,wBAAwB,GAAG,IAAIC,MAAJ,CACvB,QAAQJ,mBAAR,GAA8B,KAA9B,GAAsCC,mBAAtC,GAA4D,GADrC,CAA3B;AAIA;;;;;;;;AAOA,SAASI,SAAT,CAAmBC,KAAnB,EAA0B;AACtBA,EAAAA,KAAK,GAAGA,KAAK,CAACC,QAAN,EAAR;;AAEA,MAAIJ,wBAAwB,CAACK,IAAzB,CAA8BF,KAA9B,CAAJ,EAA0C;AACtC,WAAO,KAAP;AACH;;AAED,MAAIJ,wBAAwB,CAACM,IAAzB,CAA8BF,KAA9B,CAAJ,EAA0C;AACtC,WAAO,KAAP;AACH;;AAED,SAAO,SAAP;AACH;AAED;;;;;AAIAG,MAAM,CAACC,OAAP,GAAiBL,SAAjB","sourcesContent":["'use strict';\n\nvar GROUP_LEFT_TO_RIGHT,\n    GROUP_RIGHT_TO_LEFT,\n    EXPRESSION_LEFT_TO_RIGHT,\n    EXPRESSION_RIGHT_TO_LEFT;\n\n/*\n * Character ranges of left-to-right characters.\n */\n\nGROUP_LEFT_TO_RIGHT = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n    '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n    '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF';\n\n/*\n * Character ranges of right-to-left characters.\n */\n\nGROUP_RIGHT_TO_LEFT = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\n\n/*\n * Expression to match a left-to-right string.\n *\n * Matches the start of a string, followed by zero or\n * more non-right-to-left characters, followed by a\n * left-to-right character.\n */\n\nEXPRESSION_LEFT_TO_RIGHT = new RegExp(\n    '^[^' + GROUP_RIGHT_TO_LEFT + ']*[' + GROUP_LEFT_TO_RIGHT + ']'\n);\n\n/*\n * Expression to match a right-to-left string.\n *\n * Matches the start of a string, followed by zero or\n * more non-left-to-right characters, followed by a\n * right-to-left character.\n */\n\nEXPRESSION_RIGHT_TO_LEFT = new RegExp(\n    '^[^' + GROUP_LEFT_TO_RIGHT + ']*[' + GROUP_RIGHT_TO_LEFT + ']'\n);\n\n/**\n * Detect the direction of text.\n *\n * @param {string} value - value to stringify and check.\n * @return {string} - One of `\"rtl\"`, `\"ltr\"`, or\n *   `\"neutral\"`.\n */\nfunction direction(value) {\n    value = value.toString();\n\n    if (EXPRESSION_RIGHT_TO_LEFT.test(value)) {\n        return 'rtl';\n    }\n\n    if (EXPRESSION_LEFT_TO_RIGHT.test(value)) {\n        return 'ltr';\n    }\n\n    return 'neutral';\n}\n\n/*\n * Expose `direction`.\n */\n\nmodule.exports = direction;\n"]},"metadata":{},"sourceType":"script"}