{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/AudioPlayer/AudioPlayer.js\";\nimport React, { useState, useRef, useEffect, forwardRef } from \"react\";\nimport styles from \"./AudioPlayer.module.css\";\nconst AudioPlayer = forwardRef((props, ref) => {\n  // const [selectedTrack, setSelectedTrack] = useState({\n  //   title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n  //   by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n  //   link:\n  //     \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n  //   duration: 0,\n  //   date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n  //   currentTime: 0\n  // });\n  // const [player, setPlayer] = useState(\"paused\");\n  const [duration, setDuration] = useState(2172.892); // const seekBarRef = useRef();\n  // useEffect(() => {\n  //   if (props.player !== prevPlayer) {\n  //     if (props.player === \"paused\") {\n  //       props.audioRef.current.pause();\n  //     } else if (props.player === \"playing\" && prevPlayer === \"paused\") {\n  //       console.log(\"Rain man\")\n  //       props.audioRef.current.play();\n  //     }\n  //   }\n  // }, [props.player]);\n  // useEffect(() => {\n  //   if (\n  //    props.selectedTrack &&  (props.selectedTrack.currentlyPlaying !==  (prevTrack.currentlyPlaying || 0)) \n  //   ) {\n  //     let track;\n  //     track = props.selectedTrack\n  //       ? props.selectedTrack.items[props.selectedTrack.currentlyPlaying].link\n  //       : null;\n  //     if (track) {\n  //       props.audioRef.current.src = track;\n  //         props.audioRef.current.play();\n  //         console.log(prevTrack);\n  //         console.log(props.selectedTrack.items[props.selectedTrack.currentlyPlaying])\n  //         console.log(\"Rain Guy\")\n  //         props.setPlayer(\"playing\");     \n  //     }\n  //   }\n  // }, [props.selectedTrack.items[props.selectedTrack.currentlyPlaying]]);\n\n  useEffect(() => {\n    props.audioRef.current.src = props.selectedTrack.items[props.selectedTrack.currentlyPlaying].link;\n  }, [props.selectedTrack]);\n  useEffect(() => {\n    props.audioRef.current.addEventListener(\"timeupdate\", e => {\n      props.setCurrentTime(e.target.currentTime);\n    });\n    return () => {\n      props.audioRef.current.removeEventListener(\"timeupdate\", () => {});\n    };\n  }, []);\n\n  const handleSliderChange = e => {\n    const time = duration * (e.target.value / 100);\n    props.audioRef.current.currentTime = time;\n    props.setCurrentTime(time);\n  };\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  function getTime(time) {\n    if (!isNaN(time)) {\n      return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n    }\n  }\n\n  const progressDuration = getTime(duration);\n  const progressTime = getTime(props.currentTime);\n  const progress = 100 / duration * props.currentTime;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: styles[\"audio-player\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.isActive ? styles[\"image-container\"] : `${styles[\"image-container\"]} ${styles[\"image-container-inactive\"]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles[\"image\"],\n    src: props.selectedTrack.items[props.selectedTrack.currentlyPlaying].image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"player\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"minimized\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"title-container\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 8\n    }\n  }, props.selectedTrack.items[props.selectedTrack.currentlyPlaying].title.toUpperCase()), props.isActive ? /*#__PURE__*/React.createElement(\"i\", {\n    onClick: () => props.setActive(false),\n    className: `${styles[\"audio-player-inactive\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-down\"]} fas fa-chevron-down`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    onClick: () => props.setActive(true),\n    className: `${styles[\"audio-player-active\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-up\"]} fas fa-chevron-up`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.isActive ? styles[\"image-controls\"] : `${styles[\"image-controls\"]} ${styles[\"image-controls-inactive\"]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"controls\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    onClick: () => props.rewindPodcasts(),\n    className: `${styles[\"backward-button\"]} ${styles[\"fas\"]} ${styles[\"fa-step-backward\"]} fas fa-step-backward`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), props.player === \"paused\" && /*#__PURE__*/React.createElement(\"i\", {\n    onClick: () => props.setPlayer(\"playing\"),\n    className: `${styles[\"play-button\"]} ${styles[\"far\"]} ${styles[\"fa-play-circle\"]} far fa-play-circle`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }), props.player === \"playing\" && /*#__PURE__*/React.createElement(\"i\", {\n    onClick: () => props.setPlayer(\"paused\"),\n    className: `${styles[\"pause-button\"]} ${styles[\"far\"]} ${styles[\"fa-pause-circle\"]} far fa-pause-circle`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    onClick: () => props.forwardPodcasts(),\n    className: `${styles[\"forward-button\"]} ${styles[\"fas\"]} ${styles[\"fa-step-forward\"]} fas fa-step-forward`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"progress-bar\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, progressTime, \" \", /*#__PURE__*/React.createElement(\"input\", {\n    ref: seekBarRef,\n    type: \"range\",\n    className: styles[\"progress-bar-slider\"],\n    onChange: handleSliderChange,\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), \" \", progressDuration))));\n});\nexport default AudioPlayer;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/AudioPlayer/AudioPlayer.js"],"names":["React","useState","useRef","useEffect","forwardRef","styles","AudioPlayer","props","ref","duration","setDuration","audioRef","current","src","selectedTrack","items","currentlyPlaying","link","addEventListener","e","setCurrentTime","target","currentTime","removeEventListener","handleSliderChange","time","value","usePrevious","getTime","isNaN","Math","floor","slice","progressDuration","progressTime","progress","isActive","image","title","toUpperCase","setActive","rewindPodcasts","player","setPlayer","forwardPodcasts","seekBarRef"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, forwardRef } from \"react\";\nimport styles from \"./AudioPlayer.module.css\";\nconst AudioPlayer = forwardRef((props, ref) => {\n  // const [selectedTrack, setSelectedTrack] = useState({\n  //   title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n  //   by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n  //   link:\n  //     \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n  //   duration: 0,\n  //   date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n  //   currentTime: 0\n  // });\n  // const [player, setPlayer] = useState(\"paused\");\n \n \n\n  const [duration, setDuration] = useState(2172.892);\n  \n  // const seekBarRef = useRef();\n  // useEffect(() => {\n  //   if (props.player !== prevPlayer) {\n  //     if (props.player === \"paused\") {\n  //       props.audioRef.current.pause();\n  //     } else if (props.player === \"playing\" && prevPlayer === \"paused\") {\n  //       console.log(\"Rain man\")\n  //       props.audioRef.current.play();\n  //     }\n  //   }\n  // }, [props.player]);\n\n\n  // useEffect(() => {\n  //   if (\n  //    props.selectedTrack &&  (props.selectedTrack.currentlyPlaying !==  (prevTrack.currentlyPlaying || 0)) \n  //   ) {\n  //     let track;\n  //     track = props.selectedTrack\n  //       ? props.selectedTrack.items[props.selectedTrack.currentlyPlaying].link\n  //       : null;\n  //     if (track) {\n  //       props.audioRef.current.src = track;\n  //         props.audioRef.current.play();\n  //         console.log(prevTrack);\n  //         console.log(props.selectedTrack.items[props.selectedTrack.currentlyPlaying])\n  //         console.log(\"Rain Guy\")\n  //         props.setPlayer(\"playing\");     \n  //     }\n  //   }\n  // }, [props.selectedTrack.items[props.selectedTrack.currentlyPlaying]]);\n\n\n  useEffect(() => {\n    props.audioRef.current.src = props.selectedTrack.items[props.selectedTrack.currentlyPlaying].link\n  }, [props.selectedTrack])\n\n  useEffect(() => {\n    props.audioRef.current.addEventListener(\"timeupdate\", (e) => {\n      props.setCurrentTime(e.target.currentTime);\n    });\n    return () => {\n      props.audioRef.current.removeEventListener(\"timeupdate\", () => {});\n    };\n  }, []);\n\n  const handleSliderChange = (e) => {\n    const time = duration * (e.target.value / 100);\n    props.audioRef.current.currentTime = time;\n    props.setCurrentTime(time);\n  };\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  function getTime(time) {\n    if (!isNaN(time)) {\n      return (\n        Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n      );\n    }\n  }\n  const progressDuration = getTime(duration);\n  const progressTime = getTime(props.currentTime);\n  const progress = (100 / duration) * props.currentTime;\n  return (\n    <div ref={ref} className={styles[\"audio-player\"]}>\n\n      <div className={props.isActive ? styles[\"image-container\"] : `${styles[\"image-container\"]} ${styles[\"image-container-inactive\"]}`}>\n        <img\n          className={styles[\"image\"]}\n          src={\n            props.selectedTrack.items[props.selectedTrack.currentlyPlaying]\n              .image\n          }\n        />\n        \n      </div>\n      <div className={styles[\"player\"]}>\n       <div className={styles[\"minimized\"]}>\n       <div className={styles[\"title-container\"]}>\n          {props.selectedTrack.items[\n            props.selectedTrack.currentlyPlaying\n          ].title.toUpperCase()}\n        </div>\n        \n       {props.isActive ? \n          \n          <i\n          onClick={() => props.setActive(false) }\n          className={`${styles[\"audio-player-inactive\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-down\"]} fas fa-chevron-down`}\n        ></i>:\n        <i\n            onClick={() => props.setActive(true) }\n            className={`${styles[\"audio-player-active\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-up\"]} fas fa-chevron-up`}\n          ></i>\n       }\n    \n\n       </div>\n      \n\n        <div className={props.isActive? styles[\"image-controls\"] : `${styles[\"image-controls\"]} ${styles[\"image-controls-inactive\"]}`}>\n          <div className={styles[\"controls\"]}>\n            <i\n              onClick={() => props.rewindPodcasts()}\n              className={`${styles[\"backward-button\"]} ${styles[\"fas\"]} ${styles[\"fa-step-backward\"]} fas fa-step-backward`}\n            ></i>\n            {props.player === \"paused\" && (\n              <i\n                onClick={() => props.setPlayer(\"playing\")}\n                className={`${styles[\"play-button\"]} ${styles[\"far\"]} ${styles[\"fa-play-circle\"]} far fa-play-circle`}\n              ></i>\n            )}\n            {props.player === \"playing\" && (\n              <i\n                onClick={() => props.setPlayer(\"paused\")}\n                className={`${styles[\"pause-button\"]} ${styles[\"far\"]} ${styles[\"fa-pause-circle\"]} far fa-pause-circle`}\n              ></i>\n            )}\n            <i\n              onClick={() => props.forwardPodcasts()}\n              className={`${styles[\"forward-button\"]} ${styles[\"fas\"]} ${styles[\"fa-step-forward\"]} fas fa-step-forward`}\n            ></i>\n          </div>\n          <div className={styles[\"progress-bar\"]}>\n            {progressTime}{\" \"}\n            <input\n              ref={seekBarRef}\n              type=\"range\"\n              className={styles[\"progress-bar-slider\"]}\n              onChange={handleSliderChange}\n              value={progress}\n            />{\" \"}\n            {progressDuration}\n          </div>\n        </div>\n      </div>\n\n     \n      {/*https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a  */}\n    </div>\n  );\n});\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}