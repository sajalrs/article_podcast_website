{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/AudioPlayer/AudioPlayer.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nconst AudioPlayer = props => {\n  // const [selectedTrack, setSelectedTrack] = useState({\n  //   title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n  //   by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n  //   link:\n  //     \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n  //   duration: 0,\n  //   date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n  //   currentTime: 0\n  // });\n  // const [player, setPlayer] = useState(\"paused\");\n  const audioRef = useRef();\n  const prevTrack = usePrevious(props.selectedTrack);\n  const prevPlayer = usePrevious(props.player); // const [duration, setDuration] = useState(0);\n\n  const seekBarRef = useRef();\n  useEffect(() => {\n    console.log(\"Ran\");\n\n    if (props.selectedTrack !== prevTrack) {\n      let track;\n      track = props.selectedTrack ? props.selectedTrack.link : null;\n\n      if (track) {\n        audioRef.current.src = track; // audioRef.current.play();\n        // setPlayer(\"playing\");\n      }\n    }\n  }, [props.selectedTrack.title]);\n  useEffect(() => {\n    console.log(\"Ran this\");\n\n    if (props.player !== prevPlayer) {\n      if (props.player === \"paused\") {\n        audioRef.current.pause();\n      } else if (props.player === \"playing\" && prevPlayer === \"paused\") {\n        audioRef.current.play();\n      }\n    }\n  }, [props.player]);\n  useEffect(() => {\n    console.log(\"Runner\");\n    audioRef.current.addEventListener(\"timeupdate\", e => {\n      props.setSelectedTrack({ ...props.selectedTrack,\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n    return () => {\n      audioRef.current.removeEventListener(\"timeupdate\", () => {});\n    };\n  }, []);\n\n  const handleSliderChange = e => {\n    const time = props.selectedTrack.duration * (e.target.value / 100);\n    audioRef.current.currentTime = time;\n    props.setSelectedTrack({ ...props.selectedTrack,\n      currentTime: time\n    });\n  };\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  function getTime(time) {\n    if (!isNaN(time)) {\n      return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2);\n    }\n  }\n\n  const progressDuration = getTime(props.selectedTrack.duration);\n  const progressTime = getTime(props.selectedTrack.currentTime);\n  const progress = 100 / props.selectedTrack.duration * props.selectedTrack.currentTime;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, props.player === \"paused\" && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.setPlayer(\"playing\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Play\"), props.player === \"playing\" && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.setPlayer(\"paused\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Pause\"), props.player === \"playing\" || props.player === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, progressTime, \" / \", progressDuration, /*#__PURE__*/React.createElement(\"input\", {\n    ref: seekBarRef,\n    type: \"range\",\n    onChange: handleSliderChange,\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })) : \"\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.forwardPodcast(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }, \"Forward\")), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: audioRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AudioPlayer;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/AudioPlayer/AudioPlayer.js"],"names":["React","useState","useRef","useEffect","AudioPlayer","props","audioRef","prevTrack","usePrevious","selectedTrack","prevPlayer","player","seekBarRef","console","log","track","link","current","src","title","pause","play","addEventListener","e","setSelectedTrack","currentTime","target","duration","removeEventListener","handleSliderChange","time","value","ref","getTime","isNaN","Math","floor","slice","progressDuration","progressTime","progress","setPlayer","forwardPodcast"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nconst AudioPlayer = (props) => {\n  // const [selectedTrack, setSelectedTrack] = useState({\n  //   title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n  //   by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n  //   link:\n  //     \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n  //   duration: 0,\n  //   date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n  //   currentTime: 0\n  // });\n  // const [player, setPlayer] = useState(\"paused\");\n  const audioRef = useRef();\n  const prevTrack = usePrevious(props.selectedTrack);\n  const prevPlayer = usePrevious(props.player);\n  // const [duration, setDuration] = useState(0);\n  const seekBarRef = useRef()\n  useEffect(() => {\n      console.log(\"Ran\")\n    if (props.selectedTrack !== prevTrack) {\n      let track;\n      track = props.selectedTrack? props.selectedTrack.link : null;\n      if (track) {\n        audioRef.current.src = track;\n        // audioRef.current.play();\n        // setPlayer(\"playing\");\n      }\n    }\n  }, [props.selectedTrack.title]);\n\n  useEffect(() => {\n      console.log(\"Ran this\")\n    if (props.player !== prevPlayer) {\n      if (props.player === \"paused\") {\n        audioRef.current.pause();\n      } else if (props.player === \"playing\" && prevPlayer === \"paused\") {\n        audioRef.current.play();\n      }\n    }\n  },[props.player]);\n\n  useEffect(() => {\n    console.log(\"Runner\");\n    audioRef.current.addEventListener(\"timeupdate\", e => {\n        props.setSelectedTrack({...props.selectedTrack, currentTime: e.target.currentTime, duration: e.target.duration})\n     \n        \n    })\n      return () => {\n        audioRef.current.removeEventListener(\"timeupdate\", () => {});\n      }\n  }, [])\n\n\n  const handleSliderChange = (e) => {\n    const time = props.selectedTrack.duration * (e.target.value / 100);\n    audioRef.current.currentTime = time;\n    props.setSelectedTrack({...props.selectedTrack, currentTime: time})\n  }\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n  \n  function getTime(time) {\n    if(!isNaN(time)) {\n      return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n    }\n  }\n  const progressDuration = getTime(props.selectedTrack.duration);\n  const progressTime = getTime(props.selectedTrack.currentTime);\n  const progress = (100/ props.selectedTrack.duration) * props.selectedTrack.currentTime\n  return (\n    <div>\n      <div>\n        {props.player === \"paused\" && (\n          <button onClick={() => props.setPlayer(\"playing\")}>Play</button>\n        )}\n        {props.player === \"playing\" && (\n          <button onClick={() => props.setPlayer(\"paused\")}>Pause</button>\n        )}\n      {props.player === \"playing\" || props.player === \"paused\" ? (\n          <div>\n            {progressTime} / {progressDuration}\n            <input ref={seekBarRef} type=\"range\" onChange={handleSliderChange} value={progress}/>\n          </div>\n        ) : (\n          \"\"\n        )}\n         <button onClick={() => props.forwardPodcast()}>Forward</button>\n\n      </div>\n\n      <audio ref={audioRef} />\n      {/*https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a  */}\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}