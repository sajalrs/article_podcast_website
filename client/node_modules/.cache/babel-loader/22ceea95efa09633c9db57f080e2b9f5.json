{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/Cards/Card.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { playAudio, playVideo } from \"../../redux/actions\";\nconst Card = {\n  ContentType: Object.freeze({\n    \"article-internal\": 1,\n    \"article-external\": 2,\n    \"video-youtube\": 3,\n    \"video-external\": 4,\n    \"audio-internal\": 5\n  }),\n  formatDate: dateString => {\n    const date = new Date(dateString);\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const day = date.getDate();\n    const monthIndex = date.getMonth();\n    const year = date.getFullYear();\n    return day + ' ' + monthNames[monthIndex] + ', ' + year;\n  }\n};\n\nconst CardComponent = props => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const audioPlayerRef = useSelector(state => state.audioPlayer.audioPlayerRef);\n\n  const onClick = () => {\n    switch (props.contentType) {\n      case Card.ContentType[\"article-internal\"]:\n        history.push(props.link);\n        break;\n\n      case Card.ContentType[\"audio-internal\"]:\n        dispatch(playAudio(props.index));\n        break;\n\n      case Card.ContentType[\"video-youtube\"]:\n        dispatch(playVideo(props.link));\n        break;\n\n      default:\n    }\n  };\n\n  const isPlayable = props.contentType === Card.ContentType[\"video-external\"] || props.contentType === Card.ContentType[\"video-youtube\"] || props.contentType === Card.ContentType[\"audio-internal\"];\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: props.styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ImageContainer, {\n    styles: props.styles,\n    image: props.image,\n    onClick: onClick,\n    audioPlayerRef: props.contentType === Card.ContentType[\"audio-internal\"] ? audioPlayerRef : null,\n    isPlayable: isPlayable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    styles: props.styles,\n    title: props.title,\n    text: props.text,\n    date: Card.formatDate(props.date),\n    author: props.author,\n    onClick: onClick,\n    audioPlayerRef: props.contentType === Card.ContentType[\"audio-internal\"] ? audioPlayerRef : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst ImageContainer = props => {\n  return props.image ? /*#__PURE__*/React.createElement(\"div\", {\n    className: props.styles[\"img-container\"],\n    onClick: () => {\n      if (props.audioPlayerRef) {\n        props.audioPlayerRef.current.play();\n      }\n\n      props.onClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.image,\n    loading: \"lazy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, props.isPlayable && /*#__PURE__*/React.createElement(\"i\", {\n    className: `${props.styles[\"play-button\"]} ${props.styles[\"far\"]} ${props.styles[\"fa-play-circle\"]} far fa-play-circle`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))) : null;\n};\n\nconst CardBody = props => {\n  return props.title ? /*#__PURE__*/React.createElement(\"div\", {\n    className: props.styles[\"card-body\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    onClick: () => {\n      if (props.audioPlayerRef) {\n        props.audioPlayerRef.current.play();\n      }\n\n      props.onClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, props.title), props.author || props.date ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, props.author && /*#__PURE__*/React.createElement(\"span\", {\n    className: props.styles[\"author\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 27\n    }\n  }, props.author), props.date && /*#__PURE__*/React.createElement(\"span\", {\n    className: props.styles[\"date\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 26\n    }\n  }, props.date)) : null, props.text && /*#__PURE__*/React.createElement(\"p\", {\n    className: props.styles[\"body-content\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 22\n    }\n  }, props.text)) : null;\n};\n\nexport { CardComponent };\nexport { Card };","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/Cards/Card.js"],"names":["React","useSelector","useDispatch","useHistory","playAudio","playVideo","Card","ContentType","Object","freeze","formatDate","dateString","date","Date","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","CardComponent","props","dispatch","history","audioPlayerRef","state","audioPlayer","onClick","contentType","push","link","index","isPlayable","styles","card","image","title","text","author","ImageContainer","current","play","CardBody"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { playAudio, playVideo } from \"../../redux/actions\";\n\n\n\nconst Card = {\n    ContentType: Object.freeze({\"article-internal\":1, \"article-external\":2, \"video-youtube\":3, \"video-external\":4, \"audio-internal\": 5}),\n    formatDate: (dateString) => {\n        const date = new Date(dateString);\n        const monthNames = [\n          \"January\", \"February\", \"March\",\n          \"April\", \"May\", \"June\", \"July\",\n          \"August\", \"September\", \"October\",\n          \"November\", \"December\"\n        ];\n      \n        const day = date.getDate();\n        const monthIndex = date.getMonth();\n        const year = date.getFullYear();\n      \n        return day + ' ' + monthNames[monthIndex] + ', ' + year;\n      }\n}\n\nconst CardComponent = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const audioPlayerRef = useSelector(\n    (state) => state.audioPlayer.audioPlayerRef\n  );\n \n\n  const onClick = () => {\n    switch (props.contentType) {\n      case Card.ContentType[\"article-internal\"]:\n        history.push(props.link);\n        break;\n      case Card.ContentType[\"audio-internal\"]:\n        dispatch(playAudio(props.index));\n        break;\n      case Card.ContentType[\"video-youtube\"]:\n        dispatch(playVideo(props.link));\n        break;\n      default:\n    }\n  };\n\n  const isPlayable =\n    props.contentType === Card.ContentType[\"video-external\"] ||\n    props.contentType === Card.ContentType[\"video-youtube\"] ||\n    props.contentType === Card.ContentType[\"audio-internal\"];\n\n  return (\n    <article className={props.styles.card}>\n      <ImageContainer\n        styles={props.styles}\n        image={props.image}\n        onClick={onClick}\n        audioPlayerRef={\n          props.contentType === Card.ContentType[\"audio-internal\"]\n            ? audioPlayerRef\n            : null\n        }\n        isPlayable={isPlayable}\n   \n      />\n      <CardBody\n        styles={props.styles}\n        title={props.title}\n        text={props.text}\n        date={Card.formatDate(props.date)}\n        author={props.author}\n        onClick={onClick}\n        audioPlayerRef={\n          props.contentType === Card.ContentType[\"audio-internal\"]\n            ? audioPlayerRef\n            : null\n        }\n      />\n    </article>\n  );\n};\n\nconst ImageContainer = (props) => {\n  return props.image ? (\n    <div\n      className={props.styles[\"img-container\"]}\n      onClick={() => {\n        if (props.audioPlayerRef) {\n          props.audioPlayerRef.current.play();\n        }\n        props.onClick();\n      }}\n    >\n      <img src={props.image} loading=\"lazy\" />\n      <div>\n        {props.isPlayable && (\n          <i\n            className={`${props.styles[\"play-button\"]} ${props.styles[\"far\"]} ${props.styles[\"fa-play-circle\"]} far fa-play-circle`}\n          ></i>\n        )}\n      </div>\n    </div>\n  ) : null;\n};\n\nconst CardBody = (props) => {\n  return props.title ? (\n    <div className={props.styles[\"card-body\"]}>\n      <h2\n        onClick={() => {\n          if (props.audioPlayerRef) {\n            props.audioPlayerRef.current.play();\n          }\n          props.onClick();\n        }}\n      >\n        {props.title}\n      </h2>\n      {(props.author || props.date ) ?\n      <p>\n       {(props.author) && <span className={props.styles[\"author\"]}>{props.author}</span>}\n        {(props.date) && <span className={props.styles[\"date\"]}>{props.date}</span>}\n      </p>: null}\n      {props.text && <p className={props.styles[\"body-content\"]}>{props.text}</p>}\n    </div>\n  ) : null;\n};\n\nexport {CardComponent};\nexport {Card};"]},"metadata":{},"sourceType":"module"}