{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport axios from \"axios\";\nimport { setAudioPlayerPodcasts, setVideoPlayerYoutubeVideos, setBlogArticles } from \"./redux/actions\";\n\nconst fetchBlogArticles = () => {\n  return dispatch => {\n    axios.get(\"/articles/pages\").then(response => {\n      const articles = response.data[\"links\"].map((item, index) => {\n        return {\n          index: index,\n          ...item,\n          link: `articles/id=${item.id}`\n        };\n      });\n      dispatch(setBlogArticles(articles));\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};\n\nconst fetchPodcasts = () => {\n  return dispatch => {\n    axios.get(\"/podcasts\").then(response => {\n      dispatch(setAudioPlayerPodcasts(response.data[\"items\"]));\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};\n\nconst fetchYoutubeVideos = () => {\n  return dispatch => {\n    axios.get(\"/youtube\").then(response => {\n      const curVideos = response.data[\"items\"].map(item => {\n        return {\n          id: item.id,\n          title: item.title,\n          image: `https://img.youtube.com/vi/${item.id}/hqdefault.jpg`,\n          link: `https://www.youtube.com/embed/${item.id}?rel=0&start=0&autoplay=1`,\n          date: item.date\n        };\n      });\n      dispatch(setVideoPlayerYoutubeVideos(curVideos));\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\nstore.dispatch(fetchBlogArticles());\nstore.dispatch(fetchPodcasts());\nstore.dispatch(fetchYoutubeVideos());\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","thunk","Provider","axios","setAudioPlayerPodcasts","setVideoPlayerYoutubeVideos","setBlogArticles","fetchBlogArticles","dispatch","get","then","response","articles","data","map","item","index","link","id","catch","error","console","log","message","fetchPodcasts","fetchYoutubeVideos","curVideos","title","image","date","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  setAudioPlayerPodcasts,\n  setVideoPlayerYoutubeVideos,\n  setBlogArticles,\n} from \"./redux/actions\";\n\nconst fetchBlogArticles = () => {\n  return (dispatch) => {\n    axios\n      .get(\"/articles/pages\")\n      .then((response) => {\n        const articles = response.data[\"links\"].map((item, index) => {\n          return {\n            index: index,\n            ...item,\n            link: `articles/id=${item.id}`,\n          };\n        });\n        dispatch(setBlogArticles(articles));\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n};\n\nconst fetchPodcasts = () => {\n  return (dispatch) => {\n    axios\n      .get(\"/podcasts\")\n      .then((response) => {\n        dispatch(setAudioPlayerPodcasts(response.data[\"items\"]));\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n};\n\nconst fetchYoutubeVideos = () => {\n  return (dispatch) => {\n    axios\n      .get(\"/youtube\")\n      .then((response) => {\n        const curVideos = response.data[\"items\"].map((item) => {\n          return {\n            id: item.id,\n            title: item.title,\n            image: `https://img.youtube.com/vi/${item.id}/hqdefault.jpg`,\n            link: `https://www.youtube.com/embed/${item.id}?rel=0&start=0&autoplay=1`,\n            date: item.date,\n          };\n        });\n        dispatch(setVideoPlayerYoutubeVideos(curVideos));\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\nstore.dispatch(fetchBlogArticles());\nstore.dispatch(fetchPodcasts());\nstore.dispatch(fetchYoutubeVideos());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}