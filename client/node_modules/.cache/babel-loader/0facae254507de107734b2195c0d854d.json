{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/FormatToolbar.js\";\nimport React from \"react\";\nimport styles from './TextEditor.module.css';\n\nconst FormatToolbar = props => {\n  const renderMarkButton = (type, icon) => {\n    const isActive = props.textEditorRef.hasMark(type);\n    return /*#__PURE__*/React.createElement(\"button\", {\n      active: isActive,\n      onPointerDown: event => props.textEditorRef.onClickMark(event, type),\n      className: isActive ? `styles[\"active] styles[\"tooltip-icon-button\"]` : styles[\"tooltip-icon-button\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const renderImageButton = icon => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: styles[\"tooltip-icon-button\"],\n      onPointerDown: props.textEditorRef.onClickImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const renderSaveButton = icon => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: styles[\"tooltip-icon-button\"],\n      onPointerDown: props.onSave ? props.onSave : () => console.log(JSON.stringify(props.textEditorRef.value.toJSON())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const renderFigureButton = icon => {\n    let isActive = props.textEditorRef.hasBlock(\"figure\");\n    return /*#__PURE__*/React.createElement(\"button\", {\n      active: isActive,\n      className: styles[\"tooltip-icon-button\"],\n      onPointerDown: props.textEditorRef.onClickFigure,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const renderBlockButton = (type, icon) => {\n    let isActive = props.textEditorRef.hasBlock(type);\n\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const {\n        document,\n        blocks\n      } = props.textEditorRef.value;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = props.textEditorRef.hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: isActive ? `styles[\"active] styles[\"tooltip-icon-button\"]` : styles[\"tooltip-icon-button\"],\n      active: isActive,\n      onPointerDown: event => props.textEditorRef.onClickBlock(event, type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"format-toolbar\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, renderMarkButton(\"bold\", `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`), renderMarkButton(\"italic\", `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`), renderMarkButton(\"underlined\", `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`), renderMarkButton(\"code\", `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`), renderBlockButton(\"heading-one\", `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`), renderBlockButton(\"heading-two\", `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`), renderBlockButton(\"block-quote\", `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`), renderBlockButton(\"numbered-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`), renderBlockButton(\"bulleted-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`), renderImageButton(`${styles[\"fas\"]} ${styles[\"fa-image\"]} fas fa-image`), renderFigureButton(`${styles[\"fas\"]} ${styles[\"fa-images\"]} fas fa-images`), renderSaveButton(`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`));\n};\n\nexport default FormatToolbar;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/FormatToolbar.js"],"names":["React","styles","FormatToolbar","props","renderMarkButton","type","icon","isActive","textEditorRef","hasMark","event","onClickMark","renderImageButton","onClickImage","renderSaveButton","onSave","console","log","JSON","stringify","value","toJSON","renderFigureButton","hasBlock","onClickFigure","renderBlockButton","includes","document","blocks","size","parent","getParent","first","key","onClickBlock"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport styles from './TextEditor.module.css'\nconst FormatToolbar = (props) => {\n\n    const renderMarkButton = (type, icon) => {\n        const isActive = props.textEditorRef.hasMark(type);\n        return (\n          <button\n            active={isActive}\n            onPointerDown={(event) =>  props.textEditorRef.onClickMark(event, type)}\n            className={\n              isActive\n                ? `styles[\"active] styles[\"tooltip-icon-button\"]`\n                : styles[\"tooltip-icon-button\"]\n            }\n          >\n            <i className={icon} />\n          </button>\n        );\n      };\n    \n      const renderImageButton = (icon) => {\n        return (\n          <button\n            className={styles[\"tooltip-icon-button\"]}\n            onPointerDown={props.textEditorRef.onClickImage}\n          >\n            <i className={icon} />\n          </button>\n        );\n      };\n    \n      const renderSaveButton = (icon) => {\n        return (\n          <button\n            className={styles[\"tooltip-icon-button\"]}\n            onPointerDown={\n              props.onSave\n                ? props.onSave\n                : () => console.log(JSON.stringify( props.textEditorRef.value.toJSON()))\n            }\n          >\n            <i className={icon} />\n          </button>\n        );\n      };\n    \n      const renderFigureButton = (icon) => {\n        let isActive = props.textEditorRef.hasBlock(\"figure\");\n        return (\n          <button\n            active={isActive}\n            className={styles[\"tooltip-icon-button\"]}\n            onPointerDown={ props.textEditorRef.onClickFigure}\n          >\n            <i className={icon} />\n          </button>\n        );\n      };\n    \n      const renderBlockButton = (type, icon) => {\n        let isActive = props.textEditorRef.hasBlock(type);\n        if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n          const { document, blocks } =  props.textEditorRef.value;\n    \n          if (blocks.size > 0) {\n            const parent = document.getParent(blocks.first().key);\n            isActive =  props.textEditorRef.hasBlock(\"list-item\") && parent && parent.type === type;\n          }\n        }\n        return (\n            <button\n              className={\n                isActive\n                  ? `styles[\"active] styles[\"tooltip-icon-button\"]`\n                  : styles[\"tooltip-icon-button\"]\n              }\n              active={isActive}\n              onPointerDown={(event) =>  props.textEditorRef.onClickBlock(event, type)}\n            >\n              <i className={icon}></i>\n            </button>\n          );\n        };\n      \n    return (<div className={styles[\"format-toolbar\"]}>\n{renderMarkButton(\n        \"bold\",\n        `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`\n      )}\n      {renderMarkButton(\n        \"italic\",\n        `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`\n      )}\n      {renderMarkButton(\n        \"underlined\",\n        `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`\n      )}\n      {renderMarkButton(\n        \"code\",\n        `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`\n      )}\n      {renderBlockButton(\n        \"heading-one\",\n        `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`\n      )}\n      {renderBlockButton(\n        \"heading-two\",\n        `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`\n      )}\n      {renderBlockButton(\n        \"block-quote\",\n        `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`\n      )}\n      {renderBlockButton(\n        \"numbered-list\",\n        `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`\n      )}\n      {renderBlockButton(\n        \"bulleted-list\",\n        `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`\n      )}\n      {renderImageButton(`${styles[\"fas\"]} ${styles[\"fa-image\"]} fas fa-image`)}\n      {renderFigureButton(\n        `${styles[\"fas\"]} ${styles[\"fa-images\"]} fas fa-images`\n      )}\n\n      {renderSaveButton(`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`)}\n    </div>)\n}\n\nexport default FormatToolbar;"]},"metadata":{},"sourceType":"module"}