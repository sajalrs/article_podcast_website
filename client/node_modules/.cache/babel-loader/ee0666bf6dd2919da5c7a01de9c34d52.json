{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/Cards/LargeCard/LargeCard.js\";\nimport React, { useRef, forwardRef } from \"react\";\nimport styles from \"./LargeCard.module.css\";\nimport Card from \"../Card.js\";\n\nconst LargeCard = props => {\n  const imageRef = useRef();\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ImageContainer, {\n    image: props.image,\n    LinkType: props.LinkType,\n    onClick: props.onClick,\n    link: props.link,\n    ref: imageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    title: props.title,\n    text: props.text,\n    date: props.date,\n    author: props.author,\n    onClick: props.onClick,\n    link: props.link,\n    style: {\n      width: ref.current.width\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst ImageContainer = forwardRef((props, ref) => {\n  const isVideo = props.LinkType === Card.LinkType[\"video-external\"] || props.LinkType === Card.LinkType[\"video-youtube\"];\n  return props.image ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"img-container\"],\n    style: {\n      backgroundImage: `url('${props.image}')`\n    },\n    onClick: () => {\n      props.onClick(props.link);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    ref: ref,\n    src: props.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, isVideo && /*#__PURE__*/React.createElement(\"i\", {\n    className: `${styles[\"play-button\"]} ${styles[\"far\"]} ${styles[\"fa-play-circle\"]} far fa-play-circle`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))) : null;\n});\n\nconst CardBody = props => {\n  return props.title ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"card-body\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    onClick: () => {\n      props.onClick(props.link);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles[\"author\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, props.author), \" \", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: styles[\"date\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, props.date)), props.text && /*#__PURE__*/React.createElement(\"p\", {\n    className: styles[\"body-content\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }\n  }, props.text)) : null;\n};\n\nexport default LargeCard;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/Cards/LargeCard/LargeCard.js"],"names":["React","useRef","forwardRef","styles","Card","LargeCard","props","imageRef","card","image","LinkType","onClick","link","title","text","date","author","width","ref","current","ImageContainer","isVideo","backgroundImage","CardBody"],"mappings":"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","sourcesContent":["import React,{useRef, forwardRef} from \"react\";\nimport styles from \"./LargeCard.module.css\";\nimport Card from \"../Card.js\";\nconst LargeCard = (props) => {\n  const imageRef = useRef();\n\n  return (\n    <article className={styles.card}>\n      <ImageContainer\n        image={props.image}\n        LinkType={props.LinkType}\n        onClick={props.onClick}\n        link={props.link}\n        ref={imageRef}\n      />\n      <CardBody\n        title={props.title}\n        text={props.text}\n        date={props.date}\n        author={props.author}\n        onClick={props.onClick}\n        link={props.link}\n        style={{width: ref.current.width}}\n      />\n    </article>\n  );\n};\n\nconst ImageContainer = forwardRef((props, ref) => {\n  const isVideo =\n    props.LinkType === Card.LinkType[\"video-external\"] ||\n    props.LinkType === Card.LinkType[\"video-youtube\"];\n  return (\n    props.image?\n    <div\n      className={styles[\"img-container\"]}\n      style={{ backgroundImage: `url('${props.image}')` }}\n      onClick={() => {\n        props.onClick(props.link);\n      }}\n    >\n       <img ref={ref} src={props.image}/>\n      <div>\n       \n        {isVideo && (\n          <i\n            className={`${styles[\"play-button\"]} ${styles[\"far\"]} ${styles[\"fa-play-circle\"]} far fa-play-circle`}\n          ></i>\n        )}\n        \n      </div>\n    </div>: null\n  );\n});\n\nconst CardBody = (props) => {\n  return (\n    (props.title) ?\n    (<div className={styles[\"card-body\"]}>\n      <h2\n        onClick={() => {\n          props.onClick(props.link);\n        }}\n      >\n        {props.title}\n      </h2>\n      <p>\n        <span className={styles[\"author\"]}>{props.author}</span> {\" \"}\n        <span className={styles[\"date\"]}>{props.date}</span>\n      </p>\n      {props.text && <p className={styles[\"body-content\"]}>{props.text}</p>}\n    </div>) :\n    null\n  );\n};\n\nexport default LargeCard;\n"]},"metadata":{},"sourceType":"module"}