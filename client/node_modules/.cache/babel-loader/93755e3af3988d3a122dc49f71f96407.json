{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from \"image-extensions\";\nimport isUrl from \"is-url\";\nconst schema = {\n  document: {\n    last: {\n      type: \"paragraph\"\n    },\n    normalize: (editor, {\n      code,\n      node,\n      child\n    }) => {\n      switch (code) {\n        case \"last_child_type_invalid\":\n          {\n            const paragraph = Block.create(\"paragraph\");\n            return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n          }\n      }\n    }\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    }\n  }\n};\n\nconst TextEditor = props => {\n  const ref = useRef();\n  const value = props.value;\n  const setValue = props.setValue;\n  const DEFAULT_NODE = \"paragraph\";\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n  const isTabHotkey = isKeyHotkey(\"tab\");\n  const bodyStyles = props.styles;\n\n  const hasMark = type => {\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  const hasBlock = type => {\n    return value.blocks.some(node => node.type === type);\n  };\n\n  const isImage = url => {\n    return imageExtensions.includes(getExtension(url));\n  };\n\n  const getExtension = url => {\n    return new URL(url).pathname.split(\".\").pop;\n  };\n\n  const insertImage = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"image\",\n      data: {\n        src\n      }\n    });\n  };\n\n  const insertFigure = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"figure\",\n      data: {\n        src\n      }\n    });\n  };\n\n  const renderMarkButton = (type, icon) => {\n    const isActive = hasMark(type);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onPointerDown: event => onClickMark(event, type),\n      className: isActive ? `${styles[\"active\"]} ${styles[\"tooltip-icon-button\"]}` : styles[\"tooltip-icon-button\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderImageButton = icon => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles[\"tooltip-icon-button\"],\n      onPointerDown: onClickImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderSaveButton = icon => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles[\"tooltip-icon-button\"],\n      onPointerDown: props.onSave ? props.onSave : () => console.log(JSON.stringify(value.toJSON())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderFigureButton = icon => {\n    let isActive = hasBlock(\"figure\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: isActive ? `${styles[\"active\"]} ${styles[\"tooltip-icon-button\"]}` : styles[\"tooltip-icon-button\"],\n      onPointerDown: onClickFigure,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderBlockButton = (type, icon) => {\n    let isActive = hasBlock(type);\n\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const {\n        document,\n        blocks\n      } = value;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: isActive ? `${styles[\"active\"]} ${styles[\"tooltip-icon-button\"]}` : styles[\"tooltip-icon-button\"],\n      onPointerDown: event => onClickBlock(event, type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderBlock = (props, editor, next) => {\n    const {\n      attributes,\n      children,\n      node\n    } = props;\n\n    switch (node.type) {\n      case \"paragraph\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: bodyStyles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"block-quote\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: bodyStyles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"blockquote\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"bulleted-list\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: bodyStyles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"heading-one\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: bodyStyles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: bodyStyles[\"heading\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"heading-two\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: bodyStyles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"list-item\":\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }\n        }, children);\n\n      case \"numbered-list\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: bodyStyles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"ol\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"image\":\n        {\n          const src = node.data.get(\"src\");\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: bodyStyles[\"main-pane-item\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"figure\", {\n            className: bodyStyles[\"image-container\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: src,\n            loading: \"lazy\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }\n          })));\n        }\n\n      case \"figure\":\n        {\n          const src = node.data.get(\"src\");\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: bodyStyles[\"main-pane-item\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"figure\", {\n            className: bodyStyles[\"image-container\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: src,\n            loading: \"lazy\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(\"figcaption\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }\n          }, children))));\n        }\n\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const {\n      children,\n      mark,\n      attributes\n    } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return /*#__PURE__*/React.createElement(\"strong\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"code\":\n        return /*#__PURE__*/React.createElement(\"code\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"italic\":\n        return /*#__PURE__*/React.createElement(\"em\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"underlined\":\n        return /*#__PURE__*/React.createElement(\"u\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 16\n          }\n        }), children);\n\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else if (isTabHotkey(event)) {\n      event.preventDefault();\n      return next();\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = event => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\"); // const caption = window.prompt(\"enter a caption for the image\")\n\n    if (!src) return;\n    ref.current.command(insertImage, src);\n  };\n\n  const onClickFigure = event => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\");\n    if (!src) return;\n    ref.current.command(insertFigure, src);\n  };\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document; // Handle everything but list buttons.\n\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some(block => {\n        return !!document.getClosest(block.key, parent => parent.type === type);\n      });\n\n      if (isList && isType) {\n        editor.setBlocks(DEFAULT_NODE).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor.unwrapBlock(type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\").wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n  const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event);\n    if (!target && event.type === \"drop\") return next();\n    const transfer = getEventTransfer(event);\n    const {\n      type,\n      text,\n      files\n    } = transfer;\n\n    if (type === \"files\") {\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split(\"/\");\n        if (mime !== \"image\") continue;\n        reader.addEventListener(\"load\", () => {\n          editor.command(insertImage, reader.result, target);\n        });\n        reader.readAsDataURL(file);\n      }\n\n      return;\n    }\n\n    if (type === \"text\") {\n      if (!isUrl(text)) return next();\n      if (!isImage(text)) return next();\n      editor.command(insertImage, text, target);\n      return;\n    }\n\n    next();\n  };\n\n  const renderOnceToolbar = /*#__PURE__*/React.createElement(FormatToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 5\n    }\n  }, renderMarkButton(\"bold\", `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`), renderMarkButton(\"italic\", `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`), renderMarkButton(\"underlined\", `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`), renderMarkButton(\"code\", `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`), renderBlockButton(\"heading-one\", `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`), renderBlockButton(\"heading-two\", `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`), renderBlockButton(\"block-quote\", `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`), renderBlockButton(\"numbered-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`), renderBlockButton(\"bulleted-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`), renderImageButton(`${styles[\"fas\"]} ${styles[\"fa-image\"]} fas fa-image`), renderFigureButton(`${styles[\"fas\"]} ${styles[\"fa-images\"]} fas fa-images`), renderSaveButton(`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"overarching\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 5\n    }\n  }, props.toolbarFixed ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: \"66px\",\n      backgroundColor: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  }, renderOnceToolbar) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }, renderOnceToolbar), /*#__PURE__*/React.createElement(Editor, {\n    ref: ref,\n    className: styles[\"Editor\"],\n    value: value,\n    onChange: opts => {\n      setValue(opts.value);\n    },\n    onKeyDown: onKeyDown,\n    renderMark: renderMark,\n    renderBlock: renderBlock,\n    onDrop: onDropOrPaste,\n    schema: schema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getRules = cssStyles => {\n  const BLOCK_TAGS = {\n    p: \"paragraph\",\n    blockquote: \"block-quote\",\n    ul: `bulleted-list`,\n    h1: `heading-one`,\n    h2: `heading-two`,\n    li: `list-item`,\n    ol: `numbered-list`,\n    img: `image`\n  }; // Add a dictionary of mark tags.\n\n  const MARK_TAGS = {\n    em: \"italic\",\n    strong: \"bold\",\n    u: \"underlined\",\n    code: `code`\n  };\n  const rules = [{\n    deserialize(el, next) {\n      const type = BLOCK_TAGS[el.tagName.toLowerCase()];\n\n      if (type) {\n        return {\n          object: \"block\",\n          type: type,\n          data: {\n            className: el.getAttribute(\"class\")\n          },\n          nodes: next(el.childNodes)\n        };\n      }\n    },\n\n    serialize(obj, children) {\n      if (obj.object == \"block\") {\n        switch (obj.type) {\n          case \"paragraph\":\n            return /*#__PURE__*/React.createElement(\"di\", {\n              className: cssStyles[\"main-pane\"],\n              v: true,\n              className: cssStyles[\"main-pane-item\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"block-quote\":\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: `${cssStyles[\"main-pane-item\"]}`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"blockquote\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"bulleted-list\":\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: cssStyles[\"main-pane-item\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"ul\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"heading-one\":\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: cssStyles[\"main-pane-item\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"h1\", {\n              className: cssStyles[\"heading\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"heading-two\":\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: cssStyles[\"main-pane-item\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"h2\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"list-item\":\n            return /*#__PURE__*/React.createElement(\"li\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 22\n              }\n            }, children);\n\n          case \"numbered-list\":\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: cssStyles[\"main-pane-item\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"ol\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 19\n              }\n            }, children));\n\n          case \"image\":\n            {\n              const src = obj.data[\"src\"];\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `${cssStyles[\"main-pane-item\"]}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"figure\", {\n                className: cssStyles[\"image-container\"],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: src,\n                loading: \"lazy\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 21\n                }\n              })));\n            }\n\n          case \"figure\":\n            {\n              const src = obj.data[\"src\"];\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `${cssStyles[\"main-pane-item\"]}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"figure\", {\n                className: cssStyles[\"image-container\"],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: src,\n                loading: \"lazy\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 21\n                }\n              }), /*#__PURE__*/React.createElement(\"figcaption\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"strong\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 23\n                }\n              }, children))));\n            }\n        }\n      }\n    }\n\n  }, // Add a new rule that handles marks...\n  {\n    deserialize(el, next) {\n      const type = MARK_TAGS[el.tagName.toLowerCase()];\n\n      if (type) {\n        return {\n          object: \"mark\",\n          type: type,\n          nodes: next(el.childNodes)\n        };\n      }\n    },\n\n    serialize(obj, children) {\n      if (obj.object == \"mark\") {\n        switch (obj.type) {\n          case \"bold\":\n            return /*#__PURE__*/React.createElement(\"strong\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 22\n              }\n            }, children);\n\n          case \"italic\":\n            return /*#__PURE__*/React.createElement(\"em\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 22\n              }\n            }, children);\n\n          case \"code\":\n            return /*#__PURE__*/React.createElement(\"code\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 22\n              }\n            }, children);\n\n          case \"underlined\":\n            return /*#__PURE__*/React.createElement(\"u\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 22\n              }\n            }, children);\n        }\n      }\n    }\n\n  }];\n  return rules;\n};\nexport default TextEditor;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","useState","useRef","Editor","getEventTransfer","Block","styles","FormatToolbar","isKeyHotkey","imageExtensions","isUrl","schema","document","last","type","normalize","editor","code","node","child","paragraph","create","insertNodeByKey","key","nodes","size","blocks","image","isVoid","TextEditor","props","ref","value","setValue","DEFAULT_NODE","isBoldHotkey","isItalicHotkey","isUnderlinedHotkey","isCodeHotkey","isTabHotkey","bodyStyles","hasMark","activeMarks","some","mark","hasBlock","isImage","url","includes","getExtension","URL","pathname","split","pop","insertImage","src","target","select","insertBlock","data","insertFigure","renderMarkButton","icon","isActive","event","onClickMark","renderImageButton","onClickImage","renderSaveButton","onSave","console","log","JSON","stringify","toJSON","renderFigureButton","onClickFigure","renderBlockButton","parent","getParent","first","onClickBlock","renderBlock","next","attributes","children","get","renderMark","onKeyDown","preventDefault","toggleMark","current","window","prompt","command","isList","setBlocks","unwrapBlock","isType","block","getClosest","wrapBlock","onDropOrPaste","findEventRange","transfer","text","files","file","reader","FileReader","mime","addEventListener","result","readAsDataURL","renderOnceToolbar","toolbarFixed","position","top","backgroundColor","width","opts","getRules","cssStyles","BLOCK_TAGS","p","blockquote","ul","h1","h2","li","ol","img","MARK_TAGS","em","strong","u","rules","deserialize","el","tagName","toLowerCase","object","className","getAttribute","childNodes","serialize","obj"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from \"image-extensions\";\nimport isUrl from \"is-url\";\n\n\n\nconst schema = {\n  document: {\n    last: { type: \"paragraph\" },\n    normalize: (editor, { code, node, child }) => {\n      switch (code) {\n        case \"last_child_type_invalid\": {\n          const paragraph = Block.create(\"paragraph\");\n          return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n        }\n      }\n    },\n  },\n  blocks: {\n    image: {\n      isVoid: true,\n    },\n  },\n};\n\n\nconst TextEditor = (props) => {\n  const ref = useRef();\n  const value = props.value;\n  const setValue = props.setValue;\n  const DEFAULT_NODE = \"paragraph\";\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n  const isTabHotkey = isKeyHotkey(\"tab\");\n  const bodyStyles = props.styles;\n\n  const hasMark = (type) => {\n    return value.activeMarks.some((mark) => mark.type === type);\n  };\n\n  const hasBlock = (type) => {\n    return value.blocks.some((node) => node.type === type);\n  };\n\n  const isImage = (url) => {\n    return imageExtensions.includes(getExtension(url));\n  };\n\n  const getExtension = (url) => {\n    return new URL(url).pathname.split(\".\").pop;\n  };\n\n  const insertImage = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"image\",\n      data: { src },\n    });\n  };\n\n  const insertFigure = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"figure\",\n      data: { src },\n    });\n  };\n\n  const renderMarkButton = (type, icon) => {\n    const isActive = hasMark(type);\n    return (\n      <div\n        onPointerDown={(event) => onClickMark(event, type)}\n        className={\n          isActive\n            ? `${styles[\"active\"]} ${styles[\"tooltip-icon-button\"]}`\n            : styles[\"tooltip-icon-button\"]\n        }\n      >\n        <i className={icon} />\n      </div>\n    );\n  };\n\n  const renderImageButton = (icon) => {\n    return (\n      <div\n        className={styles[\"tooltip-icon-button\"]}\n        onPointerDown={onClickImage}\n      >\n        <i className={icon} />\n      </div>\n    );\n  };\n\n  const renderSaveButton = (icon) => {\n    return (\n      <div\n        className={styles[\"tooltip-icon-button\"]}\n        onPointerDown={\n          props.onSave\n            ? props.onSave\n            : () => console.log(JSON.stringify(value.toJSON()))\n        }\n      >\n        <i className={icon} />\n      </div>\n    );\n  };\n\n  const renderFigureButton = (icon) => {\n    let isActive = hasBlock(\"figure\");\n    return (\n      <div\n      className={\n        isActive\n          ? `${styles[\"active\"]} ${styles[\"tooltip-icon-button\"]}`\n          : styles[\"tooltip-icon-button\"]\n      }\n        onPointerDown={onClickFigure}\n      >\n        <i className={icon} />\n      </div>\n    );\n  };\n\n  const renderBlockButton = (type, icon) => {\n    let isActive = hasBlock(type);\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const { document, blocks } = value;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return (\n      <div\n        className={\n          isActive\n            ?`${styles[\"active\"]} ${styles[\"tooltip-icon-button\"]}`\n            : styles[\"tooltip-icon-button\"]\n        }\n        onPointerDown={(event) => onClickBlock(event, type)}\n      >\n        <i className={icon}></i>\n      </div>\n    );\n  };\n\n  const renderBlock = (props, editor, next) => {\n    const { attributes, children, node } = props;\n\n    switch (node.type) {\n      case \"paragraph\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <p>{children}</p>\n          </div>\n        );\n      case \"block-quote\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <blockquote>{children}</blockquote>\n          </div>\n        );\n      case \"bulleted-list\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <ul>{children}</ul>\n          </div>\n        );\n      case \"heading-one\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <h1 className={bodyStyles[\"heading\"]}>{children}</h1>\n          </div>\n        );\n      case \"heading-two\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <h2>{children}</h2>\n          </div>\n        );\n      case \"list-item\":\n        return (\n            <li>{children}</li>\n        );\n      case \"numbered-list\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <ol>{children}</ol>\n          </div>\n        );\n      case \"image\": {\n        const src = node.data.get(\"src\");\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <figure className={bodyStyles[\"image-container\"]}>\n              <img src={src} loading=\"lazy\" />\n            </figure>\n          </div>\n        );\n      }\n      case \"figure\": {\n        const src = node.data.get(\"src\");\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <figure className={bodyStyles[\"image-container\"]}>\n              <img src={src} loading=\"lazy\"/>\n              <figcaption>\n                <strong>{children}</strong>\n              </figcaption>\n            </figure>\n          </div>\n        );\n      }\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return <strong {...attributes}>{children}</strong>;\n      case \"code\":\n        return <code {...attributes}>{children}</code>;\n      case \"italic\":\n        return <em {...attributes}>{children}</em>;\n      case \"underlined\":\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else if (isTabHotkey(event)) {\n      event.preventDefault();\n      return next();\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = (event) => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\");\n    // const caption = window.prompt(\"enter a caption for the image\")\n    if (!src) return;\n    ref.current.command(insertImage, src);\n  };\n\n  const onClickFigure = (event) => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\");\n    if (!src) return;\n    ref.current.command(insertFigure, src);\n  };\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document;\n\n    // Handle everything but list buttons.\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor\n          .setBlocks(isActive ? DEFAULT_NODE : type)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some((block) => {\n        return !!document.getClosest(\n          block.key,\n          (parent) => parent.type === type\n        );\n      });\n\n      if (isList && isType) {\n        editor\n          .setBlocks(DEFAULT_NODE)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor\n          .unwrapBlock(\n            type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\"\n          )\n          .wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n  const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event);\n    if (!target && event.type === \"drop\") return next();\n\n    const transfer = getEventTransfer(event);\n    const { type, text, files } = transfer;\n\n    if (type === \"files\") {\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split(\"/\");\n        if (mime !== \"image\") continue;\n\n        reader.addEventListener(\"load\", () => {\n          editor.command(insertImage, reader.result, target);\n        });\n\n        reader.readAsDataURL(file);\n      }\n      return;\n    }\n\n    if (type === \"text\") {\n      if (!isUrl(text)) return next();\n      if (!isImage(text)) return next();\n      editor.command(insertImage, text, target);\n      return;\n    }\n\n    next();\n  };\n\n  const renderOnceToolbar = (\n    <FormatToolbar>\n      {renderMarkButton(\n        \"bold\",\n        `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`\n      )}\n      {renderMarkButton(\n        \"italic\",\n        `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`\n      )}\n      {renderMarkButton(\n        \"underlined\",\n        `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`\n      )}\n      {renderMarkButton(\n        \"code\",\n        `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`\n      )}\n      {renderBlockButton(\n        \"heading-one\",\n        `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`\n      )}\n      {renderBlockButton(\n        \"heading-two\",\n        `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`\n      )}\n      {renderBlockButton(\n        \"block-quote\",\n        `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`\n      )}\n      {renderBlockButton(\n        \"numbered-list\",\n        `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`\n      )}\n      {renderBlockButton(\n        \"bulleted-list\",\n        `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`\n      )}\n      {renderImageButton(`${styles[\"fas\"]} ${styles[\"fa-image\"]} fas fa-image`)}\n      {renderFigureButton(\n        `${styles[\"fas\"]} ${styles[\"fa-images\"]} fas fa-images`\n      )}\n\n      {renderSaveButton(`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`)}\n    </FormatToolbar>\n  );\n\n  return (\n    <div className={styles[\"overarching\"]}>\n            {props.toolbarFixed ? (\n            <div\n              style={{ position: \"fixed\", top: \"66px\", backgroundColor: \"#fff\" }}\n            >\n              {/* <div style={{ position: \"fixed\", top: \"103.5px\", right: \"0px\"}}> */}\n              {renderOnceToolbar}\n            </div>\n          ) : (\n            <div style={{width: \"100%\"}}>\n              {renderOnceToolbar}\n            </div>\n          )}\n      <Editor\n        ref={ref}\n        className={styles[\"Editor\"]}\n        value={value}\n        onChange={(opts) => {setValue(opts.value)}}\n        onKeyDown={onKeyDown}\n        renderMark={renderMark}\n        renderBlock={renderBlock}\n        onDrop={onDropOrPaste}\n        schema={schema}\n      />\n    </div>\n  );\n};\n\n\nexport const getRules = (cssStyles) => {\n  const BLOCK_TAGS = {\n    p: \"paragraph\",\n    blockquote: \"block-quote\",\n    ul: `bulleted-list`,\n    h1: `heading-one`,\n    h2: `heading-two`,\n    li: `list-item`,\n    ol: `numbered-list`,\n    img: `image`,\n  };\n  \n  // Add a dictionary of mark tags.\n  const MARK_TAGS = {\n    em: \"italic\",\n    strong: \"bold\",\n    u: \"underlined\",\n    code: `code`,\n  };\n  \n\n  const rules = [\n    {\n      deserialize(el, next) {\n        const type = BLOCK_TAGS[el.tagName.toLowerCase()];\n        if (type) {\n          return {\n            object: \"block\",\n            type: type,\n            data: {\n              className: el.getAttribute(\"class\"),\n            },\n            nodes: next(el.childNodes),\n          };\n        }\n      },\n      serialize(obj, children) {\n        if (obj.object == \"block\") {\n          switch (obj.type) {\n            case \"paragraph\":\n              return (\n                <di\n                  className={cssStyles[\"main-pane\"]}\n                  v\n                  className={cssStyles[\"main-pane-item\"]}\n                >\n                  <p>{children}</p>\n                </di>\n              );\n            case \"block-quote\":\n              return (\n                <div className={`${cssStyles[\"main-pane-item\"]}`}>\n                  <blockquote>{children}</blockquote>\n                </div>\n              );\n            case \"bulleted-list\":\n              return (\n                <div className={cssStyles[\"main-pane-item\"]}>\n                  <ul>{children}</ul>\n                </div>\n              );\n            case \"heading-one\":\n              return (\n                <div className={cssStyles[\"main-pane-item\"]}>\n                  <h1 className={cssStyles[\"heading\"]}>{children}</h1>\n                </div>\n              );\n            case \"heading-two\":\n              return (\n                <div className={cssStyles[\"main-pane-item\"]}>\n                  <h2>{children}</h2>\n                </div>\n              );\n            case \"list-item\":\n              return <li>{children}</li>;\n            case \"numbered-list\":\n              return (\n                <div className={cssStyles[\"main-pane-item\"]}>\n                  <ol>{children}</ol>\n                </div>\n              );\n            case \"image\": {\n              const src = obj.data[\"src\"];\n              return (\n                <div className={`${cssStyles[\"main-pane-item\"]}`}>\n                  <figure className={cssStyles[\"image-container\"]}>\n                    <img src={src} loading=\"lazy\"/>\n                  </figure>\n                </div>\n              );\n            }\n            case \"figure\": {\n              const src = obj.data[\"src\"];\n              return (\n                <div className={`${cssStyles[\"main-pane-item\"]}`}>\n                  <figure className={cssStyles[\"image-container\"]}>\n                    <img src={src} loading=\"lazy\"/>\n                    <figcaption>\n                      <strong>{children}</strong>\n                    </figcaption>\n                  </figure>\n                </div>\n              );\n            }\n          }\n        }\n      },\n    },\n    // Add a new rule that handles marks...\n    {\n      deserialize(el, next) {\n        const type = MARK_TAGS[el.tagName.toLowerCase()];\n        if (type) {\n          return {\n            object: \"mark\",\n            type: type,\n            nodes: next(el.childNodes),\n          };\n        }\n      },\n      serialize(obj, children) {\n        if (obj.object == \"mark\") {\n          switch (obj.type) {\n            case \"bold\":\n              return <strong>{children}</strong>;\n            case \"italic\":\n              return <em>{children}</em>;\n            case \"code\":\n              return <code>{children}</code>;\n            case \"underlined\":\n              return <u>{children}</u>;\n          }\n        }\n      },\n    },\n  ];\n  return rules;\n}\n\n\n \n\n\nexport default TextEditor;\n\n\n\n"]},"metadata":{},"sourceType":"module"}