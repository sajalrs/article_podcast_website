{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/AudioPlayer/AudioPlayer.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nconst AudioPlayer = () => {\n  const [selectedTrack, setSelectedTrack] = useState({\n    title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link: \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    duration: \"35143625\",\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n    currentTime: 0\n  });\n  const [player, setPlayer] = useState(\"paused\");\n  const audioRef = useRef();\n  const prevTrack = usePrevious(selectedTrack);\n  const prevPlayer = usePrevious(player);\n\n  const usePrevious = value => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n\n  useEffect(() => {\n    if (selectedTrack !== prevTrack) {\n      let track;\n      track = selectedTrack ? selectedTrack.link : null;\n\n      if (track) {\n        audioRef.current.src = track;\n        audioRef.current.play();\n        setPlayer(\"playing\");\n      }\n    }\n  });\n  useEffect(() => {\n    if (player !== prevPlayer) {\n      if (player === \"paused\") {\n        audioRef.current.pause();\n      } else if (player === \"playing\" && prevPlayer === \"paused\") {\n        audioRef.current.play();\n      }\n    }\n  });\n  useEffect(() => {\n    audioRef.current.addEventListener(\"timeupdate\", e => {\n      setSelectedTrack({ ...selectedTrack,\n        currentTime: e.target.currentTime\n      });\n    });\n    return () => {\n      audioRef.current.removeEventListener(\"timeupdate\", () => {});\n    };\n  });\n  const currentTime = getTime(selectedTrack.currentTime);\n  const duration = getTime(selectedTrack.duration);\n\n  const getTime = time => {\n    if (!isNaN(time)) {\n      return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, player === \"paused\" && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayer(\"playing\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Play\"), player === \"playing\" && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayer(\"paused\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Pause\")), player === \"playing\" || player === \"paused\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, currentTime, \" / \", duration) : \"\", /*#__PURE__*/React.createElement(\"audio\", {\n    ref: audioRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AudioPlayer;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/AudioPlayer/AudioPlayer.js"],"names":["React","useState","useRef","useEffect","AudioPlayer","selectedTrack","setSelectedTrack","title","by","link","duration","date","currentTime","player","setPlayer","audioRef","prevTrack","usePrevious","prevPlayer","value","ref","current","track","src","play","pause","addEventListener","e","target","removeEventListener","getTime","time","isNaN","Math","floor","slice"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nconst AudioPlayer = () => {\n  const [selectedTrack, setSelectedTrack] = useState({\n    title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link:\n      \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    duration: \"35143625\",\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n    currentTime: 0\n  });\n  const [player, setPlayer] = useState(\"paused\");\n  const audioRef = useRef();\n  const prevTrack = usePrevious(selectedTrack);\n  const prevPlayer = usePrevious(player);\n\n\n  const usePrevious = (value) => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n  useEffect(() => {\n    if (selectedTrack !== prevTrack) {\n      let track;\n      track = selectedTrack? selectedTrack.link : null;\n      if (track) {\n        audioRef.current.src = track;\n        audioRef.current.play();\n        setPlayer(\"playing\");\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (player !== prevPlayer) {\n      if (player === \"paused\") {\n        audioRef.current.pause();\n      } else if (player === \"playing\" && prevPlayer === \"paused\") {\n        audioRef.current.play();\n      }\n    }\n  });\n\n  useEffect(() => {\n      audioRef.current.addEventListener(\"timeupdate\", e => {\n          setSelectedTrack({\n              ...selectedTrack,\n              currentTime: e.target.currentTime,\n            }\n          )\n      })\n      return () => {\n        audioRef.current.removeEventListener(\"timeupdate\", () => {});\n      }\n  })\n\n\n  const currentTime = getTime(selectedTrack.currentTime);\n  const duration = getTime(selectedTrack.duration);\n\n  const getTime = (time) => {\n    if(!isNaN(time)) {\n      return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n    }\n  }\n\n\n\n  return (\n    <div>\n      <div>\n        {player === \"paused\" && (\n          <button onClick={() => setPlayer(\"playing\")}>Play</button>\n        )}\n        {player === \"playing\" && (\n          <button onClick={() => setPlayer(\"paused\")}>Pause</button>\n        )}\n      </div>\n      {player === \"playing\" || player === \"paused\" ? (\n          <div>\n            {currentTime} / {duration}\n          </div>\n        ) : (\n          \"\")}\n      <audio ref={audioRef} />\n      {/*https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a  */}\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}