{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { useCallback, useMemo, useState, forwardRef, Ref, PropsWithChildren, useEffect } from \"react\";\nimport isHotkey from \"is-hotkey\";\nimport { Editable, withReact, useSlate, Slate } from \"slate-react\";\nimport { Editor, Transforms, createEditor, Node } from \"slate\";\nimport { withHistory } from \"slate-history\";\nimport isUrl from \"is-url\";\nimport imageExtensions from \"image-extensions\";\nimport { cx, css } from 'emotion';\nconst HOTKEYS = {\n  \"mod+b\": \"bold\",\n  \"mod+i\": \"italic\",\n  \"mod+u\": \"underline\",\n  \"mod+`\": \"code\"\n};\nconst LIST_TYPES = [\"numbered-list\", \"bulleted-list\"];\n\nconst TextEditor = props => {\n  const [value, setValue] = useState(props.initialValue ? props.initialValue : initialValue);\n  const [width, setWidth] = useState(1100);\n  const renderElement = useCallback(props => /*#__PURE__*/React.createElement(Element, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 48\n    }\n  })), []);\n  const renderLeaf = useCallback(props => /*#__PURE__*/React.createElement(Leaf, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 45\n    }\n  })), []);\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n  return /*#__PURE__*/React.createElement(Slate, {\n    editor: editor,\n    value: value,\n    onChange: value => setValue(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: ({\n      display: 'flex'\n    }, {\n      flexDirection: 'column'\n    }, {\n      alignItems: 'center'\n    }, {\n      width: 1100\n    }, {\n      maxWidth: '100vw'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MarkButton, {\n    format: \"bold\",\n    icon: \"format_bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MarkButton, {\n    format: \"italic\",\n    icon: \"format_italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MarkButton, {\n    format: \"underline\",\n    icon: \"format_underlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MarkButton, {\n    format: \"code\",\n    icon: \"code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BlockButton, {\n    format: \"heading-one\",\n    icon: \"looks_one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BlockButton, {\n    format: \"heading-two\",\n    icon: \"looks_two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BlockButton, {\n    format: \"block-quote\",\n    icon: \"format_quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BlockButton, {\n    format: \"numbered-list\",\n    icon: \"format_list_numbered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BlockButton, {\n    format: \"bulleted-list\",\n    icon: \"format_list_bulleted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BlockButton, {\n    format: \"image\",\n    icon: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SaveButton, {\n    format: \"save\",\n    icon: \"save\",\n    onSave: props.onSave,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Editable, {\n    renderElement: renderElement,\n    renderLeaf: renderLeaf,\n    placeholder: \"Enter some rich text\\u2026\",\n    autoFocus: true,\n    onKeyDown: event => {\n      for (const hotkey in HOTKEYS) {\n        if (isHotkey(hotkey, event)) {\n          event.preventDefault();\n          const mark = HOTKEYS[hotkey];\n          toggleMark(editor, mark);\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format);\n  const isList = LIST_TYPES.includes(format);\n  const isImage = format === \"image\";\n  Transforms.unwrapNodes(editor, {\n    match: n => LIST_TYPES.includes(n.type),\n    split: true\n  });\n  Transforms.setNodes(editor, {\n    type: isActive ? \"paragraph\" : isList ? \"list-item\" : !isImage ? format : \"\"\n  });\n\n  if (!isActive && isList) {\n    const block = {\n      type: format,\n      children: []\n    };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\nconst isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: n => n.type === format\n  });\n  return !!match;\n};\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\nconst Element = ({\n  attributes,\n  children,\n  element\n}) => {\n  switch (element.type) {\n    case \"block-quote\":\n      return /*#__PURE__*/React.createElement(\"blockquote\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 14\n        }\n      }), children);\n\n    case \"bulleted-list\":\n      return /*#__PURE__*/React.createElement(\"ul\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }\n      }), children);\n\n    case \"heading-one\":\n      return /*#__PURE__*/React.createElement(\"h1\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 14\n        }\n      }), children);\n\n    case \"heading-two\":\n      return /*#__PURE__*/React.createElement(\"h2\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 14\n        }\n      }), children);\n\n    case \"list-item\":\n      return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 14\n        }\n      }), children);\n\n    case \"numbered-list\":\n      return /*#__PURE__*/React.createElement(\"ol\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 14\n        }\n      }), children);\n\n    case \"image\":\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        contentEditable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: element.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      })), children);\n\n    default:\n      return /*#__PURE__*/React.createElement(\"p\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 14\n        }\n      }), children);\n  }\n};\n\nconst Leaf = ({\n  attributes,\n  children,\n  leaf\n}) => {\n  if (leaf.bold) {\n    children = /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 16\n      }\n    }, children);\n  }\n\n  if (leaf.code) {\n    children = /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 16\n      }\n    }, children);\n  }\n\n  if (leaf.italic) {\n    children = /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 16\n      }\n    }, children);\n  }\n\n  if (leaf.underline) {\n    children = /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 16\n      }\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 10\n    }\n  }), children);\n};\n\nconst BlockButton = ({\n  format,\n  icon\n}) => {\n  const editor = useSlate();\n\n  if (format === \"image\") {\n    return /*#__PURE__*/React.createElement(Button, {\n      active: isBlockActive(editor, format),\n      onMouseDown: event => {\n        event.preventDefault();\n        const url = window.prompt('Enter the URL of the image:');\n        if (!url) return;\n        toggleBlock(editor, format);\n        insertImage(editor, url);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, icon));\n  } else {\n    return /*#__PURE__*/React.createElement(Button, {\n      active: isBlockActive(editor, format),\n      onMouseDown: event => {\n        event.preventDefault();\n        toggleBlock(editor, format);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, icon));\n  }\n};\n\nconst SaveButton = ({\n  format,\n  icon,\n  onSave,\n  value\n}) => {\n  const editor = useSlate();\n  return /*#__PURE__*/React.createElement(Button, {\n    active: isMarkActive(editor, format),\n    onMouseDown: event => {\n      event.preventDefault();\n      toggleMark(editor, format);\n      onSave(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, icon));\n};\n\nconst MarkButton = ({\n  format,\n  icon\n}) => {\n  const editor = useSlate();\n  return /*#__PURE__*/React.createElement(Button, {\n    active: isMarkActive(editor, format),\n    onMouseDown: event => {\n      event.preventDefault();\n      toggleMark(editor, format);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, icon));\n};\n\nconst insertImage = (editor, url) => {\n  const text = {\n    text: \"\"\n  };\n  const image = {\n    type: \"image\",\n    url,\n    children: [text]\n  };\n  Transforms.insertNodes(editor, image);\n};\n\nconst isImageUrl = url => {\n  if (!url) return false;\n  if (!isUrl(url)) return false;\n  const ext = new URL(url).pathname.split(\".\").pop();\n  return imageExtensions.includes(ext);\n};\n\nconst initialValue = [{\n  type: \"paragraph\",\n  children: [{\n    text: \"This is editable \"\n  }]\n}];\nconst Button = React.forwardRef(({\n  className,\n  active,\n  reversed,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(\"span\", Object.assign({}, props, {\n  ref: ref,\n  className: cx(className, css`\n            cursor: pointer;\n            color: ${reversed ? active ? 'white' : '#aaa' : active ? 'black' : '#ccc'};\n          `),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 7\n  }\n})));\nconst Icon = React.forwardRef(({\n  className,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(\"span\", Object.assign({}, props, {\n  ref: ref,\n  className: cx('material-icons', className, css`\n            font-size: 18px;\n            vertical-align: text-bottom;\n          `),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 7\n  }\n})));\nconst Toolbar = React.forwardRef(({\n  className,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(Menu, Object.assign({}, props, {\n  ref: ref,\n  className: cx(className, css`\n            display: flex;\n            width: 1100px;\n            max-width: 100vw;\n            flex-direction: row;\n            align-items: start;\n            padding: 1px 18px 17px;\n            margin: 0 -20px;\n            border-bottom: 2px solid #eee;\n            margin-bottom: 20px;`),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 7\n  }\n})));\nconst Menu = React.forwardRef(({\n  className,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n  ref: ref,\n  className: cx(className, css`\n            & > * {\n              display: inline-block;\n             \n            }\n            & > * + * {\n              margin-left: 15px;\n            }\n          `),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 7\n  }\n})));\nexport default TextEditor;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","useCallback","useMemo","useState","forwardRef","Ref","PropsWithChildren","useEffect","isHotkey","Editable","withReact","useSlate","Slate","Editor","Transforms","createEditor","Node","withHistory","isUrl","imageExtensions","cx","css","HOTKEYS","LIST_TYPES","TextEditor","props","value","setValue","initialValue","width","setWidth","renderElement","renderLeaf","editor","display","flexDirection","alignItems","maxWidth","onSave","event","hotkey","preventDefault","mark","toggleMark","toggleBlock","format","isActive","isBlockActive","isList","includes","isImage","unwrapNodes","match","n","type","split","setNodes","block","children","wrapNodes","isMarkActive","removeMark","addMark","nodes","marks","Element","attributes","element","url","Leaf","leaf","bold","code","italic","underline","BlockButton","icon","window","prompt","insertImage","SaveButton","MarkButton","text","image","insertNodes","isImageUrl","ext","URL","pathname","pop","Button","className","active","reversed","ref","Icon","Toolbar","Menu"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState, forwardRef, Ref, PropsWithChildren, useEffect } from \"react\";\nimport isHotkey from \"is-hotkey\";\nimport { Editable, withReact, useSlate, Slate } from \"slate-react\";\nimport { Editor, Transforms, createEditor, Node } from \"slate\";\nimport { withHistory } from \"slate-history\";\nimport isUrl from \"is-url\";\nimport imageExtensions from \"image-extensions\";\nimport { cx, css } from 'emotion'\n\nconst HOTKEYS = {\n  \"mod+b\": \"bold\",\n  \"mod+i\": \"italic\",\n  \"mod+u\": \"underline\",\n  \"mod+`\": \"code\",\n};\n\nconst LIST_TYPES = [\"numbered-list\", \"bulleted-list\"];\n\nconst TextEditor = (props) => {\n  const [value, setValue] = useState(props.initialValue? props.initialValue : initialValue);\n  const [width, setWidth] = useState(1100);\n  const renderElement = useCallback((props) => <Element {...props} />, []);\n  const renderLeaf = useCallback((props) => <Leaf {...props} />, []);\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n  \n  return (\n\n    <Slate editor={editor} value={value} onChange={(value) => setValue(value)}>\n      <div style={{display: 'flex'},{flexDirection: 'column'},{alignItems: 'center'}, {width: 1100}, {maxWidth: '100vw'}}>\n      <Toolbar>\n      <MarkButton format=\"bold\" icon=\"format_bold\" />\n        <MarkButton format=\"italic\" icon=\"format_italic\" />\n        <MarkButton format=\"underline\" icon=\"format_underlined\" />\n        <MarkButton format=\"code\" icon=\"code\" />\n        <BlockButton format=\"heading-one\" icon=\"looks_one\" />\n        <BlockButton format=\"heading-two\" icon=\"looks_two\" />\n        <BlockButton format=\"block-quote\" icon=\"format_quote\" />\n        <BlockButton format=\"numbered-list\" icon=\"format_list_numbered\" />\n        <BlockButton format=\"bulleted-list\" icon=\"format_list_bulleted\" />\n        <BlockButton format=\"image\" icon=\"image\"/>\n        <SaveButton  format=\"save\" icon=\"save\" onSave={props.onSave} value={value}/>\n      </Toolbar>\n\n      <Editable\n        renderElement={renderElement}\n        renderLeaf={renderLeaf}\n        placeholder=\"Enter some rich text…\"\n        autoFocus\n        onKeyDown={(event) => {\n          for (const hotkey in HOTKEYS) {\n            if (isHotkey(hotkey, event)) {\n              event.preventDefault();\n              const mark = HOTKEYS[hotkey];\n              toggleMark(editor, mark);\n            }\n          }\n        }}\n      />\n          \n      </div>\n    </Slate>\n  );\n};\n\n\nconst toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format);\n  const isList = LIST_TYPES.includes(format);\n  const isImage = format === \"image\";\n  Transforms.unwrapNodes(editor, {\n    match: (n) => LIST_TYPES.includes(n.type),\n    split: true,\n  });\n\n  Transforms.setNodes(editor, {\n    type: isActive ? \"paragraph\" : isList ? \"list-item\" : !isImage? format : \"\",\n  });\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\nconst isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: (n) => n.type === format,\n  });\n  \n    return !!match;\n  \n \n};\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\nconst Element = ({ attributes, children, element }) => {\n  switch (element.type) {\n    case \"block-quote\":\n      return <blockquote {...attributes}>{children}</blockquote>;\n    case \"bulleted-list\":\n      return <ul {...attributes}>{children}</ul>;\n    case \"heading-one\":\n      return <h1 {...attributes}>{children}</h1>;\n    case \"heading-two\":\n      return <h2 {...attributes}>{children}</h2>;\n    case \"list-item\":\n      return <li {...attributes}>{children}</li>;\n    case \"numbered-list\":\n      return <ol {...attributes}>{children}</ol>;\n    case \"image\":\n      return (\n        <div {...attributes}>\n          <div contentEditable={false}>\n            <img\n              src={element.url}\n            />\n          </div>\n          {children}\n        </div>\n      );\n    default:\n      return <p {...attributes}>{children}</p>;\n  }\n};\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>;\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>;\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>;\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>;\n  }\n\n  return <span {...attributes}>{children}</span>;\n};\n\nconst BlockButton = ({ format, icon }) => {\n  const editor = useSlate();\n  if (format === \"image\") {\n    return (<Button\n      active={isBlockActive(editor, format)}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        const url = window.prompt('Enter the URL of the image:')\n        if(!url) return \n        toggleBlock(editor, format);\n        insertImage(editor, url);\n      }}\n    >\n      <Icon>{icon}</Icon>\n    </Button>);\n  } else {\n    return (\n      <Button\n        active={isBlockActive(editor, format)}\n        onMouseDown={(event) => {\n          event.preventDefault();\n          toggleBlock(editor, format);\n        }}\n      >\n        <Icon>{icon}</Icon>\n      </Button>\n    );\n  }\n};\n\nconst SaveButton = ({ format, icon, onSave, value}) => {\n    const editor = useSlate();\n    return (\n      <Button\n        active={isMarkActive(editor, format)}\n        onMouseDown={(event) => {\n          event.preventDefault();\n          toggleMark(editor, format);\n          onSave(value);\n        }}\n      >\n          <Icon>{icon}</Icon>\n      </Button>\n    );\n  };\n\n\nconst MarkButton = ({ format, icon }) => {\n  const editor = useSlate();\n  return (\n    <Button\n      active={isMarkActive(editor, format)}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        toggleMark(editor, format);\n       \n      }}\n    >\n        <Icon>{icon}</Icon>\n    </Button>\n  );\n};\n\nconst insertImage = (editor, url) => {\n  const text = { text: \"\" };\n  const image = { type: \"image\", url, children: [text] };\n  Transforms.insertNodes(editor, image);\n};\n\nconst isImageUrl = (url) => {\n  if (!url) return false;\n  if (!isUrl(url)) return false;\n  const ext = new URL(url).pathname.split(\".\").pop();\n  return imageExtensions.includes(ext);\n};\n\n\nconst initialValue = [\n  {\n    type: \"paragraph\",\n    children: [\n      { text: \"This is editable \" },\n    ],\n    }\n];\n\nconst Button = React.forwardRef(\n    (\n      {\n        className,\n        active,\n        reversed,\n        ...props\n      },\n      ref) => (\n      <span\n        {...props}\n        ref={ref}\n        className={cx(\n          className,\n          css`\n            cursor: pointer;\n            color: ${reversed\n              ? active\n                ? 'white'\n                : '#aaa'\n              : active\n              ? 'black'\n              : '#ccc'};\n          `\n        )}\n      />\n    )\n  )\n\n  const Icon = React.forwardRef(\n    (\n      { className, ...props },\n      ref\n    ) => (\n      <span\n        {...props}\n        ref={ref}\n        className={cx(\n          'material-icons',\n          className,\n          css`\n            font-size: 18px;\n            vertical-align: text-bottom;\n          `\n        )}\n      />\n    )\n  )\n\n  const Toolbar = React.forwardRef(\n    (\n      { className, ...props },\n      ref\n    ) => (\n      <Menu\n        {...props}\n        ref={ref}\n        className={cx(\n          className,\n          css`\n            display: flex;\n            width: 1100px;\n            max-width: 100vw;\n            flex-direction: row;\n            align-items: start;\n            padding: 1px 18px 17px;\n            margin: 0 -20px;\n            border-bottom: 2px solid #eee;\n            margin-bottom: 20px;`\n        )}\n      />\n    )\n  )\n\n  const Menu = React.forwardRef(\n    (\n      { className, ...props },\n      ref\n    ) => (\n      <div\n        {...props}\n        ref={ref}\n        className={cx(\n          className,\n          css`\n            & > * {\n              display: inline-block;\n             \n            }\n            & > * + * {\n              margin-left: 15px;\n            }\n          `\n        )}\n      />\n    )\n  )\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}