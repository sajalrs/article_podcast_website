{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block, Value } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from 'image-extensions';\nimport isUrl from 'is-url';\nconst initialValue = Value.fromJSON({\n  document: {\n    nodes: [{\n      object: \"block\",\n      type: \"paragraph\",\n      nodes: [{\n        object: \"text\",\n        leaves: [{\n          text: \"This text is editable\"\n        }]\n      }]\n    }]\n  }\n});\n\nconst TextEditor = () => {\n  const [value, setValue] = useState(initialValue);\n  const ref = useRef();\n  const DEFAULT_NODE = 'paragraph';\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n\n  const hasMark = type => {\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  const hasBlock = type => {\n    return value.blocks.some(node => node.type === type);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"overarching\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormatToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, renderMarkButton(\"bold\", `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`), renderMarkButton(\"italic\", `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`), renderMarkButton(\"underlined\", `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`), renderMarkButton(\"code\", `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`), renderBlockButton(\"heading-one\", `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`), renderBlockButton(\"heading-two\", `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`), renderBlockButton(\"block-quote\", `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`), renderBlockButton(\"numbered-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`), renderBlockButton(\"bulleted-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`), renderImageButton(\"fas fa-image\"), /*#__PURE__*/React.createElement(\"button\", {\n    onPointerDown: () => console.log(value.document),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: `${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Editor, {\n    ref: ref,\n    className: styles[\"Editor\"],\n    value: value,\n    onChange: opts => setValue(opts.value),\n    onKeyDown: onKeyDown,\n    renderMark: renderMark,\n    renderBlock: renderBlock,\n    onDrop: onDropOrPaste,\n    schema: schema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst isImage = url => {\n  return imageExtensions.includes(getExtension(url));\n};\n\nconst getExtension = url => {\n  return new URL(url).pathname.split('.').pop;\n};\n\nconst insertImage = (editor, src, target) => {\n  if (target) {\n    editor.select(target);\n  }\n\n  editor.insertBlock({\n    type: 'image',\n    data: {\n      src\n    }\n  });\n};\n\nconst schema = {\n  document: {\n    last: {\n      type: 'paragraph'\n    },\n    normalize: (editor, {\n      code,\n      node,\n      child\n    }) => {\n      switch (code) {\n        case 'last_child_type_invalid':\n          {\n            const paragraph = Block.create('paragraph');\n            return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n          }\n      }\n    }\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    }\n  }\n};\n\nconst renderMarkButton = (type, icon) => {\n  const isActive = hasMark(type);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    active: isActive,\n    onPointerDown: event => onClickMark(event, type),\n    className: isActive ? `styles[\"active] styles[\"tooltip-icon-button\"]` : styles[\"tooltip-icon-button\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst renderImageButton = icon => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: styles[\"tooltip-icon-button\"],\n    onPointerDown: onClickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst renderBlockButton = (type, icon) => {\n  let isActive = hasBlock(type);\n\n  if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n    const {\n      document,\n      blocks\n    } = value;\n\n    if (blocks.size > 0) {\n      const parent = document.getParent(blocks.first().key);\n      isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: isActive ? `styles[\"active] styles[\"tooltip-icon-button\"]` : styles[\"tooltip-icon-button\"],\n    active: isActive,\n    onPointerDown: event => onClickBlock(event, type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst renderBlock = (props, editor, next) => {\n  const {\n    attributes,\n    children,\n    node\n  } = props;\n\n  switch (node.type) {\n    case \"block-quote\":\n      return /*#__PURE__*/React.createElement(\"blockquote\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 16\n        }\n      }), children);\n\n    case \"bulleted-list\":\n      return /*#__PURE__*/React.createElement(\"ul\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 16\n        }\n      }), children);\n\n    case \"heading-one\":\n      return /*#__PURE__*/React.createElement(\"h1\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 16\n        }\n      }), children);\n\n    case \"heading-two\":\n      return /*#__PURE__*/React.createElement(\"h2\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 16\n        }\n      }), children);\n\n    case \"list-item\":\n      return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 16\n        }\n      }), children);\n\n    case \"numbered-list\":\n      return /*#__PURE__*/React.createElement(\"ol\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 16\n        }\n      }), children);\n\n    case \"image\":\n      {\n        const src = node.data.get('src');\n        return /*#__PURE__*/React.createElement(\"img\", Object.assign({}, attributes, {\n          src: src,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }\n        }));\n      }\n\n    default:\n      return next();\n  }\n};\n\nconst renderMark = (props, editor, next) => {\n  const {\n    children,\n    mark,\n    attributes\n  } = props;\n\n  switch (mark.type) {\n    case \"bold\":\n      return /*#__PURE__*/React.createElement(\"strong\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 16\n        }\n      }), children);\n\n    case \"code\":\n      return /*#__PURE__*/React.createElement(\"code\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 16\n        }\n      }), children);\n\n    case \"italic\":\n      return /*#__PURE__*/React.createElement(\"em\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 16\n        }\n      }), children);\n\n    case \"underlined\":\n      return /*#__PURE__*/React.createElement(\"u\", Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 16\n        }\n      }), children);\n\n    default:\n      return next();\n  }\n};\n\nconst onKeyDown = (event, editor, next) => {\n  let mark;\n\n  if (isBoldHotkey(event)) {\n    mark = \"bold\";\n  } else if (isItalicHotkey(event)) {\n    mark = \"italic\";\n  } else if (isUnderlinedHotkey(event)) {\n    mark = \"underlined\";\n  } else if (isCodeHotkey(event)) {\n    mark = \"code\";\n  } else {\n    return next();\n  }\n\n  event.preventDefault();\n  editor.toggleMark(mark);\n};\n\nconst onClickMark = (event, type) => {\n  event.preventDefault();\n  ref.current.toggleMark(type);\n};\n\nconst onClickImage = event => {\n  event.preventDefault();\n  const src = window.prompt(\"enter the URL of the image:\");\n  if (!src) return;\n  ref.current.command(insertImage, src);\n};\n\nconst onClickBlock = (event, type) => {\n  event.preventDefault();\n  const editor = ref.current;\n  const value = editor.value;\n  const document = value.document; // Handle everything but list buttons.\n\n  if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n    const isActive = hasBlock(type);\n    const isList = hasBlock(\"list-item\");\n\n    if (isList) {\n      editor.setBlocks(isActive ? DEFAULT_NODE : type).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n    } else {\n      editor.setBlocks(isActive ? DEFAULT_NODE : type);\n    }\n  } else {\n    // Handle the extra wrapping required for list buttons.\n    const isList = hasBlock(\"list-item\");\n    const isType = value.blocks.some(block => {\n      return !!document.getClosest(block.key, parent => parent.type === type);\n    });\n\n    if (isList && isType) {\n      editor.setBlocks(DEFAULT_NODE).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n    } else if (isList) {\n      editor.unwrapBlock(type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\").wrapBlock(type);\n    } else {\n      editor.setBlocks(\"list-item\").wrapBlock(type);\n    }\n  }\n};\n\nconst onDropOrPaste = (event, editor, next) => {\n  const target = editor.findEventRange(event);\n  if (!target && event.type === 'drop') return next();\n  const transfer = getEventTransfer(event);\n  const {\n    type,\n    text,\n    files\n  } = transfer;\n\n  if (type === 'files') {\n    for (const file of files) {\n      const reader = new FileReader();\n      const [mime] = file.type.split('/');\n      if (mime !== 'image') continue;\n      reader.addEventListener('load', () => {\n        editor.command(insertImage, reader.result, target);\n      });\n      reader.readAsDataURL(file);\n    }\n\n    return;\n  }\n\n  if (type === 'text') {\n    if (!isUrl(text)) return next();\n    if (!isImage(text)) return next();\n    editor.command(insertImage, text, target);\n    return;\n  }\n\n  next();\n};\n\nexport default TextEditor;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","useState","useRef","Editor","getEventTransfer","Block","Value","styles","FormatToolbar","isKeyHotkey","imageExtensions","isUrl","initialValue","fromJSON","document","nodes","object","type","leaves","text","TextEditor","value","setValue","ref","DEFAULT_NODE","isBoldHotkey","isItalicHotkey","isUnderlinedHotkey","isCodeHotkey","hasMark","activeMarks","some","mark","hasBlock","blocks","node","renderMarkButton","renderBlockButton","renderImageButton","console","log","opts","onKeyDown","renderMark","renderBlock","onDropOrPaste","schema","isImage","url","includes","getExtension","URL","pathname","split","pop","insertImage","editor","src","target","select","insertBlock","data","last","normalize","code","child","paragraph","create","insertNodeByKey","key","size","image","isVoid","icon","isActive","event","onClickMark","onClickImage","parent","getParent","first","onClickBlock","props","next","attributes","children","get","preventDefault","toggleMark","current","window","prompt","command","isList","setBlocks","unwrapBlock","isType","block","getClosest","wrapBlock","findEventRange","transfer","files","file","reader","FileReader","mime","addEventListener","result","readAsDataURL"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block, Value } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from 'image-extensions'\nimport isUrl from 'is-url'\n\n\nconst initialValue = Value.fromJSON({\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"paragraph\",\n        nodes: [\n          {\n            object: \"text\",\n            leaves: [\n              {\n                text: \"This text is editable\",\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n});\n\nconst TextEditor = () => {\n  const [value, setValue] = useState(initialValue);\n  const ref = useRef();\n  const DEFAULT_NODE = 'paragraph'\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n\n  const hasMark = type => {\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n const hasBlock = type => {\n    return value.blocks.some(node => node.type === type)\n  }\n\n \n\n\n  return (\n    <div className={styles[\"overarching\"]}>\n      <FormatToolbar>\n        {renderMarkButton(\"bold\", `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`)}\n        {renderMarkButton(\"italic\", `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`)}\n        {renderMarkButton(\"underlined\", `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`)}\n        {renderMarkButton(\"code\", `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`)}\n        {renderBlockButton(\"heading-one\", `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`)}\n        {renderBlockButton(\"heading-two\", `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`)}\n        {renderBlockButton(\"block-quote\", `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`)}\n        {renderBlockButton(\"numbered-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`)}\n        {renderBlockButton(\"bulleted-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`)}\n        {renderImageButton(\"fas fa-image\")}\n        <button\n        onPointerDown={() => console.log(value.document)}>\n            <i className={`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`}></i>\n        </button>\n      </FormatToolbar>\n      <Editor\n        ref={ref}\n        className={styles[\"Editor\"]}\n        value={value}\n        onChange={(opts) => setValue(opts.value)}\n        onKeyDown={onKeyDown}\n        renderMark={renderMark}\n        renderBlock={renderBlock}\n        onDrop={onDropOrPaste}\n        schema={schema}\n      />\n    </div>\n  );\n  };\n\n  const isImage = (url) => {\n    return imageExtensions.includes(getExtension(url));\n  }\n\n  const getExtension = (url) => {\n      return new URL(url).pathname.split('.').pop;\n  }\n\n  const insertImage = (editor, src, target) => {\n    if(target){\n        editor.select(target)\n    }\n\n    editor.insertBlock({\n        type: 'image',\n        data: {src},\n    })\n  } \n\n  const schema = {\n    document: {\n      last: { type: 'paragraph' },\n      normalize: (editor, { code, node, child }) => {\n        switch (code) {\n          case 'last_child_type_invalid': {\n            const paragraph = Block.create('paragraph')\n            return editor.insertNodeByKey(node.key, node.nodes.size, paragraph)\n          }\n        }\n      },\n    },\n    blocks: {\n      image: {\n        isVoid: true,\n      },\n    },\n  }\n  \n\n  const renderMarkButton = (type, icon) => {\n    const isActive = hasMark(type);\n    return (\n      <button\n        active={isActive}\n        onPointerDown={(event) => onClickMark(event, type)}\n        className={isActive? `styles[\"active] styles[\"tooltip-icon-button\"]`: styles[\"tooltip-icon-button\"]}\n      >\n        <i className={icon} />\n      </button>\n    );\n  };\n\n  const renderImageButton = (icon) => {\n      return(\n        <button\n        className={styles[\"tooltip-icon-button\"]}\n        onPointerDown={onClickImage}\n      >\n        <i className={icon} />\n      </button>\n      )\n  }\n\n  const renderBlockButton = (type, icon) => {\n    let isActive = hasBlock(type);\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const { document, blocks } = value;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return (\n      <button\n      className={isActive? `styles[\"active] styles[\"tooltip-icon-button\"]`: styles[\"tooltip-icon-button\"]}\n        active={isActive}\n        onPointerDown={(event) => onClickBlock(event, type)}\n      >\n        <i className={icon}></i>\n      </button>\n    );\n  };\n\n  const renderBlock = (props, editor, next) => {\n    const { attributes, children, node } = props;\n\n    switch (node.type) {\n      case \"block-quote\":\n        return <blockquote {...attributes}>{children}</blockquote>;\n      case \"bulleted-list\":\n        return <ul {...attributes}>{children}</ul>;\n      case \"heading-one\":\n        return <h1 {...attributes}>{children}</h1>;\n      case \"heading-two\":\n        return <h2 {...attributes}>{children}</h2>;\n      case \"list-item\":\n        return <li {...attributes}>{children}</li>;\n      case \"numbered-list\":\n        return <ol {...attributes}>{children}</ol>;\n      case \"image\": {\n        const src = node.data.get('src')\n        return (\n          <img\n            {...attributes}\n            src={src}\n          />\n        )\n      }\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return <strong {...attributes}>{children}</strong>;\n      case \"code\":\n        return <code {...attributes}>{children}</code>;\n      case \"italic\":\n        return <em {...attributes}>{children}</em>;\n      case \"underlined\":\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = event => {\n      event.preventDefault();\n      const src = window.prompt(\"enter the URL of the image:\");\n      if(!src) return\n      ref.current.command(insertImage, src)\n  }\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document;\n\n    // Handle everything but list buttons.\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor\n          .setBlocks(isActive ? DEFAULT_NODE : type)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some((block) => {\n        return !!document.getClosest(\n          block.key,\n          (parent) => parent.type === type\n        );\n      });\n\n      if (isList && isType) {\n        editor\n          .setBlocks(DEFAULT_NODE)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor\n          .unwrapBlock(\n            type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\"\n          )\n          .wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n   const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event)\n    if (!target && event.type === 'drop') return next()\n\n    const transfer = getEventTransfer(event)\n    const { type, text, files } = transfer\n\n    if (type === 'files') {\n      for (const file of files) {\n        const reader = new FileReader()\n        const [mime] = file.type.split('/')\n        if (mime !== 'image') continue\n\n        reader.addEventListener('load', () => {\n          editor.command(insertImage, reader.result, target)\n        })\n\n        reader.readAsDataURL(file)\n      }\n      return\n    }\n\n    if (type === 'text') {\n      if (!isUrl(text)) return next()\n      if (!isImage(text)) return next()\n      editor.command(insertImage, text, target)\n      return\n    }\n\n    next()\n  }\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}