{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar getDocument = require('get-document');\n/**\n * Module exports.\n */\n\n\nmodule.exports = getWindow;\n\nvar needsIEFallback = require('./needs-ie-fallback');\n/**\n * Returns `true` if `w` is a Window object, or `false` otherwise.\n *\n * @param {Mixed} w - Window object, maybe\n * @return {Boolean}\n * @private\n */\n\n\nfunction isWindow(w) {\n  return w && w.window === w;\n}\n/**\n * Returns the `window` object associated with the given `node`, which may be\n * a DOM element, the Window object, a Selection, a Range. Basically any DOM\n * object that references the Window in some way, this function will find it.\n *\n * @param {Mixed} node - DOM node, selection, or range in which to find the `window` object\n * @return {Window} the `window` object associated with `node`\n * @public\n */\n\n\nfunction getWindow(node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  var doc = getDocument(node);\n\n  if (needsIEFallback) {\n    // In IE 6-8, only the variable 'window' can be used to connect events (others\n    // may be only copies).\n    doc.parentWindow.execScript('document._parentWindow = window;', 'Javascript');\n    var win = doc._parentWindow; // to prevent memory leak, unset it after use\n    // another possibility is to add an onUnload handler,\n    // (which seems overkill to @liucougar)\n\n    doc._parentWindow = null;\n    return win;\n  } else {\n    // standards-compliant and newer IE\n    return doc.defaultView || doc.parentWindow;\n  }\n}","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/node_modules/get-window/index.js"],"names":["getDocument","require","module","exports","getWindow","needsIEFallback","isWindow","w","window","node","doc","parentWindow","execScript","win","_parentWindow","defaultView"],"mappings":"AACA;;;AAIA,IAAIA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;AAEA;;;;;AAIAC,MAAM,CAACC,OAAP,GAAiBC,SAAjB;;AAEA,IAAIC,eAAe,GAAGJ,OAAO,CAAC,qBAAD,CAA7B;AAEA;;;;;;;;;AAQA,SAASK,QAAT,CAAmBC,CAAnB,EAAsB;AACpB,SAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaD,CAAzB;AACD;AAED;;;;;;;;;;;AAUA,SAASH,SAAT,CAAmBK,IAAnB,EAAyB;AACvB,MAAIH,QAAQ,CAACG,IAAD,CAAZ,EAAoB;AAClB,WAAOA,IAAP;AACD;;AAED,MAAIC,GAAG,GAAGV,WAAW,CAACS,IAAD,CAArB;;AAEA,MAAIJ,eAAJ,EAAqB;AACnB;AACA;AACAK,IAAAA,GAAG,CAACC,YAAJ,CAAiBC,UAAjB,CAA4B,kCAA5B,EAAgE,YAAhE;AACA,QAAIC,GAAG,GAAGH,GAAG,CAACI,aAAd,CAJmB,CAKnB;AACA;AACA;;AACAJ,IAAAA,GAAG,CAACI,aAAJ,GAAoB,IAApB;AACA,WAAOD,GAAP;AACD,GAVD,MAUO;AACL;AACA,WAAOH,GAAG,CAACK,WAAJ,IAAmBL,GAAG,CAACC,YAA9B;AACD;AACF","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar getDocument = require('get-document');\n\n/**\n * Module exports.\n */\n\nmodule.exports = getWindow;\n\nvar needsIEFallback = require('./needs-ie-fallback');\n\n/**\n * Returns `true` if `w` is a Window object, or `false` otherwise.\n *\n * @param {Mixed} w - Window object, maybe\n * @return {Boolean}\n * @private\n */\n\nfunction isWindow (w) {\n  return w && w.window === w;\n}\n\n/**\n * Returns the `window` object associated with the given `node`, which may be\n * a DOM element, the Window object, a Selection, a Range. Basically any DOM\n * object that references the Window in some way, this function will find it.\n *\n * @param {Mixed} node - DOM node, selection, or range in which to find the `window` object\n * @return {Window} the `window` object associated with `node`\n * @public\n */\n\nfunction getWindow(node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  var doc = getDocument(node);\n\n  if (needsIEFallback) {\n    // In IE 6-8, only the variable 'window' can be used to connect events (others\n    // may be only copies).\n    doc.parentWindow.execScript('document._parentWindow = window;', 'Javascript');\n    var win = doc._parentWindow;\n    // to prevent memory leak, unset it after use\n    // another possibility is to add an onUnload handler,\n    // (which seems overkill to @liucougar)\n    doc._parentWindow = null;\n    return win;\n  } else {\n    // standards-compliant and newer IE\n    return doc.defaultView || doc.parentWindow;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}