{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/Cards/MediumCard/MediumCard.js\";\nimport React from \"react\";\nimport styles from \"./MediumCard.module.css\";\nimport Card from \"../Card.js\";\n\nconst MediumCard = props => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const audioPlayerRef = useSelector(state => state.audioPlayer.audioPlayerRef);\n\n  const onClick = () => {\n    switch (props.contentType) {\n      case Card.ContentType[\"article-internal\"]:\n        history.push(props.link);\n\n      case Card.ContentType[\"audio-internal\"]:\n        dispatch(playAudio(props.link));\n\n      case Card.ContentType[\"video-youtube\"]:\n        dispatch(playVideo(props.link));\n\n      default:\n    }\n  };\n\n  const isPlayable = props.contentType === Card.ContentType[\"video-external\"] || props.contentType === Card.ContentType[\"video-youtube\"] || props.contentType === Card.ContentType[\"audio-internal\"];\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: styles[\"card\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ImageContainer, {\n    image: props.image,\n    onClick: onClick,\n    audioPlayerRef: props.contentType === Card.ContentType[\"audio-internal\"] ? audioPlayerRef : null,\n    isPlayable: isPlayable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    title: props.title,\n    text: props.text,\n    date: Card.formatDate(props.date),\n    author: props.author,\n    onClick: onClick,\n    audioPlayerRef: props.contentType === Card.ContentType[\"audio-internal\"] ? audioPlayerRef : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst ImageContainer = props => {\n  return props.image ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"img-container\"],\n    onClick: () => {\n      if (props.audioPlayerRef) {\n        props.audioPlayerRef.current.play();\n      }\n\n      props.onClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, props.isPlayable && /*#__PURE__*/React.createElement(\"i\", {\n    className: `${styles[\"play-button\"]} ${styles[\"far\"]} ${styles[\"fa-play-circle\"]} far fa-play-circle`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }))) : null;\n};\n\nconst CardBody = props => {\n  return props.title ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"card-body\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    onClick: () => {\n      if (props.audioPlayerRef) {\n        props.audioPlayerRef.current.play();\n      }\n\n      props.onClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles[\"author\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, props.author), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles[\"date\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, props.date)), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles[\"body-content\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, props.text)) : null;\n};\n\nexport default MediumCard;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/Cards/MediumCard/MediumCard.js"],"names":["React","styles","Card","MediumCard","props","dispatch","useDispatch","history","useHistory","audioPlayerRef","useSelector","state","audioPlayer","onClick","contentType","ContentType","push","link","playAudio","playVideo","isPlayable","image","title","text","formatDate","date","author","ImageContainer","current","play","CardBody"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAMC,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAMC,cAAc,GAAGC,WAAW,CAC/BC,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBH,cADG,CAAlC;;AAIA,QAAMI,OAAO,GAAG,MAAM;AACpB,YAAQT,KAAK,CAACU,WAAd;AACE,WAAKZ,IAAI,CAACa,WAAL,CAAiB,kBAAjB,CAAL;AACER,QAAAA,OAAO,CAACS,IAAR,CAAaZ,KAAK,CAACa,IAAnB;;AACF,WAAKf,IAAI,CAACa,WAAL,CAAiB,gBAAjB,CAAL;AACEV,QAAAA,QAAQ,CAACa,SAAS,CAACd,KAAK,CAACa,IAAP,CAAV,CAAR;;AACF,WAAKf,IAAI,CAACa,WAAL,CAAiB,eAAjB,CAAL;AACEV,QAAAA,QAAQ,CAACc,SAAS,CAACf,KAAK,CAACa,IAAP,CAAV,CAAR;;AACF;AAPF;AASD,GAVD;;AAYA,QAAMG,UAAU,GACdhB,KAAK,CAACU,WAAN,KAAsBZ,IAAI,CAACa,WAAL,CAAiB,gBAAjB,CAAtB,IACAX,KAAK,CAACU,WAAN,KAAsBZ,IAAI,CAACa,WAAL,CAAiB,eAAjB,CADtB,IAEAX,KAAK,CAACU,WAAN,KAAsBZ,IAAI,CAACa,WAAL,CAAiB,gBAAjB,CAHxB;AAIA,sBACE;AAAS,IAAA,SAAS,EAAEd,MAAM,CAAC,MAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACA,IAAA,KAAK,EAAEG,KAAK,CAACiB,KADb;AAEA,IAAA,OAAO,EAAER,OAFT;AAGA,IAAA,cAAc,EACZT,KAAK,CAACU,WAAN,KAAsBZ,IAAI,CAACa,WAAL,CAAiB,gBAAjB,CAAtB,GACIN,cADJ,GAEI,IANN;AAQA,IAAA,UAAU,EAAEW,UARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEhB,KAAK,CAACkB,KADf;AAEE,IAAA,IAAI,EAAElB,KAAK,CAACmB,IAFd;AAGE,IAAA,IAAI,EAAErB,IAAI,CAACsB,UAAL,CAAgBpB,KAAK,CAACqB,IAAtB,CAHR;AAIE,IAAA,MAAM,EAAErB,KAAK,CAACsB,MAJhB;AAKE,IAAA,OAAO,EAAEb,OALX;AAME,IAAA,cAAc,EACZT,KAAK,CAACU,WAAN,KAAsBZ,IAAI,CAACa,WAAL,CAAiB,gBAAjB,CAAtB,GACIN,cADJ,GAEI,IATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AA0BD,CAjDD;;AAmDA,MAAMkB,cAAc,GAAIvB,KAAD,IAAW;AAChC,SACEA,KAAK,CAACiB,KAAN,gBACA;AACA,IAAA,SAAS,EAAEpB,MAAM,CAAC,eAAD,CADjB;AAEA,IAAA,OAAO,EAAE,MAAM;AACb,UAAIG,KAAK,CAACK,cAAV,EAA0B;AACxBL,QAAAA,KAAK,CAACK,cAAN,CAAqBmB,OAArB,CAA6BC,IAA7B;AACD;;AACDzB,MAAAA,KAAK,CAACS,OAAN;AACD,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASC;AAAM,IAAA,GAAG,EAAET,KAAK,CAACiB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,eAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGjB,KAAK,CAACgB,UAAN,iBACC;AACE,IAAA,SAAS,EAAG,GAAEnB,MAAM,CAAC,aAAD,CAAgB,IAAGA,MAAM,CAAC,KAAD,CAAQ,IAAGA,MAAM,CAAC,gBAAD,CAAmB,qBADnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAVA,CADA,GAoBQ,IArBV;AAuBD,CAxBD;;AA0BA,MAAM6B,QAAQ,GAAI1B,KAAD,IAAW;AAC1B,SACEA,KAAK,CAACkB,KAAN,gBACA;AAAK,IAAA,SAAS,EAAErB,MAAM,CAAC,WAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIG,KAAK,CAACK,cAAV,EAA0B;AACxBL,QAAAA,KAAK,CAACK,cAAN,CAAqBmB,OAArB,CAA6BC,IAA7B;AACD;;AACDzB,MAAAA,KAAK,CAACS,OAAN;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGT,KAAK,CAACkB,KART,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAErB,MAAM,CAAC,QAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCG,KAAK,CAACsB,MAA1C,CADF,eAEE;AAAM,IAAA,SAAS,EAAEzB,MAAM,CAAC,MAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCG,KAAK,CAACqB,IAAxC,CAFF,CAXF,eAeE;AAAG,IAAA,SAAS,EAAExB,MAAM,CAAC,cAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCG,KAAK,CAACmB,IAA7C,CAfF,CADA,GAiBQ,IAlBV;AAoBD,CArBD;;AAuBA,eAAepB,UAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./MediumCard.module.css\";\nimport Card from \"../Card.js\";\nconst MediumCard = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const audioPlayerRef = useSelector(\n    (state) => state.audioPlayer.audioPlayerRef\n  );\n\n  const onClick = () => {\n    switch (props.contentType) {\n      case Card.ContentType[\"article-internal\"]:\n        history.push(props.link);\n      case Card.ContentType[\"audio-internal\"]:\n        dispatch(playAudio(props.link));\n      case Card.ContentType[\"video-youtube\"]:\n        dispatch(playVideo(props.link));\n      default:\n    }\n  };\n\n  const isPlayable =\n    props.contentType === Card.ContentType[\"video-external\"] ||\n    props.contentType === Card.ContentType[\"video-youtube\"] ||\n    props.contentType === Card.ContentType[\"audio-internal\"];\n  return (\n    <article className={styles[\"card\"]}>\n      <ImageContainer\n      image={props.image}\n      onClick={onClick}\n      audioPlayerRef={\n        props.contentType === Card.ContentType[\"audio-internal\"]\n          ? audioPlayerRef\n          : null\n      }\n      isPlayable={isPlayable}\n      />\n      <CardBody\n        title={props.title}\n        text={props.text}\n        date={Card.formatDate(props.date)}\n        author={props.author}\n        onClick={onClick}\n        audioPlayerRef={\n          props.contentType === Card.ContentType[\"audio-internal\"]\n            ? audioPlayerRef\n            : null\n        }\n      />\n    </article>\n  );\n};\n\nconst ImageContainer = (props) => {\n  return (\n    props.image?\n    <div\n    className={styles[\"img-container\"]}\n    onClick={() => {\n      if (props.audioPlayerRef) {\n        props.audioPlayerRef.current.play();\n      }\n      props.onClick();\n    }}\n  >\n     <img  src={props.image}/>\n    <div>\n     \n      {props.isPlayable && (\n        <i\n          className={`${styles[\"play-button\"]} ${styles[\"far\"]} ${styles[\"fa-play-circle\"]} far fa-play-circle`}\n        ></i>\n      )}\n      \n    </div>\n    </div>: null\n  );\n};\n\nconst CardBody = (props) => {\n  return (\n    props.title?\n    <div className={styles[\"card-body\"]}>\n      <h2\n        onClick={() => {\n          if (props.audioPlayerRef) {\n            props.audioPlayerRef.current.play();\n          }\n          props.onClick();\n        }}\n      >\n        {props.title}\n      </h2>\n      <p>\n        <span className={styles[\"author\"]}>{props.author}</span>\n        <span className={styles[\"date\"]}>{props.date}</span>\n      </p>\n      <p className={styles[\"body-content\"]}>{props.text}</p>\n    </div>: null\n  );\n};\n\nexport default MediumCard;\n"]},"metadata":{},"sourceType":"module"}