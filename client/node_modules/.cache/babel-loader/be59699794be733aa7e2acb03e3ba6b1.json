{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from 'image-extensions';\nimport isUrl from 'is-url';\nconst schema = {\n  document: {\n    last: {\n      type: 'paragraph'\n    },\n    normalize: (editor, {\n      code,\n      node,\n      child\n    }) => {\n      switch (code) {\n        case 'last_child_type_invalid':\n          {\n            const paragraph = Block.create('paragraph');\n            return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n          }\n      }\n    }\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    }\n  }\n};\n\nconst TextEditor = props => {\n  const ref = useRef();\n  const value = props.textEditorValue;\n  const setValue = props.setTextEditorValue;\n  const DEFAULT_NODE = 'paragraph';\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n  const isTabHotkey = isKeyHotkey(\"tab\");\n\n  const hasMark = type => {\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  const hasBlock = type => {\n    return value.blocks.some(node => node.type === type);\n  };\n\n  const isImage = url => {\n    return imageExtensions.includes(getExtension(url));\n  };\n\n  const getExtension = url => {\n    return new URL(url).pathname.split('.').pop;\n  };\n\n  const insertImage = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: 'image',\n      data: {\n        src\n      }\n    });\n  };\n\n  const renderMarkButton = (type, icon) => {\n    const isActive = hasMark(type);\n    return /*#__PURE__*/React.createElement(\"button\", {\n      active: isActive,\n      onPointerDown: event => onClickMark(event, type),\n      className: isActive ? `styles[\"active] styles[\"tooltip-icon-button\"]` : styles[\"tooltip-icon-button\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderImageButton = icon => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: styles[\"tooltip-icon-button\"],\n      onPointerDown: onClickImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderSaveButton = icon => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: styles[\"tooltip-icon-button\"],\n      onPointerDown: props.onSave ? props.onSave : () => console.log(JSON.stringify(value.toJSON())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const renderBlockButton = (type, icon) => {\n    let isActive = hasBlock(type);\n\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const {\n        document,\n        blocks\n      } = value;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: isActive ? `styles[\"active] styles[\"tooltip-icon-button\"]` : styles[\"tooltip-icon-button\"],\n      active: isActive,\n      onPointerDown: event => onClickBlock(event, type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderBlock = (props, editor, next) => {\n    const {\n      attributes,\n      children,\n      node\n    } = props;\n\n    switch (node.type) {\n      case \"block-quote\":\n        return /*#__PURE__*/React.createElement(\"blockquote\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"bulleted-list\":\n        return /*#__PURE__*/React.createElement(\"ul\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"heading-one\":\n        return /*#__PURE__*/React.createElement(\"h1\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"heading-two\":\n        return /*#__PURE__*/React.createElement(\"h2\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"list-item\":\n        return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"numbered-list\":\n        return /*#__PURE__*/React.createElement(\"ol\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"image\":\n        {\n          const src = node.data.get('src');\n          return /*#__PURE__*/React.createElement(\"img\", Object.assign({}, attributes, {\n            src: src,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 11\n            }\n          }));\n        }\n\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const {\n      children,\n      mark,\n      attributes\n    } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return /*#__PURE__*/React.createElement(\"strong\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"code\":\n        return /*#__PURE__*/React.createElement(\"code\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"italic\":\n        return /*#__PURE__*/React.createElement(\"em\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"underlined\":\n        return /*#__PURE__*/React.createElement(\"u\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"tab\":\n        return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 16\n          }\n        }), \"        \", children);\n\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else if (isTabHotkey(event)) {\n      mark = \"tab\";\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = event => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\");\n    if (!src) return;\n    ref.current.command(insertImage, src);\n  };\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document; // Handle everything but list buttons.\n\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some(block => {\n        return !!document.getClosest(block.key, parent => parent.type === type);\n      });\n\n      if (isList && isType) {\n        editor.setBlocks(DEFAULT_NODE).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor.unwrapBlock(type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\").wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n  const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event);\n    if (!target && event.type === 'drop') return next();\n    const transfer = getEventTransfer(event);\n    const {\n      type,\n      text,\n      files\n    } = transfer;\n\n    if (type === 'files') {\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split('/');\n        if (mime !== 'image') continue;\n        reader.addEventListener('load', () => {\n          editor.command(insertImage, reader.result, target);\n        });\n        reader.readAsDataURL(file);\n      }\n\n      return;\n    }\n\n    if (type === 'text') {\n      if (!isUrl(text)) return next();\n      if (!isImage(text)) return next();\n      editor.command(insertImage, text, target);\n      return;\n    }\n\n    next();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"overarching\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormatToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, renderMarkButton(\"bold\", `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`), renderMarkButton(\"italic\", `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`), renderMarkButton(\"underlined\", `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`), renderMarkButton(\"code\", `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`), renderBlockButton(\"heading-one\", `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`), renderBlockButton(\"heading-two\", `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`), renderBlockButton(\"block-quote\", `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`), renderBlockButton(\"numbered-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`), renderBlockButton(\"bulleted-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`), renderImageButton(`${styles[\"fas\"]} ${styles[\"fa-image\"]} fas fa-image`), renderSaveButton(`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`)), /*#__PURE__*/React.createElement(Editor, {\n    ref: ref,\n    className: styles[\"Editor\"],\n    value: value,\n    onChange: opts => setValue(opts.value),\n    onKeyDown: onKeyDown,\n    renderMark: renderMark,\n    renderBlock: renderBlock,\n    onDrop: onDropOrPaste,\n    schema: schema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TextEditor;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","useState","useRef","Editor","getEventTransfer","Block","styles","FormatToolbar","isKeyHotkey","imageExtensions","isUrl","schema","document","last","type","normalize","editor","code","node","child","paragraph","create","insertNodeByKey","key","nodes","size","blocks","image","isVoid","TextEditor","props","ref","value","textEditorValue","setValue","setTextEditorValue","DEFAULT_NODE","isBoldHotkey","isItalicHotkey","isUnderlinedHotkey","isCodeHotkey","isTabHotkey","hasMark","activeMarks","some","mark","hasBlock","isImage","url","includes","getExtension","URL","pathname","split","pop","insertImage","src","target","select","insertBlock","data","renderMarkButton","icon","isActive","event","onClickMark","renderImageButton","onClickImage","renderSaveButton","onSave","console","log","JSON","stringify","toJSON","renderBlockButton","parent","getParent","first","onClickBlock","renderBlock","next","attributes","children","get","renderMark","onKeyDown","preventDefault","toggleMark","current","window","prompt","command","isList","setBlocks","unwrapBlock","isType","block","getClosest","wrapBlock","onDropOrPaste","findEventRange","transfer","text","files","file","reader","FileReader","mime","addEventListener","result","readAsDataURL","opts"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block} from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from 'image-extensions'\nimport isUrl from 'is-url'\n\n\n\n\nconst schema = {\n    document: {\n      last: { type: 'paragraph' },\n      normalize: (editor, { code, node, child }) => {\n        switch (code) {\n          case 'last_child_type_invalid': {\n            const paragraph = Block.create('paragraph')\n            return editor.insertNodeByKey(node.key, node.nodes.size, paragraph)\n          }\n        }\n      },\n    },\n    blocks: {\n      image: {\n        isVoid: true,\n      },\n    },\n  }\n  \n\nconst TextEditor = (props) => {\n\n  const ref = useRef();\n  const value = props.textEditorValue;\n  const setValue = props.setTextEditorValue;\n  const DEFAULT_NODE = 'paragraph'\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n  const isTabHotkey = isKeyHotkey(\"tab\");\n\n  const hasMark = type => {\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n const hasBlock = type => {\n    return value.blocks.some(node => node.type === type)\n  }\n\n  const isImage = (url) => {\n    return imageExtensions.includes(getExtension(url));\n  }\n\n  const getExtension = (url) => {\n      return new URL(url).pathname.split('.').pop;\n  }\n\n  const insertImage = (editor, src, target) => {\n    if(target){\n        editor.select(target)\n    }\n\n    editor.insertBlock({\n        type: 'image',\n        data: {src},\n    })\n  } \n\n\n  const renderMarkButton = (type, icon) => {\n    const isActive = hasMark(type);\n    return (\n      <button\n        active={isActive}\n        onPointerDown={(event) => onClickMark(event, type)}\n        className={isActive? `styles[\"active] styles[\"tooltip-icon-button\"]`: styles[\"tooltip-icon-button\"]}\n      >\n        <i className={icon} />\n      </button>\n    );\n  };\n\n  const renderImageButton = (icon) => {\n      return(\n        <button\n        className={styles[\"tooltip-icon-button\"]}\n        onPointerDown={onClickImage}\n      >\n        <i className={icon} />\n      </button>\n      )\n  }\n\n  const renderSaveButton = (icon) => {\n    return(\n      <button\n      className={styles[\"tooltip-icon-button\"]}\n      onPointerDown={props.onSave? props.onSave : () => console.log(JSON.stringify(value.toJSON()))}\n    >\n      <i className={icon} />\n    </button>\n    )\n}\n\n\n  const renderBlockButton = (type, icon) => {\n    let isActive = hasBlock(type);\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const { document, blocks } = value;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return (\n      <button\n      className={isActive? `styles[\"active] styles[\"tooltip-icon-button\"]`: styles[\"tooltip-icon-button\"]}\n        active={isActive}\n        onPointerDown={(event) => onClickBlock(event, type)}\n      >\n        <i className={icon}></i>\n      </button>\n    );\n  };\n\n  const renderBlock = (props, editor, next) => {\n    const { attributes, children, node } = props;\n\n    switch (node.type) {\n      case \"block-quote\":\n        return <blockquote {...attributes}>{children}</blockquote>;\n      case \"bulleted-list\":\n        return <ul {...attributes}>{children}</ul>;\n      case \"heading-one\":\n        return <h1 {...attributes}>{children}</h1>;\n      case \"heading-two\":\n        return <h2 {...attributes}>{children}</h2>;\n      case \"list-item\":\n        return <li {...attributes}>{children}</li>;\n      case \"numbered-list\":\n        return <ol {...attributes}>{children}</ol>;\n      case \"image\": {\n        const src = node.data.get('src')\n        return (\n          <img\n            {...attributes}\n            src={src}\n          />\n        )\n      }\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return <strong {...attributes}>{children}</strong>;\n      case \"code\":\n        return <code {...attributes}>{children}</code>;\n      case \"italic\":\n        return <em {...attributes}>{children}</em>;\n      case \"underlined\":\n        return <u {...attributes}>{children}</u>;\n      case \"tab\":\n        return <span {...attributes}>{\"        \"}{children}</span>\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else if (isTabHotkey(event)) {\n      mark = \"tab\";\n    }else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = event => {\n      event.preventDefault();\n      const src = window.prompt(\"enter the URL of the image:\");\n      if(!src) return\n      ref.current.command(insertImage, src)\n  }\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document;\n\n    // Handle everything but list buttons.\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor\n          .setBlocks(isActive ? DEFAULT_NODE : type)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some((block) => {\n        return !!document.getClosest(\n          block.key,\n          (parent) => parent.type === type\n        );\n      });\n\n      if (isList && isType) {\n        editor\n          .setBlocks(DEFAULT_NODE)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor\n          .unwrapBlock(\n            type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\"\n          )\n          .wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n   const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event)\n    if (!target && event.type === 'drop') return next()\n\n    const transfer = getEventTransfer(event)\n    const { type, text, files } = transfer\n\n    if (type === 'files') {\n      for (const file of files) {\n        const reader = new FileReader()\n        const [mime] = file.type.split('/')\n        if (mime !== 'image') continue\n\n        reader.addEventListener('load', () => {\n          editor.command(insertImage, reader.result, target)\n        })\n\n        reader.readAsDataURL(file)\n      }\n      return\n    }\n\n    if (type === 'text') {\n      if (!isUrl(text)) return next()\n      if (!isImage(text)) return next()\n      editor.command(insertImage, text, target)\n      return\n    }\n\n    next()\n  }\n\n\n  return (\n    <div className={styles[\"overarching\"]}>\n      <FormatToolbar>\n        {renderMarkButton(\"bold\", `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`)}\n        {renderMarkButton(\"italic\", `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`)}\n        {renderMarkButton(\"underlined\", `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`)}\n        {renderMarkButton(\"code\", `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`)}\n        {renderBlockButton(\"heading-one\", `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`)}\n        {renderBlockButton(\"heading-two\", `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`)}\n        {renderBlockButton(\"block-quote\", `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`)}\n        {renderBlockButton(\"numbered-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`)}\n        {renderBlockButton(\"bulleted-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`)}\n        {renderImageButton(`${styles[\"fas\"]} ${styles[\"fa-image\"]} fas fa-image`)}\n        {renderSaveButton(`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`)}\n \n      </FormatToolbar>\n      <Editor\n        ref={ref}\n        className={styles[\"Editor\"]}\n        value={value}\n        onChange={(opts) => setValue(opts.value)}\n        onKeyDown={onKeyDown}\n        renderMark={renderMark}\n        renderBlock={renderBlock}\n        onDrop={onDropOrPaste}\n        schema={schema}\n      />\n    </div>\n  );\n  };\n\n\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}