{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from 'image-extensions';\nimport isUrl from 'is-url';\nconst schema = {\n  document: {\n    last: {\n      type: 'paragraph'\n    },\n    normalize: (editor, {\n      code,\n      node,\n      child\n    }) => {\n      switch (code) {\n        case 'last_child_type_invalid':\n          {\n            const paragraph = Block.create('paragraph');\n            return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n          }\n      }\n    }\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    }\n  }\n};\n\nconst TextEditor = props => {\n  const ref = useRef();\n  const value = props.value;\n  const setValue = props.setValue;\n  const DEFAULT_NODE = 'paragraph';\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n  const isTabHotkey = isKeyHotkey(\"tab\");\n\n  const hasMark = type => {\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  const hasBlock = type => {\n    return value.blocks.some(node => node.type === type);\n  };\n\n  const isImage = url => {\n    return imageExtensions.includes(getExtension(url));\n  };\n\n  const getExtension = url => {\n    return new URL(url).pathname.split('.').pop;\n  };\n\n  const insertImage = (editor, src, caption, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    if (!caption) {\n      editor.insertBlock({\n        type: 'image',\n        data: {\n          src\n        }\n      });\n    } else {\n      editor.insertBlock({\n        type: 'figure',\n        data: {\n          src,\n          editor\n        }\n      });\n    }\n\n    const renderMarkButton = (type, icon) => {\n      const isActive = hasMark(type);\n      return /*#__PURE__*/React.createElement(\"button\", {\n        active: isActive,\n        onPointerDown: event => onClickMark(event, type),\n        className: isActive ? `styles[\"active] styles[\"tooltip-icon-button\"]` : styles[\"tooltip-icon-button\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    const renderImageButton = icon => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: styles[\"tooltip-icon-button\"],\n        onPointerDown: onClickImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    const renderSaveButton = icon => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: styles[\"tooltip-icon-button\"],\n        onPointerDown: props.onSave ? props.onSave : () => console.log(JSON.stringify(value.toJSON())),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    const renderBlockButton = (type, icon) => {\n      let isActive = hasBlock(type);\n\n      if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n        const {\n          document,\n          blocks\n        } = value;\n\n        if (blocks.size > 0) {\n          const parent = document.getParent(blocks.first().key);\n          isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: isActive ? `styles[\"active] styles[\"tooltip-icon-button\"]` : styles[\"tooltip-icon-button\"],\n        active: isActive,\n        onPointerDown: event => onClickBlock(event, type),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    const renderBlock = (props, editor, next) => {\n      const {\n        attributes,\n        children,\n        node\n      } = props;\n\n      switch (node.type) {\n        case \"block-quote\":\n          return /*#__PURE__*/React.createElement(\"blockquote\", Object.assign({}, attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 16\n            }\n          }), children);\n\n        case \"bulleted-list\":\n          return /*#__PURE__*/React.createElement(\"ul\", Object.assign({}, attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 16\n            }\n          }), children);\n\n        case \"heading-one\":\n          return /*#__PURE__*/React.createElement(\"h1\", Object.assign({}, attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 16\n            }\n          }), children);\n\n        case \"heading-two\":\n          return /*#__PURE__*/React.createElement(\"h2\", Object.assign({}, attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 16\n            }\n          }), children);\n\n        case \"list-item\":\n          return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 16\n            }\n          }), children);\n\n        case \"numbered-list\":\n          return /*#__PURE__*/React.createElement(\"ol\", Object.assign({}, attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 16\n            }\n          }), children);\n\n        case \"image\":\n          {\n            const src = node.data.get('src');\n            return /*#__PURE__*/React.createElement(\"img\", Object.assign({}, attributes, {\n              src: src,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 11\n              }\n            }));\n          }\n\n        case \"figure\":\n          {\n            const src = node.data.get('src');\n            const caption = node.data.get('caption');\n            return /*#__PURE__*/React.createElement(\"figure\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 11\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", Object.assign({}, attributes, {\n              src: src,\n              alt: caption,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 14\n              }\n            })), /*#__PURE__*/React.createElement(\"figcaption\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 11\n              }\n            }, caption));\n          }\n\n        default:\n          return next();\n      }\n    };\n\n    const renderMark = (props, editor, next) => {\n      const {\n        children,\n        mark,\n        attributes\n      } = props;\n\n      switch (mark.type) {\n        case \"bold\":\n          return /*#__PURE__*/React.createElement(\"strong\", Object.assign({}, attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 16\n            }\n          }), children);\n\n        case \"code\":\n          return /*#__PURE__*/React.createElement(\"code\", Object.assign({}, attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 16\n            }\n          }), children);\n\n        case \"italic\":\n          return /*#__PURE__*/React.createElement(\"em\", Object.assign({}, attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 16\n            }\n          }), children);\n\n        case \"underlined\":\n          return /*#__PURE__*/React.createElement(\"u\", Object.assign({}, attributes, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 16\n            }\n          }), children);\n\n        default:\n          return next();\n      }\n    };\n\n    const onKeyDown = (event, editor, next) => {\n      let mark;\n\n      if (isBoldHotkey(event)) {\n        mark = \"bold\";\n      } else if (isItalicHotkey(event)) {\n        mark = \"italic\";\n      } else if (isUnderlinedHotkey(event)) {\n        mark = \"underlined\";\n      } else if (isCodeHotkey(event)) {\n        mark = \"code\";\n      } else if (isTabHotkey(event)) {\n        event.preventDefault();\n        return next();\n      } else {\n        return next();\n      }\n\n      event.preventDefault();\n      editor.toggleMark(mark);\n    };\n\n    const onClickMark = (event, type) => {\n      event.preventDefault();\n      ref.current.toggleMark(type);\n    };\n\n    const onClickImage = event => {\n      event.preventDefault();\n      const src = window.prompt(\"enter the URL of the image:\");\n      const caption = window.prompt(\"enter a caption for the image\");\n      if (!src) return;\n      ref.current.command(insertImage, src, caption);\n    };\n\n    const onClickBlock = (event, type) => {\n      event.preventDefault();\n      const editor = ref.current;\n      const value = editor.value;\n      const document = value.document; // Handle everything but list buttons.\n\n      if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n        const isActive = hasBlock(type);\n        const isList = hasBlock(\"list-item\");\n\n        if (isList) {\n          editor.setBlocks(isActive ? DEFAULT_NODE : type).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n        } else {\n          editor.setBlocks(isActive ? DEFAULT_NODE : type);\n        }\n      } else {\n        // Handle the extra wrapping required for list buttons.\n        const isList = hasBlock(\"list-item\");\n        const isType = value.blocks.some(block => {\n          return !!document.getClosest(block.key, parent => parent.type === type);\n        });\n\n        if (isList && isType) {\n          editor.setBlocks(DEFAULT_NODE).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n        } else if (isList) {\n          editor.unwrapBlock(type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\").wrapBlock(type);\n        } else {\n          editor.setBlocks(\"list-item\").wrapBlock(type);\n        }\n      }\n    };\n\n    const onDropOrPaste = (event, editor, next) => {\n      const target = editor.findEventRange(event);\n      if (!target && event.type === 'drop') return next();\n      const transfer = getEventTransfer(event);\n      const {\n        type,\n        text,\n        files\n      } = transfer;\n\n      if (type === 'files') {\n        for (const file of files) {\n          const reader = new FileReader();\n          const [mime] = file.type.split('/');\n          if (mime !== 'image') continue;\n          reader.addEventListener('load', () => {\n            editor.command(insertImage, reader.result, target);\n          });\n          reader.readAsDataURL(file);\n        }\n\n        return;\n      }\n\n      if (type === 'text') {\n        if (!isUrl(text)) return next();\n        if (!isImage(text)) return next();\n        editor.command(insertImage, text, target);\n        return;\n      }\n\n      next();\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles[\"overarching\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormatToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }\n    }, renderMarkButton(\"bold\", `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`), renderMarkButton(\"italic\", `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`), renderMarkButton(\"underlined\", `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`), renderMarkButton(\"code\", `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`), renderBlockButton(\"heading-one\", `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`), renderBlockButton(\"heading-two\", `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`), renderBlockButton(\"block-quote\", `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`), renderBlockButton(\"numbered-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`), renderBlockButton(\"bulleted-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`), renderImageButton(`${styles[\"fas\"]} ${styles[\"fa-image\"]} fas fa-image`), renderSaveButton(`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`)), /*#__PURE__*/React.createElement(Editor, {\n      ref: ref,\n      className: styles[\"Editor\"],\n      value: value,\n      onChange: opts => setValue(opts.value),\n      onKeyDown: onKeyDown,\n      renderMark: renderMark,\n      renderBlock: renderBlock,\n      onDrop: onDropOrPaste,\n      schema: schema,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 7\n      }\n    }));\n  };\n};\n\nexport default TextEditor;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","useState","useRef","Editor","getEventTransfer","Block","styles","FormatToolbar","isKeyHotkey","imageExtensions","isUrl","schema","document","last","type","normalize","editor","code","node","child","paragraph","create","insertNodeByKey","key","nodes","size","blocks","image","isVoid","TextEditor","props","ref","value","setValue","DEFAULT_NODE","isBoldHotkey","isItalicHotkey","isUnderlinedHotkey","isCodeHotkey","isTabHotkey","hasMark","activeMarks","some","mark","hasBlock","isImage","url","includes","getExtension","URL","pathname","split","pop","insertImage","src","caption","target","select","insertBlock","data","renderMarkButton","icon","isActive","event","onClickMark","renderImageButton","onClickImage","renderSaveButton","onSave","console","log","JSON","stringify","toJSON","renderBlockButton","parent","getParent","first","onClickBlock","renderBlock","next","attributes","children","get","renderMark","onKeyDown","preventDefault","toggleMark","current","window","prompt","command","isList","setBlocks","unwrapBlock","isType","block","getClosest","wrapBlock","onDropOrPaste","findEventRange","transfer","text","files","file","reader","FileReader","mime","addEventListener","result","readAsDataURL","opts"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block} from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from 'image-extensions'\nimport isUrl from 'is-url'\n\n\nconst schema = {\n    document: {\n      last: { type: 'paragraph' },\n      normalize: (editor, { code, node, child }) => {\n        switch (code) {\n          case 'last_child_type_invalid': {\n            const paragraph = Block.create('paragraph')\n            return editor.insertNodeByKey(node.key, node.nodes.size, paragraph)\n          }\n        }\n      },\n    },\n    blocks: {\n      image: {\n        isVoid: true,\n      },\n    },\n  }\n  \nconst TextEditor = (props) => {\n\n  const ref = useRef();\n  const value = props.value;\n  const setValue = props.setValue;\n  const DEFAULT_NODE = 'paragraph'\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n  const isTabHotkey = isKeyHotkey(\"tab\");\n\n  const hasMark = type => {\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n const hasBlock = type => {\n    return value.blocks.some(node => node.type === type)\n  }\n\n  const isImage = (url) => {\n    return imageExtensions.includes(getExtension(url));\n  }\n\n  const getExtension = (url) => {\n      return new URL(url).pathname.split('.').pop;\n  }\n\n  const insertImage = (editor, src, caption, target) => {\n    if(target){\n        editor.select(target)\n    }\n    if(!caption){\n      editor.insertBlock({\n        type: 'image',\n        data: {src},\n    })}else {\n      editor.insertBlock({\n        type: 'figure',\n        data: {src, editor}\n    })\n  \n  } \n\n\n  const renderMarkButton = (type, icon) => {\n    const isActive = hasMark(type);\n    return (\n      <button\n        active={isActive}\n        onPointerDown={(event) => onClickMark(event, type)}\n        className={isActive? `styles[\"active] styles[\"tooltip-icon-button\"]`: styles[\"tooltip-icon-button\"]}\n      >\n        <i className={icon} />\n      </button>\n    );\n  };\n\n  const renderImageButton = (icon) => {\n      return(\n        <button\n        className={styles[\"tooltip-icon-button\"]}\n        onPointerDown={onClickImage}\n      >\n        <i className={icon} />\n      </button>\n      )\n  }\n\n  const renderSaveButton = (icon) => {\n    return(\n      <button\n      className={styles[\"tooltip-icon-button\"]}\n      onPointerDown={props.onSave? props.onSave : () => console.log(JSON.stringify(value.toJSON()))}\n    >\n      <i className={icon} />\n    </button>\n    )\n}\n\n\n  const renderBlockButton = (type, icon) => {\n    let isActive = hasBlock(type);\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const { document, blocks } = value;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return (\n      <button\n      className={isActive? `styles[\"active] styles[\"tooltip-icon-button\"]`: styles[\"tooltip-icon-button\"]}\n        active={isActive}\n        onPointerDown={(event) => onClickBlock(event, type)}\n      >\n        <i className={icon}></i>\n      </button>\n    );\n  };\n\n  const renderBlock = (props, editor, next) => {\n    const { attributes, children, node } = props;\n\n    switch (node.type) {\n      case \"block-quote\":\n        return <blockquote {...attributes}>{children}</blockquote>;\n      case \"bulleted-list\":\n        return <ul {...attributes}>{children}</ul>;\n      case \"heading-one\":\n        return <h1 {...attributes}>{children}</h1>;\n      case \"heading-two\":\n        return <h2 {...attributes}>{children}</h2>;\n      case \"list-item\":\n        return <li {...attributes}>{children}</li>;\n      case \"numbered-list\":\n        return <ol {...attributes}>{children}</ol>;\n      case \"image\": {\n        const src = node.data.get('src')\n        return (\n          <img\n            {...attributes}\n            src={src}\n          />\n        )\n      }\n      case \"figure\": {\n        const src = node.data.get('src')\n        const caption = node.data.get('caption')\n        return (\n          <figure>\n             <img\n            {...attributes}\n            src={src}\n            alt={caption}\n          />\n          <figcaption>{caption}</figcaption>\n          </figure>\n         \n        )\n      }\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return <strong {...attributes}>{children}</strong>;\n      case \"code\":\n        return <code {...attributes}>{children}</code>;\n      case \"italic\":\n        return <em {...attributes}>{children}</em>;\n      case \"underlined\":\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else if (isTabHotkey(event)) {\n      event.preventDefault();\n      return next()\n    }else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = event => {\n      event.preventDefault();\n      const src = window.prompt(\"enter the URL of the image:\");\n      const caption = window.prompt(\"enter a caption for the image\")\n      if(!src) return\n      ref.current.command(insertImage, src, caption)\n  }\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document;\n\n    // Handle everything but list buttons.\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor\n          .setBlocks(isActive ? DEFAULT_NODE : type)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some((block) => {\n        return !!document.getClosest(\n          block.key,\n          (parent) => parent.type === type\n        );\n      });\n\n      if (isList && isType) {\n        editor\n          .setBlocks(DEFAULT_NODE)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor\n          .unwrapBlock(\n            type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\"\n          )\n          .wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n   const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event)\n    if (!target && event.type === 'drop') return next()\n\n    const transfer = getEventTransfer(event)\n    const { type, text, files } = transfer\n\n    if (type === 'files') {\n      for (const file of files) {\n        const reader = new FileReader()\n        const [mime] = file.type.split('/')\n        if (mime !== 'image') continue\n\n        reader.addEventListener('load', () => {\n          editor.command(insertImage, reader.result, target)\n        })\n\n        reader.readAsDataURL(file)\n      }\n      return\n    }\n\n    if (type === 'text') {\n      if (!isUrl(text)) return next()\n      if (!isImage(text)) return next()\n      editor.command(insertImage, text, target)\n      return\n    }\n\n    next()\n  }\n\n\n  return (\n    <div className={styles[\"overarching\"]}>\n      <FormatToolbar>\n        {renderMarkButton(\"bold\", `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`)}\n        {renderMarkButton(\"italic\", `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`)}\n        {renderMarkButton(\"underlined\", `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`)}\n        {renderMarkButton(\"code\", `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`)}\n        {renderBlockButton(\"heading-one\", `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`)}\n        {renderBlockButton(\"heading-two\", `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`)}\n        {renderBlockButton(\"block-quote\", `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`)}\n        {renderBlockButton(\"numbered-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`)}\n        {renderBlockButton(\"bulleted-list\", `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`)}\n        {renderImageButton(`${styles[\"fas\"]} ${styles[\"fa-image\"]} fas fa-image`)}\n        {renderSaveButton(`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`)}\n \n      </FormatToolbar>\n      <Editor\n        ref={ref}\n        className={styles[\"Editor\"]}\n        value={value}\n        onChange={(opts) => setValue(opts.value)}\n        onKeyDown={onKeyDown}\n        renderMark={renderMark}\n        renderBlock={renderBlock}\n        onDrop={onDropOrPaste}\n        schema={schema}\n      />\n    </div>\n  );\n  };\n}\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}