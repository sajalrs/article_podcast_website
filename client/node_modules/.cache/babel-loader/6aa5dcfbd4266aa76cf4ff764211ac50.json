{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { createEditor, Transforms, Editor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport e from \"express\";\n\nconst TextEditor = () => {\n  const [value, setValue] = useState([{\n    type: \"paragraph\",\n    children: [{\n      text: \"A line of text in a paragraph.\"\n    }]\n  }]);\n  const editor = useMemo(() => withReact(createEditor()), []);\n\n  const DefaultElement = props => {\n    return /*#__PURE__*/React.createElement(\"p\", Object.assign({}, props.attributes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }\n    }), props.children);\n  };\n\n  const CodeElement = props => {\n    return /*#__PURE__*/React.createElement(\"pre\", Object.assign({}, props.attributes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    }, props.children));\n  };\n\n  const renderElement = useCallback(props => {\n    switch (props.element.type) {\n      case 'code':\n        return /*#__PURE__*/React.createElement(CodeElement, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 24\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(DefaultElement, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }\n        }));\n    }\n  }, [input]);\n  return /*#__PURE__*/React.createElement(Slate, {\n    editor: editor,\n    value: value,\n    onChange: newValue => setValue(newValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Editable, {\n    renderElement: renderElement,\n    onKeyDown: event => {\n      if (event.key === '`' && event.ctrlKey) {\n        preventDefault();\n        Transforms.setNodes(editor, {\n          type: 'code'\n        }, {\n          match: n => Editor.isBlock(editor, n)\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TextEditor;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","useState","useMemo","useEffect","createEditor","Transforms","Editor","Slate","Editable","withReact","e","TextEditor","value","setValue","type","children","text","editor","DefaultElement","props","attributes","CodeElement","renderElement","useCallback","element","input","newValue","event","key","ctrlKey","preventDefault","setNodes","match","n","isBlock"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,MAAnC,QAAiD,OAAjD;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,aAA3C;AACA,OAAOC,CAAP,MAAc,SAAd;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CACjC;AACEa,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD;AAFZ,GADiC,CAAD,CAAlC;AAMA,QAAMC,MAAM,GAAGf,OAAO,CAAC,MAAMO,SAAS,CAACL,YAAY,EAAb,CAAhB,EAAkC,EAAlC,CAAtB;;AACA,QAAMc,cAAc,GAAGC,KAAK,IAAI;AAC5B,wBAAO,2CAAOA,KAAK,CAACC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA0BD,KAAK,CAACJ,QAAhC,CAAP;AACH,GAFD;;AAIA,QAAMM,WAAW,GAAGF,KAAK,IAAI;AACzB,wBACI,6CAASA,KAAK,CAACC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,KAAK,CAACJ,QAAb,CADJ,CADJ;AAKH,GAND;;AAQA,QAAMO,aAAa,GAAEC,WAAW,CAC3BJ,KAAD,IAAW;AACT,YAAOA,KAAK,CAACK,OAAN,CAAcV,IAArB;AACI,WAAK,MAAL;AACI,4BAAO,oBAAC,WAAD,oBAAkBK,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;;AACJ;AACI,4BAAO,oBAAC,cAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAJR;AAMH,GAR6B,EAS5B,CAACM,KAAD,CAT4B,CAAhC;AAaA,sBACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAER,MADV;AAEE,IAAA,KAAK,EAAEL,KAFT;AAGE,IAAA,QAAQ,EAAGc,QAAD,IAAcb,QAAQ,CAACa,QAAD,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,QAAD;AACE,IAAA,aAAa,EAAEJ,aADjB;AAEE,IAAA,SAAS,EAAGK,KAAD,IAAW;AAClB,UAAGA,KAAK,CAACC,GAAN,KAAc,GAAd,IAAqBD,KAAK,CAACE,OAA9B,EAAsC;AAClCC,QAAAA,cAAc;AACdzB,QAAAA,UAAU,CAAC0B,QAAX,CACId,MADJ,EAEI;AAACH,UAAAA,IAAI,EAAE;AAAP,SAFJ,EAGI;AAACkB,UAAAA,KAAK,EAAEC,CAAC,IAAG3B,MAAM,CAAC4B,OAAP,CAAejB,MAAf,EAAuBgB,CAAvB;AAAZ,SAHJ;AAKH;AACJ,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAqBD,CAtDD;;AAwDA,eAAetB,UAAf","sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\nimport { createEditor, Transforms, Editor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport e from \"express\";\n\nconst TextEditor = () => {\n  const [value, setValue] = useState([\n    {\n      type: \"paragraph\",\n      children: [{ text: \"A line of text in a paragraph.\" }],\n    },\n  ]);\n  const editor = useMemo(() => withReact(createEditor()), []);\n  const DefaultElement = props => {\n      return <p {...props.attributes}>{props.children}</p>\n  }\n\n  const CodeElement = props => {\n      return( \n          <pre {...props.attributes}>\n              <code>{props.children}</code>\n          </pre>\n      )\n  }\n\n  const renderElement= useCallback(\n      (props) => {\n        switch(props.element.type){\n            case 'code':\n                return <CodeElement {... props}/>\n            default:\n                return <DefaultElement {...props}/>\n        }      \n    },\n      [input],\n  )\n\n\n  return (\n    <Slate\n      editor={editor}\n      value={value}\n      onChange={(newValue) => setValue(newValue)}\n    >\n      <Editable\n        renderElement={renderElement}\n        onKeyDown={(event) => {\n            if(event.key === '`' && event.ctrlKey){\n                preventDefault();\n                Transforms.setNodes(\n                    editor,\n                    {type: 'code'},\n                    {match: n=> Editor.isBlock(editor, n)}\n                )\n            }\n        }}\n      />\n    </Slate>\n  );\n};\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}