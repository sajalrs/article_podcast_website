{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from \"image-extensions\";\nimport isUrl from \"is-url\";\nconst schema = {\n  document: {\n    last: {\n      type: \"paragraph\"\n    },\n    normalize: (editor, {\n      code,\n      node,\n      child\n    }) => {\n      switch (code) {\n        case \"last_child_type_invalid\":\n          {\n            const paragraph = Block.create(\"paragraph\");\n            return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n          }\n      }\n    }\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    }\n  }\n};\n\nconst TextEditor = props => {\n  const ref = useRef();\n  const value = props.value;\n  const setValue = props.setValue;\n  const DEFAULT_NODE = \"paragraph\";\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n  const isTabHotkey = isKeyHotkey(\"tab\");\n\n  const hasMark = type => {\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  const hasBlock = type => {\n    return value.blocks.some(node => node.type === type);\n  };\n\n  const isImage = url => {\n    return imageExtensions.includes(getExtension(url));\n  };\n\n  const getExtension = url => {\n    return new URL(url).pathname.split(\".\").pop;\n  };\n\n  const insertImage = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"image\",\n      data: {\n        src\n      }\n    });\n  };\n\n  const insertFigure = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"figure\",\n      data: {\n        src\n      }\n    });\n  };\n\n  const renderBlock = (props, editor, next) => {\n    const {\n      attributes,\n      children,\n      node\n    } = props;\n\n    switch (node.type) {\n      case \"paragraph\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"block-quote\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"blockquote\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"bulleted-list\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"heading-one\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: styles[\"heading\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"heading-two\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"list-item\":\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 16\n          }\n        }, children);\n\n      case \"numbered-list\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles[\"main-pane-item\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"ol\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }\n        }, children));\n\n      case \"image\":\n        {\n          const src = node.data.get(\"src\");\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: styles[\"main-pane-item\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"figure\", {\n            className: styles[\"image-container\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: src,\n            loading: \"lazy\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }\n          })));\n        }\n\n      case \"figure\":\n        {\n          const src = node.data.get(\"src\");\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: styles[\"main-pane-item\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"figure\", {\n            className: styles[\"image-container\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: src,\n            loading: \"lazy\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(\"figcaption\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }\n          }, children))));\n        }\n\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const {\n      children,\n      mark,\n      attributes\n    } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return /*#__PURE__*/React.createElement(\"strong\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"code\":\n        return /*#__PURE__*/React.createElement(\"code\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"italic\":\n        return /*#__PURE__*/React.createElement(\"em\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 16\n          }\n        }), children);\n\n      case \"underlined\":\n        return /*#__PURE__*/React.createElement(\"u\", Object.assign({}, attributes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 16\n          }\n        }), children);\n\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else if (isTabHotkey(event)) {\n      event.preventDefault();\n      return next();\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = event => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\"); // const caption = window.prompt(\"enter a caption for the image\")\n\n    if (!src) return;\n    ref.current.command(insertImage, src);\n  };\n\n  const onClickFigure = event => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\");\n    if (!src) return;\n    ref.current.command(insertFigure, src);\n  };\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document; // Handle everything but list buttons.\n\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some(block => {\n        return !!document.getClosest(block.key, parent => parent.type === type);\n      });\n\n      if (isList && isType) {\n        editor.setBlocks(DEFAULT_NODE).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor.unwrapBlock(type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\").wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n  const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event);\n    if (!target && event.type === \"drop\") return next();\n    const transfer = getEventTransfer(event);\n    const {\n      type,\n      text,\n      files\n    } = transfer;\n\n    if (type === \"files\") {\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split(\"/\");\n        if (mime !== \"image\") continue;\n        reader.addEventListener(\"load\", () => {\n          editor.command(insertImage, reader.result, target);\n        });\n        reader.readAsDataURL(file);\n      }\n\n      return;\n    }\n\n    if (type === \"text\") {\n      if (!isUrl(text)) return next();\n      if (!isImage(text)) return next();\n      editor.command(insertImage, text, target);\n      return;\n    }\n\n    next();\n  };\n\n  const renderOnceToolbar = /*#__PURE__*/React.createElement(FormatToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"overarching\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, props.toolbarFixed ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: \"66px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, renderOnceToolbar) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, renderOnceToolbar), /*#__PURE__*/React.createElement(Editor, {\n    ref: ref,\n    className: styles[\"Editor\"],\n    value: value,\n    onChange: opts => setValue(opts.value),\n    onKeyDown: onKeyDown,\n    renderMark: renderMark,\n    renderBlock: renderBlock,\n    onDrop: onDropOrPaste,\n    schema: schema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst BLOCK_TAGS = {\n  p: \"paragraph\",\n  blockquote: \"block-quote\",\n  ul: `bulleted-list`,\n  h1: `heading-one`,\n  h2: `heading-two`,\n  li: `list-item`,\n  ol: `numbered-list`,\n  img: `image`\n}; // Add a dictionary of mark tags.\n\nconst MARK_TAGS = {\n  em: \"italic\",\n  strong: \"bold\",\n  u: \"underlined\",\n  code: `code`\n};\nexport const rules = [{\n  deserialize(el, next) {\n    const type = BLOCK_TAGS[el.tagName.toLowerCase()];\n\n    if (type) {\n      return {\n        object: \"block\",\n        type: type,\n        data: {\n          className: el.getAttribute(\"class\")\n        },\n        nodes: next(el.childNodes)\n      };\n    }\n  },\n\n  serialize(obj, children) {\n    if (obj.object == \"block\") {\n      switch (obj.type) {\n        case \"paragraph\":\n          return /*#__PURE__*/React.createElement(\"di\", {\n            className: styles[\"main-pane\"],\n            v: true,\n            className: styles[\"main-pane-item\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }\n          }, children));\n\n        case \"block-quote\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: `${styles[\"main-pane-item\"]}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"blockquote\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }\n          }, children));\n\n        case \"bulleted-list\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: styles[\"main-pane-item\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"ul\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }\n          }, children));\n\n        case \"heading-one\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: styles[\"main-pane-item\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            className: styles[\"heading\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }\n          }, children));\n\n        case \"heading-two\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: styles[\"main-pane-item\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }\n          }, children));\n\n        case \"list-item\":\n          return /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 20\n            }\n          }, children);\n\n        case \"numbered-list\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: styles[\"main-pane-item\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"ol\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }\n          }, children));\n\n        case \"image\":\n          {\n            const src = obj.data[\"src\"];\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: `${styles[\"main-pane-item\"]}`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"figure\", {\n              className: styles[\"image-container\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: src,\n              loading: \"lazy\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }\n            })));\n          }\n\n        case \"figure\":\n          {\n            const src = obj.data[\"src\"];\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: `${styles[\"main-pane-item\"]}`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"figure\", {\n              className: styles[\"image-container\"],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: src,\n              loading: \"lazy\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }\n            }), /*#__PURE__*/React.createElement(\"figcaption\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"strong\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }\n            }, children))));\n          }\n      }\n    }\n  }\n\n}, // Add a new rule that handles marks...\n{\n  deserialize(el, next) {\n    const type = MARK_TAGS[el.tagName.toLowerCase()];\n\n    if (type) {\n      return {\n        object: \"mark\",\n        type: type,\n        nodes: next(el.childNodes)\n      };\n    }\n  },\n\n  serialize(obj, children) {\n    if (obj.object == \"mark\") {\n      switch (obj.type) {\n        case \"bold\":\n          return /*#__PURE__*/React.createElement(\"strong\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 20\n            }\n          }, children);\n\n        case \"italic\":\n          return /*#__PURE__*/React.createElement(\"em\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 20\n            }\n          }, children);\n\n        case \"code\":\n          return /*#__PURE__*/React.createElement(\"code\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 20\n            }\n          }, children);\n\n        case \"underlined\":\n          return /*#__PURE__*/React.createElement(\"u\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 20\n            }\n          }, children);\n      }\n    }\n  }\n\n}];\nexport default TextEditor;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/components/TextEditor/TextEditor.js"],"names":["React","useState","useRef","Editor","getEventTransfer","Block","styles","FormatToolbar","isKeyHotkey","imageExtensions","isUrl","schema","document","last","type","normalize","editor","code","node","child","paragraph","create","insertNodeByKey","key","nodes","size","blocks","image","isVoid","TextEditor","props","ref","value","setValue","DEFAULT_NODE","isBoldHotkey","isItalicHotkey","isUnderlinedHotkey","isCodeHotkey","isTabHotkey","hasMark","activeMarks","some","mark","hasBlock","isImage","url","includes","getExtension","URL","pathname","split","pop","insertImage","src","target","select","insertBlock","data","insertFigure","renderBlock","next","attributes","children","get","renderMark","onKeyDown","event","preventDefault","toggleMark","onClickMark","current","onClickImage","window","prompt","command","onClickFigure","onClickBlock","isActive","isList","setBlocks","unwrapBlock","isType","block","getClosest","parent","wrapBlock","onDropOrPaste","findEventRange","transfer","text","files","file","reader","FileReader","mime","addEventListener","result","readAsDataURL","renderOnceToolbar","toolbarFixed","position","top","opts","BLOCK_TAGS","p","blockquote","ul","h1","h2","li","ol","img","MARK_TAGS","em","strong","u","rules","deserialize","el","tagName","toLowerCase","object","className","getAttribute","childNodes","serialize","obj"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from \"image-extensions\";\nimport isUrl from \"is-url\";\n\nconst schema = {\n  document: {\n    last: { type: \"paragraph\" },\n    normalize: (editor, { code, node, child }) => {\n      switch (code) {\n        case \"last_child_type_invalid\": {\n          const paragraph = Block.create(\"paragraph\");\n          return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n        }\n      }\n    },\n  },\n  blocks: {\n    image: {\n      isVoid: true,\n    },\n  },\n};\n\nconst TextEditor = (props) => {\n  const ref = useRef();\n  const value = props.value;\n  const setValue = props.setValue;\n  const DEFAULT_NODE = \"paragraph\";\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n  const isTabHotkey = isKeyHotkey(\"tab\");\n\n  const hasMark = (type) => {\n    return value.activeMarks.some((mark) => mark.type === type);\n  };\n\n  const hasBlock = (type) => {\n    return value.blocks.some((node) => node.type === type);\n  };\n\n  const isImage = (url) => {\n    return imageExtensions.includes(getExtension(url));\n  };\n\n  const getExtension = (url) => {\n    return new URL(url).pathname.split(\".\").pop;\n  };\n\n  const insertImage = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"image\",\n      data: { src },\n    });\n  };\n\n  const insertFigure = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"figure\",\n      data: { src },\n    });\n  };\n\n\n  const renderBlock = (props, editor, next) => {\n    const { attributes, children, node } = props;\n\n    switch (node.type) {\n      case \"paragraph\":\n        return (\n          <div className={styles[\"main-pane-item\"]}>\n            <p>{children}</p>\n          </div>\n        );\n      case \"block-quote\":\n        return (\n          <div className={styles[\"main-pane-item\"]}>\n            <blockquote>{children}</blockquote>\n          </div>\n        );\n      case \"bulleted-list\":\n        return (\n          <div className={styles[\"main-pane-item\"]}>\n            <ul>{children}</ul>\n          </div>\n        );\n      case \"heading-one\":\n        return (\n          <div className={styles[\"main-pane-item\"]}>\n            <h1 className={styles[\"heading\"]}>{children}</h1>\n          </div>\n        );\n      case \"heading-two\":\n        return (\n          <div className={styles[\"main-pane-item\"]}>\n            <h2>{children}</h2>\n          </div>\n        );\n      case \"list-item\":\n        return <li>{children}</li>;\n      case \"numbered-list\":\n        return (\n          <div className={styles[\"main-pane-item\"]}>\n            <ol>{children}</ol>\n          </div>\n        );\n      case \"image\": {\n        const src = node.data.get(\"src\");\n        return (\n          <div className={styles[\"main-pane-item\"]}>\n            <figure className={styles[\"image-container\"]}>\n              <img src={src} loading=\"lazy\" />\n            </figure>\n          </div>\n        );\n      }\n      case \"figure\": {\n        const src = node.data.get(\"src\");\n        return (\n          <div className={styles[\"main-pane-item\"]}>\n            <figure className={styles[\"image-container\"]}>\n              <img src={src} loading=\"lazy\" />\n              <figcaption>\n                <strong>{children}</strong>\n              </figcaption>\n            </figure>\n          </div>\n        );\n      }\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return <strong {...attributes}>{children}</strong>;\n      case \"code\":\n        return <code {...attributes}>{children}</code>;\n      case \"italic\":\n        return <em {...attributes}>{children}</em>;\n      case \"underlined\":\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else if (isTabHotkey(event)) {\n      event.preventDefault();\n      return next();\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = (event) => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\");\n    // const caption = window.prompt(\"enter a caption for the image\")\n    if (!src) return;\n    ref.current.command(insertImage, src);\n  };\n\n  const onClickFigure = (event) => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\");\n    if (!src) return;\n    ref.current.command(insertFigure, src);\n  };\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document;\n\n    // Handle everything but list buttons.\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor\n          .setBlocks(isActive ? DEFAULT_NODE : type)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some((block) => {\n        return !!document.getClosest(\n          block.key,\n          (parent) => parent.type === type\n        );\n      });\n\n      if (isList && isType) {\n        editor\n          .setBlocks(DEFAULT_NODE)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor\n          .unwrapBlock(\n            type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\"\n          )\n          .wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n  const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event);\n    if (!target && event.type === \"drop\") return next();\n\n    const transfer = getEventTransfer(event);\n    const { type, text, files } = transfer;\n\n    if (type === \"files\") {\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split(\"/\");\n        if (mime !== \"image\") continue;\n\n        reader.addEventListener(\"load\", () => {\n          editor.command(insertImage, reader.result, target);\n        });\n\n        reader.readAsDataURL(file);\n      }\n      return;\n    }\n\n    if (type === \"text\") {\n      if (!isUrl(text)) return next();\n      if (!isImage(text)) return next();\n      editor.command(insertImage, text, target);\n      return;\n    }\n\n    next();\n  };\n\n  const renderOnceToolbar = (\n    <FormatToolbar>\n     \n    </FormatToolbar>\n  );\n\n  return (\n    <div className={styles[\"overarching\"]}>\n      {props.toolbarFixed ? (\n        <div style={{ position: \"fixed\", top: \"66px\" }}>\n          {/* <div style={{ position: \"fixed\", top: \"103.5px\", right: \"0px\"}}> */}\n          {renderOnceToolbar}\n        </div>\n      ) : (\n        <div>{renderOnceToolbar}</div>\n      )}\n      <Editor\n        ref={ref}\n        className={styles[\"Editor\"]}\n        value={value}\n        onChange={(opts) => setValue(opts.value)}\n        onKeyDown={onKeyDown}\n        renderMark={renderMark}\n        renderBlock={renderBlock}\n        onDrop={onDropOrPaste}\n        schema={schema}\n      />\n    </div>\n  );\n};\n\nconst BLOCK_TAGS = {\n  p: \"paragraph\",\n  blockquote: \"block-quote\",\n  ul: `bulleted-list`,\n  h1: `heading-one`,\n  h2: `heading-two`,\n  li: `list-item`,\n  ol: `numbered-list`,\n  img: `image`,\n};\n\n// Add a dictionary of mark tags.\nconst MARK_TAGS = {\n  em: \"italic\",\n  strong: \"bold\",\n  u: \"underlined\",\n  code: `code`,\n};\n\nexport const rules = [\n  {\n    deserialize(el, next) {\n      const type = BLOCK_TAGS[el.tagName.toLowerCase()];\n      if (type) {\n        return {\n          object: \"block\",\n          type: type,\n          data: {\n            className: el.getAttribute(\"class\"),\n          },\n          nodes: next(el.childNodes),\n        };\n      }\n    },\n    serialize(obj, children) {\n      if (obj.object == \"block\") {\n        switch (obj.type) {\n          case \"paragraph\":\n            return (\n              <di\n                className={styles[\"main-pane\"]}\n                v\n                className={styles[\"main-pane-item\"]}\n              >\n                <p>{children}</p>\n              </di>\n            );\n          case \"block-quote\":\n            return (\n              <div className={`${styles[\"main-pane-item\"]}`}>\n                <blockquote>{children}</blockquote>\n              </div>\n            );\n          case \"bulleted-list\":\n            return (\n              <div className={styles[\"main-pane-item\"]}>\n                <ul>{children}</ul>\n              </div>\n            );\n          case \"heading-one\":\n            return (\n              <div className={styles[\"main-pane-item\"]}>\n                <h1 className={styles[\"heading\"]}>{children}</h1>\n              </div>\n            );\n          case \"heading-two\":\n            return (\n              <div className={styles[\"main-pane-item\"]}>\n                <h2>{children}</h2>\n              </div>\n            );\n          case \"list-item\":\n            return <li>{children}</li>;\n          case \"numbered-list\":\n            return (\n              <div className={styles[\"main-pane-item\"]}>\n                <ol>{children}</ol>\n              </div>\n            );\n          case \"image\": {\n            const src = obj.data[\"src\"];\n            return (\n              <div className={`${styles[\"main-pane-item\"]}`}>\n                <figure className={styles[\"image-container\"]}>\n                  <img src={src} loading=\"lazy\" />\n                </figure>\n              </div>\n            );\n          }\n          case \"figure\": {\n            const src = obj.data[\"src\"];\n            return (\n              <div className={`${styles[\"main-pane-item\"]}`}>\n                <figure className={styles[\"image-container\"]}>\n                  <img src={src} loading=\"lazy\" />\n                  <figcaption>\n                    <strong>{children}</strong>\n                  </figcaption>\n                </figure>\n              </div>\n            );\n          }\n        }\n      }\n    },\n  },\n  // Add a new rule that handles marks...\n  {\n    deserialize(el, next) {\n      const type = MARK_TAGS[el.tagName.toLowerCase()];\n      if (type) {\n        return {\n          object: \"mark\",\n          type: type,\n          nodes: next(el.childNodes),\n        };\n      }\n    },\n    serialize(obj, children) {\n      if (obj.object == \"mark\") {\n        switch (obj.type) {\n          case \"bold\":\n            return <strong>{children}</strong>;\n          case \"italic\":\n            return <em>{children}</em>;\n          case \"code\":\n            return <code>{children}</code>;\n          case \"underlined\":\n            return <u>{children}</u>;\n        }\n      }\n    },\n  },\n];\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}