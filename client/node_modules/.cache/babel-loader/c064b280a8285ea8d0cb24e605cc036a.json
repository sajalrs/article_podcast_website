{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/ReactProgramming/article_podcast_website/client/src/App.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Home from \"./pages/Home/Home.js\";\nimport ArticlePage from \"./pages/Articles/ArticlePage.js\";\nimport \"./App.css\";\nimport Card from \"./components/Cards/Card.js\";\nimport VideoPlayer from \"./components/VideoPlayer/VideoPlayer.js\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header.js\";\n\nconst App = () => {\n  const [fitLarge, setFitLarge] = useState(true);\n  const [sideBarClicked, setSideBarClicked] = useState(false);\n  const [video, setVideo] = useState({\n    src: \"https://www.youtube.com/embed/jbG9LJs_Npg?rel=0&autoplay=1\",\n    isPlaying: false\n  });\n  useEffect(() => {\n    const updateWindowType = () => {\n      setFitLarge(window.innerWidth >= 940);\n    };\n\n    window.addEventListener(\"resize\", updateWindowType);\n    return () => {\n      window.removeEventListener(\"resize\", updateWindowType); // clearAllBodyScrollLocks();\n    };\n  });\n  const scrollLockRef = useRef();\n\n  const playVideo = videoSrc => {\n    setVideo({ ...video,\n      src: videoSrc,\n      isPlaying: true\n    });\n    disableBodyScroll(scrollLockRef.current);\n  };\n\n  const closeVideo = () => {\n    setVideo({ ...video,\n      isPlaying: false\n    });\n    enableBodyScroll(scrollLockRef.current);\n  };\n\n  const getImageLink = id => {\n    return `https://img.youtube.com/vi/${id}/hqdefault.jpg`;\n  };\n\n  const getEmbedPlayerLink = (id, start) => {\n    return `https://www.youtube.com/embed/${id}?rel=0&start=${start ? start : 0}&autoplay=1`;\n  };\n\n  const getLinkFunction = linkType => {\n    switch (linkType) {\n      case Card.LinkType[\"video-youtube\"]:\n        return playVideo;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"overarching\">\n    //   <div ref={scrollLockRef}></div>\n    //   {video.isPlaying && (\n    //     <VideoPlayer closeVideo={closeVideo} src={video.src} />\n    //   )}\n    //   <div className=\"App\">\n    //     <BrowserRouter>\n    //       <Switch>\n    //         <Route\n    //           path=\"/\"\n    //           exact\n    //           render={() => {\n    //             return (\n    //               <Home\n    //                 fitLarge={fitLarge}\n    //                 playVideo={playVideo}\n    //                 getImageLink={getImageLink}\n    //                 getEmbedPlayerLink={getEmbedPlayerLink}\n    //                 getLinkFunction={getLinkFunction}\n    //                 sideBarClicked={sideBarClicked}\n    //                 setSideBarClicked={setSideBarClicked}\n    //               />\n    //             );\n    //           }}\n    //         />\n    //         <Route\n    //           path=\"/articles\"\n    //           exact\n    //           render={() => {\n    //             return (\n    //               <ArticlePage\n    //                 fitLarge={fitLarge}\n    //                 playVideo={playVideo}\n    //                 getImageLink={getImageLink}\n    //                 getEmbedPlayerLink={getEmbedPlayerLink}\n    //                 getLinkFunction={getLinkFunction}\n    //                 sideBarClicked={sideBarClicked}\n    //                 setSideBarClicked={setSideBarClicked}\n    //               />\n    //             );\n    //           }}\n    //         />\n    //         <Route\n    //           path=\"/\"\n    //           render={() => {\n    //             return <div>404</div>;\n    //           }}\n    //         />\n    //       </Switch>\n    //     </BrowserRouter>\n    //   </div>\n    // </div>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }))\n  );\n};\n\nexport default App;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/client/src/App.js"],"names":["React","useState","useEffect","useRef","Home","ArticlePage","Card","VideoPlayer","disableBodyScroll","enableBodyScroll","BrowserRouter","Switch","Route","Header","App","fitLarge","setFitLarge","sideBarClicked","setSideBarClicked","video","setVideo","src","isPlaying","updateWindowType","window","innerWidth","addEventListener","removeEventListener","scrollLockRef","playVideo","videoSrc","current","closeVideo","getImageLink","id","getEmbedPlayerLink","start","getLinkFunction","linkType","LinkType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Home from \"./pages/Home/Home.js\";\nimport ArticlePage from \"./pages/Articles/ArticlePage.js\";\nimport \"./App.css\";\nimport Card from \"./components/Cards/Card.js\";\nimport VideoPlayer from \"./components/VideoPlayer/VideoPlayer.js\";\n\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header.js\";\n\nconst App = () => {\n  const [fitLarge, setFitLarge] = useState(true);\n  const [sideBarClicked, setSideBarClicked] = useState(false);\n  const [video, setVideo] = useState({\n    src: \"https://www.youtube.com/embed/jbG9LJs_Npg?rel=0&autoplay=1\",\n    isPlaying: false,\n  });\n\n  useEffect(() => {\n    const updateWindowType = () => {\n      setFitLarge(window.innerWidth >= 940);\n    };\n    window.addEventListener(\"resize\", updateWindowType);\n    return () => {\n      window.removeEventListener(\"resize\", updateWindowType);\n      // clearAllBodyScrollLocks();\n    };\n  });\n  const scrollLockRef = useRef();\n\n  const playVideo = (videoSrc) => {\n    setVideo({ ...video, src: videoSrc, isPlaying: true });\n    disableBodyScroll(scrollLockRef.current);\n  };\n  const closeVideo = () => {\n    setVideo({ ...video, isPlaying: false });\n    enableBodyScroll(scrollLockRef.current);\n  };\n\n  const getImageLink = (id) => {\n    return `https://img.youtube.com/vi/${id}/hqdefault.jpg`;\n  };\n\n  const getEmbedPlayerLink = (id, start) => {\n    return `https://www.youtube.com/embed/${id}?rel=0&start=${\n      start ? start : 0\n    }&autoplay=1`;\n  };\n\n  const getLinkFunction = (linkType) => {\n    switch (linkType) {\n      case Card.LinkType[\"video-youtube\"]:\n        return playVideo;\n      default:\n        break;\n    }\n  };\n\n  return (\n    // <div className=\"overarching\">\n    //   <div ref={scrollLockRef}></div>\n    //   {video.isPlaying && (\n    //     <VideoPlayer closeVideo={closeVideo} src={video.src} />\n    //   )}\n    //   <div className=\"App\">\n    //     <BrowserRouter>\n    //       <Switch>\n    //         <Route\n    //           path=\"/\"\n    //           exact\n    //           render={() => {\n    //             return (\n    //               <Home\n    //                 fitLarge={fitLarge}\n    //                 playVideo={playVideo}\n    //                 getImageLink={getImageLink}\n    //                 getEmbedPlayerLink={getEmbedPlayerLink}\n    //                 getLinkFunction={getLinkFunction}\n    //                 sideBarClicked={sideBarClicked}\n    //                 setSideBarClicked={setSideBarClicked}\n    //               />\n    //             );\n    //           }}\n    //         />\n    //         <Route\n    //           path=\"/articles\"\n    //           exact\n    //           render={() => {\n    //             return (\n    //               <ArticlePage\n    //                 fitLarge={fitLarge}\n    //                 playVideo={playVideo}\n    //                 getImageLink={getImageLink}\n    //                 getEmbedPlayerLink={getEmbedPlayerLink}\n    //                 getLinkFunction={getLinkFunction}\n    //                 sideBarClicked={sideBarClicked}\n    //                 setSideBarClicked={setSideBarClicked}\n    //               />\n    //             );\n    //           }}\n    //         />\n    //         <Route\n    //           path=\"/\"\n    //           render={() => {\n    //             return <div>404</div>;\n    //           }}\n    //         />\n    //       </Switch>\n    //     </BrowserRouter>\n    //   </div>\n    // </div>\n\n    <div>\n      <Header/>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}