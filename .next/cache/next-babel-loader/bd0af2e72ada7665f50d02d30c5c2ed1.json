{"ast":null,"code":"import { ApolloServer } from \"apollo-server-micro\";\n\nconst mongoose = require(\"mongoose\");\n\nrequire(\"dotenv/config\");\n\nimport { typeDefs } from \"../graphql/typeDefs\";\nimport { resolvers } from \"../graphql/resolvers\";\n\nconst connectDb = async () => {\n  if (!mongoose.connections[0].readyState) {\n    await mongoose.connect(process.env.MONGO_URL, {\n      useNewUrlParser: true,\n      useFindAndModify: true,\n      useCreateIndex: true\n    });\n  }\n};\n\nconnectDb();\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers\n});\nexport default apolloServer.createHandler({\n  path: \"/api/graphql\"\n});","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/pages/api/graphql/index.js"],"names":["ApolloServer","mongoose","require","typeDefs","resolvers","connectDb","connections","readyState","connect","process","env","MONGO_URL","useNewUrlParser","useFindAndModify","useCreateIndex","apolloServer","createHandler","path"],"mappings":"AAAA,SAASA,YAAT,QAA6B,qBAA7B;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,eAAD,CAAP;;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,MAAMC,SAAS,GAAG,YAAY;AAC5B,MAAI,CAACJ,QAAQ,CAACK,WAAT,CAAqB,CAArB,EAAwBC,UAA7B,EAAwC;AACtC,UAAMN,QAAQ,CAACO,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AAC5CC,MAAAA,eAAe,EAAE,IAD2B;AAE5CC,MAAAA,gBAAgB,EAAE,IAF0B;AAG5CC,MAAAA,cAAc,EAAE;AAH4B,KAAxC,CAAN;AAKD;AACF,CARD;;AAUAT,SAAS;AAET,MAAMU,YAAY,GAAG,IAAIf,YAAJ,CAAiB;AACpCG,EAAAA,QADoC;AAEpCC,EAAAA;AAFoC,CAAjB,CAArB;AAIA,eAAeW,YAAY,CAACC,aAAb,CAA2B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA3B,CAAf","sourcesContent":["import { ApolloServer } from \"apollo-server-micro\";\nconst mongoose = require(\"mongoose\");\nrequire(\"dotenv/config\");\nimport { typeDefs } from \"../graphql/typeDefs\";\nimport { resolvers } from \"../graphql/resolvers\";\n\nconst connectDb = async () => {\n  if (!mongoose.connections[0].readyState){\n    await mongoose.connect(process.env.MONGO_URL, {\n      useNewUrlParser: true,\n      useFindAndModify: true,\n      useCreateIndex: true,\n    });\n  } \n};\n\nconnectDb();\n\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers,\n});\nexport default apolloServer.createHandler({ path: \"/api/graphql\" });\n"]},"metadata":{},"sourceType":"module"}