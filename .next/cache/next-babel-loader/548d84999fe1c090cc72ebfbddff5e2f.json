{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport MediumCard from \"../components/Cards/MediumCard/MediumCard.js\";\nimport Page from \"../components/Page/Page\";\nimport styles from \"../components/Page/Page.module.css\";\nimport { AudioPlayerContext } from \"../contexts/reducers/audioPlayerContext\";\nimport { gql, NetworkStatus, useQuery } from \"@apollo/client\";\nimport { ALL_PODCASTS_QUERY } from \"../components/AudioPlayer/AudioPlayer\";\nimport { Card } from \"../components/Cards/Card\";\n\nvar Podcasts = function Podcasts(props) {\n  _s();\n\n  var _useQuery = useQuery(ALL_PODCASTS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore,\n      data = _useQuery.data,\n      networkStatus = _useQuery.networkStatus;\n\n  var loadingMorePodcasts = networkStatus === NetworkStatus.fetchMore;\n  var podcasts;\n\n  if (loading && !loadingMorePodcasts) {\n    podcasts = [{\n      title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n      by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n      link: \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n      date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n      image: \"https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/8497059/8497059-1599895849523-cbb8b2f53d641.jpg\",\n      description: \"In this episode, Ishan, Ojash and Susajjan review the first leg ties of the Champions league Round of 16 first leg.\\n\\n\"\n    }];\n  } else {\n    podcasts = data.podcasts;\n  }\n\n  var contents = podcasts.map(function (item, index) {\n    return __jsx(\"div\", {\n      className: \"\".concat(styles[\"main-pane-item\"])\n    }, __jsx(MediumCard, {\n      image: item.image,\n      date: item.date,\n      title: item.title,\n      text: item.description,\n      contentType: Card.ContentType[\"audio-internal\"],\n      index: index\n    }));\n  });\n  return __jsx(Page, {\n    sidebarFixTopOffset: 0,\n    mainPane: contents\n  });\n};\n\n_s(Podcasts, \"q5lwdGLmGOzEWVXhdk6jt+g3Avo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Podcasts;\nexport default Podcasts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Podcasts\");","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/pages/podcasts.js"],"names":["React","useContext","MediumCard","Page","styles","AudioPlayerContext","gql","NetworkStatus","useQuery","ALL_PODCASTS_QUERY","Card","Podcasts","props","notifyOnNetworkStatusChange","loading","error","fetchMore","data","networkStatus","loadingMorePodcasts","podcasts","title","by","link","date","image","description","contents","map","item","index","ContentType"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,8CAAvB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,SAASC,kBAAT,QAAmC,yCAAnC;AACA,SAASC,GAAT,EAAcC,aAAd,EAA6BC,QAA7B,QAA6C,gBAA7C;AACA,SAASC,kBAAT,QAAmC,uCAAnC;AACA,SAASC,IAAT,QAAqB,0BAArB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAAA,kBAOtBJ,QAAQ,CAACC,kBAAD,EAAqB;AAAEI,IAAAA,2BAA2B,EAAE;AAA/B,GAArB,CAPc;AAAA,MAExBC,OAFwB,aAExBA,OAFwB;AAAA,MAGxBC,KAHwB,aAGxBA,KAHwB;AAAA,MAIxBC,SAJwB,aAIxBA,SAJwB;AAAA,MAKxBC,IALwB,aAKxBA,IALwB;AAAA,MAMxBC,aANwB,aAMxBA,aANwB;;AAS1B,MAAMC,mBAAmB,GAAGD,aAAa,KAAKX,aAAa,CAACS,SAA5D;AAEA,MAAII,QAAJ;;AACA,MAAIN,OAAO,IAAI,CAACK,mBAAhB,EAAqC;AACnCC,IAAAA,QAAQ,GAAG,CACT;AACEC,MAAAA,KAAK,EAAE,+DADT;AAEEC,MAAAA,EAAE,EAAE,kDAFN;AAGEC,MAAAA,IAAI,EACF,8KAJJ;AAKEC,MAAAA,IAAI,EAAE,+BALR;AAMEC,MAAAA,KAAK,EACH,0HAPJ;AAQEC,MAAAA,WAAW,EACT;AATJ,KADS,CAAX;AAaD,GAdD,MAcO;AACLN,IAAAA,QAAQ,GAAGH,IAAI,CAACG,QAAhB;AACD;;AAED,MAAMO,QAAQ,GAAGP,QAAQ,CAACQ,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP;AAAA,WAC5B;AAAK,MAAA,SAAS,YAAK1B,MAAM,CAAC,gBAAD,CAAX;AAAd,OACE,MAAC,UAAD;AACE,MAAA,KAAK,EAAEyB,IAAI,CAACJ,KADd;AAEE,MAAA,IAAI,EAAEI,IAAI,CAACL,IAFb;AAGE,MAAA,KAAK,EAAEK,IAAI,CAACR,KAHd;AAIE,MAAA,IAAI,EAAEQ,IAAI,CAACH,WAJb;AAKE,MAAA,WAAW,EAAEhB,IAAI,CAACqB,WAAL,CAAiB,gBAAjB,CALf;AAME,MAAA,KAAK,EAAED;AANT,MADF,CAD4B;AAAA,GAAb,CAAjB;AAYA,SAAO,MAAC,IAAD;AAAM,IAAA,mBAAmB,EAAE,CAA3B;AAA8B,IAAA,QAAQ,EAAEH;AAAxC,IAAP;AACD,CA3CD;;GAAMhB,Q;UAOAH,Q;;;KAPAG,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport MediumCard from \"../components/Cards/MediumCard/MediumCard.js\";\nimport Page from \"../components/Page/Page\";\nimport styles from \"../components/Page/Page.module.css\";\nimport { AudioPlayerContext } from \"../contexts/reducers/audioPlayerContext\";\nimport { gql, NetworkStatus, useQuery } from \"@apollo/client\";\nimport { ALL_PODCASTS_QUERY } from \"../components/AudioPlayer/AudioPlayer\";\nimport { Card } from \"../components/Cards/Card\";\nconst Podcasts = (props) => {\n  const {\n    loading,\n    error,\n    fetchMore,\n    data,\n    networkStatus,\n  } = useQuery(ALL_PODCASTS_QUERY, { notifyOnNetworkStatusChange: true });\n\n  const loadingMorePodcasts = networkStatus === NetworkStatus.fetchMore;\n\n  let podcasts;\n  if (loading && !loadingMorePodcasts) {\n    podcasts = [\n      {\n        title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n        by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n        link:\n          \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n        date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n        image:\n          \"https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/8497059/8497059-1599895849523-cbb8b2f53d641.jpg\",\n        description:\n          \"In this episode, Ishan, Ojash and Susajjan review the first leg ties of the Champions league Round of 16 first leg.\\n\\n\",\n      },\n    ];\n  } else {\n    podcasts = data.podcasts;\n  }\n\n  const contents = podcasts.map((item, index) => (\n    <div className={`${styles[\"main-pane-item\"]}`}>\n      <MediumCard\n        image={item.image}\n        date={item.date}\n        title={item.title}\n        text={item.description}\n        contentType={Card.ContentType[\"audio-internal\"]}\n        index={index}\n      />\n    </div>\n  ));\n  return <Page sidebarFixTopOffset={0} mainPane={contents} />;\n};\n\nexport default Podcasts;\n"]},"metadata":{},"sourceType":"module"}