{"ast":null,"code":"import { ApolloServer } from \"apollo-server-micro\";\n\nconst mongoose = require(\"mongoose\");\n\nrequire(\"dotenv/config\");\n\nimport typeDefs from \"../graphql/typeDefs\";\nimport resolvers from \"../graphql/resolvers\"; // const connectDb = () => {\n//    mongoose.connect(process.env.MONGO_URL, {\n//       useNewUrlParser: true,\n//       useFindAndModify: true,\n//       useCreateIndex: true,\n//     });\n//   };\n// connectDb();\n\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers\n});\nexport default apolloServer.createHandler({\n  path: \"/api/graphql\"\n});","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/pages/api/graphql/index.js"],"names":["ApolloServer","mongoose","require","typeDefs","resolvers","config","api","bodyParser","apolloServer","createHandler","path"],"mappings":"AAAA,SAASA,YAAT,QAA6B,qBAA7B;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,eAAD,CAAP;;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,SAAP,MAAuB,sBAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,MAAMC,YAAY,GAAG,IAAIR,YAAJ,CAAiB;AACpCG,EAAAA,QADoC;AAEpCC,EAAAA;AAFoC,CAAjB,CAArB;AAKA,eAAeI,YAAY,CAACC,aAAb,CAA2B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA3B,CAAf","sourcesContent":["import { ApolloServer } from \"apollo-server-micro\";\nconst mongoose = require(\"mongoose\");\nrequire(\"dotenv/config\");\nimport typeDefs from \"../graphql/typeDefs\";\nimport resolvers  from \"../graphql/resolvers\";\n\n// const connectDb = () => {\n//    mongoose.connect(process.env.MONGO_URL, {\n//       useNewUrlParser: true,\n//       useFindAndModify: true,\n//       useCreateIndex: true,\n//     });\n//   };\n\n\n// connectDb();\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n}\n\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers,\n});\n\nexport default apolloServer.createHandler({ path: \"/api/graphql\" });\n"]},"metadata":{},"sourceType":"module"}