{"ast":null,"code":"import { ApolloServer } from \"apollo-server-micro\";\n\nrequire(\"dotenv/config\");\n\nimport { typeDefs } from \"./typeDefs\";\nimport { resolvers } from \"./resolvers\";\nimport connectDb from \"../middlewares/dbMiddleware.js\";\nimport { verify } from \"../verification/verifyTokenGraphql\";\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers,\n  context: async ({\n    req,\n    res\n  }) => ({\n    req,\n    res\n  })\n});\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default connectDb(verify(apolloServer.createHandler({\n  path: \"/api/graphql\"\n})));","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/pages/api/graphql/index.js"],"names":["ApolloServer","require","typeDefs","resolvers","connectDb","verify","apolloServer","context","req","res","config","api","bodyParser","createHandler","path"],"mappings":"AAAA,SAASA,YAAT,QAA6B,qBAA7B;;AACAC,OAAO,CAAC,eAAD,CAAP;;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAAQC,MAAR,QAAqB,oCAArB;AACA,MAAMC,YAAY,GAAG,IAAIN,YAAJ,CAAiB;AACpCE,EAAAA,QADoC;AAEpCC,EAAAA,SAFoC;AAGpCI,EAAAA,OAAO,EAAE,OAAO;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAP,MAAyB;AAAED,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAzB;AAH2B,CAAjB,CAArB;AAMA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,eAAeR,SAAS,CAACC,MAAM,CAACC,YAAY,CAACO,aAAb,CAA2B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA3B,CAAD,CAAP,CAAxB","sourcesContent":["import { ApolloServer } from \"apollo-server-micro\";\nrequire(\"dotenv/config\");\nimport { typeDefs } from \"./typeDefs\";\nimport { resolvers } from \"./resolvers\";\nimport connectDb from \"../middlewares/dbMiddleware.js\";\nimport {verify} from \"../verification/verifyTokenGraphql\"\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers,\n  context: async ({ req, res }) => ({ req, res }),\n});\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n};\n\nexport default connectDb(verify(apolloServer.createHandler({ path: \"/api/graphql\" })));\n"]},"metadata":{},"sourceType":"module"}