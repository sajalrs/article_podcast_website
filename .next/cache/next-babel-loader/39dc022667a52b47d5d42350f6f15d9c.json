{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from \"image-extensions\";\nimport isUrl from \"is-url\";\nvar schema = {\n  document: {\n    last: {\n      type: \"paragraph\"\n    },\n    normalize: function normalize(editor, _ref) {\n      var code = _ref.code,\n          node = _ref.node,\n          child = _ref.child;\n\n      switch (code) {\n        case \"last_child_type_invalid\":\n          {\n            var paragraph = Block.create(\"paragraph\");\n            return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n          }\n      }\n    }\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    }\n  }\n};\n\nvar TextEditor = function TextEditor(props) {\n  _s();\n\n  var ref = useRef();\n  var value = props.value;\n  var setValue = props.setValue;\n  var DEFAULT_NODE = \"paragraph\";\n  var isBoldHotkey = isKeyHotkey(\"mod+b\");\n  var isItalicHotkey = isKeyHotkey(\"mod+i\");\n  var isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  var isCodeHotkey = isKeyHotkey(\"mod+`\");\n  var isTabHotkey = isKeyHotkey(\"tab\");\n  var bodyStyles = props.styles;\n\n  var hasMark = function hasMark(type) {\n    return value.activeMarks.some(function (mark) {\n      return mark.type === type;\n    });\n  };\n\n  var hasBlock = function hasBlock(type) {\n    return value.blocks.some(function (node) {\n      return node.type === type;\n    });\n  };\n\n  var isImage = function isImage(url) {\n    return imageExtensions.includes(getExtension(url));\n  };\n\n  var getExtension = function getExtension(url) {\n    return new URL(url).pathname.split(\".\").pop;\n  };\n\n  var insertImage = function insertImage(editor, src, target) {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"image\",\n      data: {\n        src: src\n      }\n    });\n  };\n\n  var insertFigure = function insertFigure(editor, src, target) {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"figure\",\n      data: {\n        src: src\n      }\n    });\n  };\n\n  var renderMarkButton = function renderMarkButton(type, icon) {\n    var isActive = hasMark(type);\n    return __jsx(\"div\", {\n      onPointerDown: function onPointerDown(event) {\n        return onClickMark(event, type);\n      },\n      className: isActive ? \"\".concat(styles[\"active\"], \" \").concat(styles[\"tooltip-icon-button\"]) : styles[\"tooltip-icon-button\"]\n    }, __jsx(\"i\", {\n      className: icon\n    }));\n  };\n\n  var renderImageButton = function renderImageButton(icon) {\n    return __jsx(\"div\", {\n      className: styles[\"tooltip-icon-button\"],\n      onPointerDown: onClickImage\n    }, __jsx(\"i\", {\n      className: icon\n    }));\n  };\n\n  var renderSaveButton = function renderSaveButton(icon) {\n    return __jsx(\"div\", {\n      className: styles[\"tooltip-icon-button\"],\n      onPointerDown: props.onSave ? props.onSave : function () {\n        return console.log(JSON.stringify(value.toJSON()));\n      }\n    }, __jsx(\"i\", {\n      className: icon\n    }));\n  };\n\n  var renderFigureButton = function renderFigureButton(icon) {\n    var isActive = hasBlock(\"figure\");\n    return __jsx(\"div\", {\n      className: isActive ? \"\".concat(styles[\"active\"], \" \").concat(styles[\"tooltip-icon-button\"]) : styles[\"tooltip-icon-button\"],\n      onPointerDown: onClickFigure\n    }, __jsx(\"i\", {\n      className: icon\n    }));\n  };\n\n  var renderBlockButton = function renderBlockButton(type, icon) {\n    var isActive = hasBlock(type);\n\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      var document = value.document,\n          blocks = value.blocks;\n\n      if (blocks.size > 0) {\n        var parent = document.getParent(blocks.first().key);\n        isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return __jsx(\"div\", {\n      className: isActive ? \"\".concat(styles[\"active\"], \" \").concat(styles[\"tooltip-icon-button\"]) : styles[\"tooltip-icon-button\"],\n      onPointerDown: function onPointerDown(event) {\n        return onClickBlock(event, type);\n      }\n    }, __jsx(\"i\", {\n      className: icon\n    }));\n  };\n\n  var renderBlock = function renderBlock(props, editor, next) {\n    var attributes = props.attributes,\n        children = props.children,\n        node = props.node;\n\n    switch (node.type) {\n      case \"paragraph\":\n        return __jsx(\"div\", {\n          className: bodyStyles[\"main-pane-item\"]\n        }, __jsx(\"p\", null, children));\n\n      case \"block-quote\":\n        return __jsx(\"div\", {\n          className: bodyStyles[\"main-pane-item\"]\n        }, __jsx(\"blockquote\", null, children));\n\n      case \"bulleted-list\":\n        return __jsx(\"div\", {\n          className: bodyStyles[\"main-pane-item\"]\n        }, __jsx(\"ul\", null, children));\n\n      case \"heading-one\":\n        return __jsx(\"div\", {\n          className: bodyStyles[\"main-pane-item\"]\n        }, __jsx(\"h1\", {\n          className: bodyStyles[\"heading\"]\n        }, children));\n\n      case \"heading-two\":\n        return __jsx(\"div\", {\n          className: bodyStyles[\"main-pane-item\"]\n        }, __jsx(\"h2\", null, children));\n\n      case \"list-item\":\n        return __jsx(\"li\", null, children);\n\n      case \"numbered-list\":\n        return __jsx(\"div\", {\n          className: bodyStyles[\"main-pane-item\"]\n        }, __jsx(\"ol\", null, children));\n\n      case \"image\":\n        {\n          var src = node.data.get(\"src\");\n          return __jsx(\"div\", {\n            className: bodyStyles[\"main-pane-item\"]\n          }, __jsx(\"figure\", {\n            className: bodyStyles[\"image-container\"]\n          }, __jsx(\"img\", {\n            src: src,\n            loading: \"lazy\"\n          })));\n        }\n\n      case \"figure\":\n        {\n          var _src = node.data.get(\"src\");\n\n          return __jsx(\"div\", {\n            className: bodyStyles[\"main-pane-item\"]\n          }, __jsx(\"figure\", {\n            className: bodyStyles[\"image-container\"]\n          }, __jsx(\"img\", {\n            src: _src,\n            loading: \"lazy\"\n          }), __jsx(\"figcaption\", null, __jsx(\"strong\", null, children))));\n        }\n\n      default:\n        return next();\n    }\n  };\n\n  var renderMark = function renderMark(props, editor, next) {\n    var children = props.children,\n        mark = props.mark,\n        attributes = props.attributes;\n\n    switch (mark.type) {\n      case \"bold\":\n        return __jsx(\"strong\", attributes, children);\n\n      case \"code\":\n        return __jsx(\"code\", attributes, children);\n\n      case \"italic\":\n        return __jsx(\"em\", attributes, children);\n\n      case \"underlined\":\n        return __jsx(\"u\", attributes, children);\n\n      default:\n        return next();\n    }\n  };\n\n  var onKeyDown = function onKeyDown(event, editor, next) {\n    var mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else if (isTabHotkey(event)) {\n      event.preventDefault();\n      return next();\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  var onClickMark = function onClickMark(event, type) {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  var onClickImage = function onClickImage(event) {\n    event.preventDefault();\n    var src = window.prompt(\"enter the URL of the image:\"); // const caption = window.prompt(\"enter a caption for the image\")\n\n    if (!src) return;\n    ref.current.command(insertImage, src);\n  };\n\n  var onClickFigure = function onClickFigure(event) {\n    event.preventDefault();\n    var src = window.prompt(\"enter the URL of the image:\");\n    if (!src) return;\n    ref.current.command(insertFigure, src);\n  };\n\n  var onClickBlock = function onClickBlock(event, type) {\n    event.preventDefault();\n    var editor = ref.current;\n    var value = editor.value;\n    var document = value.document; // Handle everything but list buttons.\n\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      var isActive = hasBlock(type);\n      var isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      var _isList = hasBlock(\"list-item\");\n\n      var isType = value.blocks.some(function (block) {\n        return !!document.getClosest(block.key, function (parent) {\n          return parent.type === type;\n        });\n      });\n\n      if (_isList && isType) {\n        editor.setBlocks(DEFAULT_NODE).unwrapBlock(\"bulleted-list\").unwrapBlock(\"numbered-list\");\n      } else if (_isList) {\n        editor.unwrapBlock(type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\").wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n  var onDropOrPaste = function onDropOrPaste(event, editor, next) {\n    var target = editor.findEventRange(event);\n    if (!target && event.type === \"drop\") return next();\n    var transfer = getEventTransfer(event);\n    var type = transfer.type,\n        text = transfer.text,\n        files = transfer.files;\n\n    if (type === \"files\") {\n      var _iterator = _createForOfIteratorHelper(files),\n          _step;\n\n      try {\n        var _loop = function _loop() {\n          var file = _step.value;\n          var reader = new FileReader();\n\n          var _file$type$split = file.type.split(\"/\"),\n              _file$type$split2 = _slicedToArray(_file$type$split, 1),\n              mime = _file$type$split2[0];\n\n          if (mime !== \"image\") return \"continue\";\n          reader.addEventListener(\"load\", function () {\n            editor.command(insertImage, reader.result, target);\n          });\n          reader.readAsDataURL(file);\n        };\n\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _ret = _loop();\n\n          if (_ret === \"continue\") continue;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return;\n    }\n\n    if (type === \"text\") {\n      if (!isUrl(text)) return next();\n      if (!isImage(text)) return next();\n      editor.command(insertImage, text, target);\n      return;\n    }\n\n    next();\n  };\n\n  var renderOnceToolbar = __jsx(FormatToolbar, null, renderMarkButton(\"bold\", \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-bold\"], \" fas fa-bold\")), renderMarkButton(\"italic\", \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-italic\"], \" fas fa-italic\")), renderMarkButton(\"underlined\", \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-underline\"], \" fas fa-underline\")), renderMarkButton(\"code\", \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-code\"], \" fas fa-code\")), renderBlockButton(\"heading-one\", \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-h1\"], \" fas fa-heading\")), renderBlockButton(\"heading-two\", \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-h2\"], \" fas fa-heading\")), renderBlockButton(\"block-quote\", \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-quote-right\"], \" fas fa-quote-right\")), renderBlockButton(\"numbered-list\", \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-list-ol\"], \" fas fa-list-ol\")), renderBlockButton(\"bulleted-list\", \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-list-ul\"], \" fas fa-list-ul\")), renderImageButton(\"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-image\"], \" fas fa-image\")), renderFigureButton(\"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-images\"], \" fas fa-images\")), renderSaveButton(\"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-save\"], \" fas fa-save\")));\n\n  return __jsx(\"div\", {\n    className: styles[\"overarching\"]\n  }, props.toolbarFixed ? __jsx(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: \"66px\",\n      backgroundColor: \"#fff\",\n      width: \"100%\"\n    }\n  }, renderOnceToolbar) : __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    }\n  }, renderOnceToolbar), __jsx(Editor, {\n    ref: ref,\n    className: styles[\"Editor\"],\n    value: value,\n    onChange: function onChange(opts) {\n      setValue(opts.value);\n    },\n    onKeyDown: onKeyDown,\n    renderMark: renderMark,\n    renderBlock: renderBlock,\n    onDrop: onDropOrPaste,\n    schema: schema\n  }));\n};\n\n_s(TextEditor, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c = TextEditor;\nexport var getRules = function getRules(cssStyles) {\n  var BLOCK_TAGS = {\n    p: \"paragraph\",\n    blockquote: \"block-quote\",\n    ul: \"bulleted-list\",\n    h1: \"heading-one\",\n    h2: \"heading-two\",\n    li: \"list-item\",\n    ol: \"numbered-list\",\n    img: \"image\"\n  }; // Add a dictionary of mark tags.\n\n  var MARK_TAGS = {\n    em: \"italic\",\n    strong: \"bold\",\n    u: \"underlined\",\n    code: \"code\"\n  };\n  var rules = [{\n    deserialize: function deserialize(el, next) {\n      var type = BLOCK_TAGS[el.tagName.toLowerCase()];\n\n      if (type) {\n        return {\n          object: \"block\",\n          type: type,\n          data: {\n            className: el.getAttribute(\"class\")\n          },\n          nodes: next(el.childNodes)\n        };\n      }\n    },\n    serialize: function serialize(obj, children) {\n      if (obj.object == \"block\") {\n        switch (obj.type) {\n          case \"paragraph\":\n            return __jsx(\"di\", _defineProperty({\n              className: cssStyles[\"main-pane\"],\n              v: true\n            }, \"className\", cssStyles[\"main-pane-item\"]), __jsx(\"p\", null, children));\n\n          case \"block-quote\":\n            return __jsx(\"div\", {\n              className: \"\".concat(cssStyles[\"main-pane-item\"])\n            }, __jsx(\"blockquote\", null, children));\n\n          case \"bulleted-list\":\n            return __jsx(\"div\", {\n              className: cssStyles[\"main-pane-item\"]\n            }, __jsx(\"ul\", null, children));\n\n          case \"heading-one\":\n            return __jsx(\"div\", {\n              className: cssStyles[\"main-pane-item\"]\n            }, __jsx(\"h1\", {\n              className: cssStyles[\"heading\"]\n            }, children));\n\n          case \"heading-two\":\n            return __jsx(\"div\", {\n              className: cssStyles[\"main-pane-item\"]\n            }, __jsx(\"h2\", null, children));\n\n          case \"list-item\":\n            return __jsx(\"li\", null, children);\n\n          case \"numbered-list\":\n            return __jsx(\"div\", {\n              className: cssStyles[\"main-pane-item\"]\n            }, __jsx(\"ol\", null, children));\n\n          case \"image\":\n            {\n              var src = obj.data[\"src\"];\n              return __jsx(\"div\", {\n                className: \"\".concat(cssStyles[\"main-pane-item\"])\n              }, __jsx(\"figure\", {\n                className: cssStyles[\"image-container\"]\n              }, __jsx(\"img\", {\n                src: src,\n                loading: \"lazy\"\n              })));\n            }\n\n          case \"figure\":\n            {\n              var _src2 = obj.data[\"src\"];\n              return __jsx(\"div\", {\n                className: \"\".concat(cssStyles[\"main-pane-item\"])\n              }, __jsx(\"figure\", {\n                className: cssStyles[\"image-container\"]\n              }, __jsx(\"img\", {\n                src: _src2,\n                loading: \"lazy\"\n              }), __jsx(\"figcaption\", null, __jsx(\"strong\", null, children))));\n            }\n        }\n      }\n    }\n  }, // Add a new rule that handles marks...\n  {\n    deserialize: function deserialize(el, next) {\n      var type = MARK_TAGS[el.tagName.toLowerCase()];\n\n      if (type) {\n        return {\n          object: \"mark\",\n          type: type,\n          nodes: next(el.childNodes)\n        };\n      }\n    },\n    serialize: function serialize(obj, children) {\n      if (obj.object == \"mark\") {\n        switch (obj.type) {\n          case \"bold\":\n            return __jsx(\"strong\", null, children);\n\n          case \"italic\":\n            return __jsx(\"em\", null, children);\n\n          case \"code\":\n            return __jsx(\"code\", null, children);\n\n          case \"underlined\":\n            return __jsx(\"u\", null, children);\n        }\n      }\n    }\n  }];\n  return rules;\n};\nexport default TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/components/TextEditor/TextEditor.js"],"names":["React","useState","useRef","Editor","getEventTransfer","Block","styles","FormatToolbar","isKeyHotkey","imageExtensions","isUrl","schema","document","last","type","normalize","editor","code","node","child","paragraph","create","insertNodeByKey","key","nodes","size","blocks","image","isVoid","TextEditor","props","ref","value","setValue","DEFAULT_NODE","isBoldHotkey","isItalicHotkey","isUnderlinedHotkey","isCodeHotkey","isTabHotkey","bodyStyles","hasMark","activeMarks","some","mark","hasBlock","isImage","url","includes","getExtension","URL","pathname","split","pop","insertImage","src","target","select","insertBlock","data","insertFigure","renderMarkButton","icon","isActive","event","onClickMark","renderImageButton","onClickImage","renderSaveButton","onSave","console","log","JSON","stringify","toJSON","renderFigureButton","onClickFigure","renderBlockButton","parent","getParent","first","onClickBlock","renderBlock","next","attributes","children","get","renderMark","onKeyDown","preventDefault","toggleMark","current","window","prompt","command","isList","setBlocks","unwrapBlock","isType","block","getClosest","wrapBlock","onDropOrPaste","findEventRange","transfer","text","files","file","reader","FileReader","mime","addEventListener","result","readAsDataURL","renderOnceToolbar","toolbarFixed","position","top","backgroundColor","width","opts","getRules","cssStyles","BLOCK_TAGS","p","blockquote","ul","h1","h2","li","ol","img","MARK_TAGS","em","strong","u","rules","deserialize","el","tagName","toLowerCase","object","className","getAttribute","childNodes","serialize","obj"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,QAAlB;AAIA,IAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADE;AAERC,IAAAA,SAAS,EAAE,mBAACC,MAAD,QAAmC;AAAA,UAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,UAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,UAAZC,KAAY,QAAZA,KAAY;;AAC5C,cAAQF,IAAR;AACE,aAAK,yBAAL;AAAgC;AAC9B,gBAAMG,SAAS,GAAGf,KAAK,CAACgB,MAAN,CAAa,WAAb,CAAlB;AACA,mBAAOL,MAAM,CAACM,eAAP,CAAuBJ,IAAI,CAACK,GAA5B,EAAiCL,IAAI,CAACM,KAAL,CAAWC,IAA5C,EAAkDL,SAAlD,CAAP;AACD;AAJH;AAMD;AATO,GADG;AAYbM,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AADD;AAZK,CAAf;;AAoBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAC5B,MAAMC,GAAG,GAAG7B,MAAM,EAAlB;AACA,MAAM8B,KAAK,GAAGF,KAAK,CAACE,KAApB;AACA,MAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAvB;AACA,MAAMC,YAAY,GAAG,WAArB;AACA,MAAMC,YAAY,GAAG3B,WAAW,CAAC,OAAD,CAAhC;AACA,MAAM4B,cAAc,GAAG5B,WAAW,CAAC,OAAD,CAAlC;AACA,MAAM6B,kBAAkB,GAAG7B,WAAW,CAAC,OAAD,CAAtC;AACA,MAAM8B,YAAY,GAAG9B,WAAW,CAAC,OAAD,CAAhC;AACA,MAAM+B,WAAW,GAAG/B,WAAW,CAAC,KAAD,CAA/B;AACA,MAAMgC,UAAU,GAAGV,KAAK,CAACxB,MAAzB;;AAEA,MAAMmC,OAAO,GAAG,SAAVA,OAAU,CAAC3B,IAAD,EAAU;AACxB,WAAOkB,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAAC9B,IAAL,KAAcA,IAAxB;AAAA,KAAvB,CAAP;AACD,GAFD;;AAIA,MAAM+B,QAAQ,GAAG,SAAXA,QAAW,CAAC/B,IAAD,EAAU;AACzB,WAAOkB,KAAK,CAACN,MAAN,CAAaiB,IAAb,CAAkB,UAACzB,IAAD;AAAA,aAAUA,IAAI,CAACJ,IAAL,KAAcA,IAAxB;AAAA,KAAlB,CAAP;AACD,GAFD;;AAIA,MAAMgC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AACvB,WAAOtC,eAAe,CAACuC,QAAhB,CAAyBC,YAAY,CAACF,GAAD,CAArC,CAAP;AACD,GAFD;;AAIA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACF,GAAD,EAAS;AAC5B,WAAO,IAAIG,GAAJ,CAAQH,GAAR,EAAaI,QAAb,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiCC,GAAxC;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACtC,MAAD,EAASuC,GAAT,EAAcC,MAAd,EAAyB;AAC3C,QAAIA,MAAJ,EAAY;AACVxC,MAAAA,MAAM,CAACyC,MAAP,CAAcD,MAAd;AACD;;AAEDxC,IAAAA,MAAM,CAAC0C,WAAP,CAAmB;AACjB5C,MAAAA,IAAI,EAAE,OADW;AAEjB6C,MAAAA,IAAI,EAAE;AAAEJ,QAAAA,GAAG,EAAHA;AAAF;AAFW,KAAnB;AAID,GATD;;AAWA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAAC5C,MAAD,EAASuC,GAAT,EAAcC,MAAd,EAAyB;AAC5C,QAAIA,MAAJ,EAAY;AACVxC,MAAAA,MAAM,CAACyC,MAAP,CAAcD,MAAd;AACD;;AAEDxC,IAAAA,MAAM,CAAC0C,WAAP,CAAmB;AACjB5C,MAAAA,IAAI,EAAE,QADW;AAEjB6C,MAAAA,IAAI,EAAE;AAAEJ,QAAAA,GAAG,EAAHA;AAAF;AAFW,KAAnB;AAID,GATD;;AAWA,MAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC/C,IAAD,EAAOgD,IAAP,EAAgB;AACvC,QAAMC,QAAQ,GAAGtB,OAAO,CAAC3B,IAAD,CAAxB;AACA,WACE;AACE,MAAA,aAAa,EAAE,uBAACkD,KAAD;AAAA,eAAWC,WAAW,CAACD,KAAD,EAAQlD,IAAR,CAAtB;AAAA,OADjB;AAEE,MAAA,SAAS,EACPiD,QAAQ,aACDzD,MAAM,CAAC,QAAD,CADL,cACmBA,MAAM,CAAC,qBAAD,CADzB,IAEJA,MAAM,CAAC,qBAAD;AALd,OAQE;AAAG,MAAA,SAAS,EAAEwD;AAAd,MARF,CADF;AAYD,GAdD;;AAgBA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,IAAD,EAAU;AAClC,WACE;AACE,MAAA,SAAS,EAAExD,MAAM,CAAC,qBAAD,CADnB;AAEE,MAAA,aAAa,EAAE6D;AAFjB,OAIE;AAAG,MAAA,SAAS,EAAEL;AAAd,MAJF,CADF;AAQD,GATD;;AAWA,MAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACN,IAAD,EAAU;AACjC,WACE;AACE,MAAA,SAAS,EAAExD,MAAM,CAAC,qBAAD,CADnB;AAEE,MAAA,aAAa,EACXwB,KAAK,CAACuC,MAAN,GACIvC,KAAK,CAACuC,MADV,GAEI;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAezC,KAAK,CAAC0C,MAAN,EAAf,CAAZ,CAAN;AAAA;AALR,OAQE;AAAG,MAAA,SAAS,EAAEZ;AAAd,MARF,CADF;AAYD,GAbD;;AAeA,MAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAACb,IAAD,EAAU;AACnC,QAAIC,QAAQ,GAAGlB,QAAQ,CAAC,QAAD,CAAvB;AACA,WACE;AACA,MAAA,SAAS,EACPkB,QAAQ,aACDzD,MAAM,CAAC,QAAD,CADL,cACmBA,MAAM,CAAC,qBAAD,CADzB,IAEJA,MAAM,CAAC,qBAAD,CAJZ;AAME,MAAA,aAAa,EAAEsE;AANjB,OAQE;AAAG,MAAA,SAAS,EAAEd;AAAd,MARF,CADF;AAYD,GAdD;;AAgBA,MAAMe,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC/D,IAAD,EAAOgD,IAAP,EAAgB;AACxC,QAAIC,QAAQ,GAAGlB,QAAQ,CAAC/B,IAAD,CAAvB;;AACA,QAAI,CAAC,eAAD,EAAkB,eAAlB,EAAmCkC,QAAnC,CAA4ClC,IAA5C,CAAJ,EAAuD;AAAA,UAC7CF,QAD6C,GACxBoB,KADwB,CAC7CpB,QAD6C;AAAA,UACnCc,MADmC,GACxBM,KADwB,CACnCN,MADmC;;AAGrD,UAAIA,MAAM,CAACD,IAAP,GAAc,CAAlB,EAAqB;AACnB,YAAMqD,MAAM,GAAGlE,QAAQ,CAACmE,SAAT,CAAmBrD,MAAM,CAACsD,KAAP,GAAezD,GAAlC,CAAf;AACAwC,QAAAA,QAAQ,GAAGlB,QAAQ,CAAC,WAAD,CAAR,IAAyBiC,MAAzB,IAAmCA,MAAM,CAAChE,IAAP,KAAgBA,IAA9D;AACD;AACF;;AAED,WACE;AACE,MAAA,SAAS,EACPiD,QAAQ,aACFzD,MAAM,CAAC,QAAD,CADJ,cACkBA,MAAM,CAAC,qBAAD,CADxB,IAEJA,MAAM,CAAC,qBAAD,CAJd;AAME,MAAA,aAAa,EAAE,uBAAC0D,KAAD;AAAA,eAAWiB,YAAY,CAACjB,KAAD,EAAQlD,IAAR,CAAvB;AAAA;AANjB,OAQE;AAAG,MAAA,SAAS,EAAEgD;AAAd,MARF,CADF;AAYD,GAvBD;;AAyBA,MAAMoB,WAAW,GAAG,SAAdA,WAAc,CAACpD,KAAD,EAAQd,MAAR,EAAgBmE,IAAhB,EAAyB;AAAA,QACnCC,UADmC,GACJtD,KADI,CACnCsD,UADmC;AAAA,QACvBC,QADuB,GACJvD,KADI,CACvBuD,QADuB;AAAA,QACbnE,IADa,GACJY,KADI,CACbZ,IADa;;AAG3C,YAAQA,IAAI,CAACJ,IAAb;AACE,WAAK,WAAL;AACE,eACE;AAAK,UAAA,SAAS,EAAE0B,UAAU,CAAC,gBAAD;AAA1B,WACE,iBAAI6C,QAAJ,CADF,CADF;;AAKF,WAAK,aAAL;AACE,eACE;AAAK,UAAA,SAAS,EAAE7C,UAAU,CAAC,gBAAD;AAA1B,WACE,0BAAa6C,QAAb,CADF,CADF;;AAKF,WAAK,eAAL;AACE,eACE;AAAK,UAAA,SAAS,EAAE7C,UAAU,CAAC,gBAAD;AAA1B,WACE,kBAAK6C,QAAL,CADF,CADF;;AAKF,WAAK,aAAL;AACE,eACE;AAAK,UAAA,SAAS,EAAE7C,UAAU,CAAC,gBAAD;AAA1B,WACE;AAAI,UAAA,SAAS,EAAEA,UAAU,CAAC,SAAD;AAAzB,WAAuC6C,QAAvC,CADF,CADF;;AAKF,WAAK,aAAL;AACE,eACE;AAAK,UAAA,SAAS,EAAE7C,UAAU,CAAC,gBAAD;AAA1B,WACE,kBAAK6C,QAAL,CADF,CADF;;AAKF,WAAK,WAAL;AACE,eACI,kBAAKA,QAAL,CADJ;;AAGF,WAAK,eAAL;AACE,eACE;AAAK,UAAA,SAAS,EAAE7C,UAAU,CAAC,gBAAD;AAA1B,WACE,kBAAK6C,QAAL,CADF,CADF;;AAKF,WAAK,OAAL;AAAc;AACZ,cAAM9B,GAAG,GAAGrC,IAAI,CAACyC,IAAL,CAAU2B,GAAV,CAAc,KAAd,CAAZ;AACA,iBACE;AAAK,YAAA,SAAS,EAAE9C,UAAU,CAAC,gBAAD;AAA1B,aACE;AAAQ,YAAA,SAAS,EAAEA,UAAU,CAAC,iBAAD;AAA7B,aACE;AAAK,YAAA,GAAG,EAAEe,GAAV;AAAe,YAAA,OAAO,EAAC;AAAvB,YADF,CADF,CADF;AAOD;;AACD,WAAK,QAAL;AAAe;AACb,cAAMA,IAAG,GAAGrC,IAAI,CAACyC,IAAL,CAAU2B,GAAV,CAAc,KAAd,CAAZ;;AACA,iBACE;AAAK,YAAA,SAAS,EAAE9C,UAAU,CAAC,gBAAD;AAA1B,aACE;AAAQ,YAAA,SAAS,EAAEA,UAAU,CAAC,iBAAD;AAA7B,aACE;AAAK,YAAA,GAAG,EAAEe,IAAV;AAAe,YAAA,OAAO,EAAC;AAAvB,YADF,EAEE,0BACE,sBAAS8B,QAAT,CADF,CAFF,CADF,CADF;AAUD;;AACD;AACE,eAAOF,IAAI,EAAX;AAjEJ;AAmED,GAtED;;AAwEA,MAAMI,UAAU,GAAG,SAAbA,UAAa,CAACzD,KAAD,EAAQd,MAAR,EAAgBmE,IAAhB,EAAyB;AAAA,QAClCE,QADkC,GACHvD,KADG,CAClCuD,QADkC;AAAA,QACxBzC,IADwB,GACHd,KADG,CACxBc,IADwB;AAAA,QAClBwC,UADkB,GACHtD,KADG,CAClBsD,UADkB;;AAG1C,YAAQxC,IAAI,CAAC9B,IAAb;AACE,WAAK,MAAL;AACE,eAAO,gBAAYsE,UAAZ,EAAyBC,QAAzB,CAAP;;AACF,WAAK,MAAL;AACE,eAAO,cAAUD,UAAV,EAAuBC,QAAvB,CAAP;;AACF,WAAK,QAAL;AACE,eAAO,YAAQD,UAAR,EAAqBC,QAArB,CAAP;;AACF,WAAK,YAAL;AACE,eAAO,WAAOD,UAAP,EAAoBC,QAApB,CAAP;;AACF;AACE,eAAOF,IAAI,EAAX;AAVJ;AAYD,GAfD;;AAiBA,MAAMK,SAAS,GAAG,SAAZA,SAAY,CAACxB,KAAD,EAAQhD,MAAR,EAAgBmE,IAAhB,EAAyB;AACzC,QAAIvC,IAAJ;;AAEA,QAAIT,YAAY,CAAC6B,KAAD,CAAhB,EAAyB;AACvBpB,MAAAA,IAAI,GAAG,MAAP;AACD,KAFD,MAEO,IAAIR,cAAc,CAAC4B,KAAD,CAAlB,EAA2B;AAChCpB,MAAAA,IAAI,GAAG,QAAP;AACD,KAFM,MAEA,IAAIP,kBAAkB,CAAC2B,KAAD,CAAtB,EAA+B;AACpCpB,MAAAA,IAAI,GAAG,YAAP;AACD,KAFM,MAEA,IAAIN,YAAY,CAAC0B,KAAD,CAAhB,EAAyB;AAC9BpB,MAAAA,IAAI,GAAG,MAAP;AACD,KAFM,MAEA,IAAIL,WAAW,CAACyB,KAAD,CAAf,EAAwB;AAC7BA,MAAAA,KAAK,CAACyB,cAAN;AACA,aAAON,IAAI,EAAX;AACD,KAHM,MAGA;AACL,aAAOA,IAAI,EAAX;AACD;;AAEDnB,IAAAA,KAAK,CAACyB,cAAN;AACAzE,IAAAA,MAAM,CAAC0E,UAAP,CAAkB9C,IAAlB;AACD,GApBD;;AAsBA,MAAMqB,WAAW,GAAG,SAAdA,WAAc,CAACD,KAAD,EAAQlD,IAAR,EAAiB;AACnCkD,IAAAA,KAAK,CAACyB,cAAN;AACA1D,IAAAA,GAAG,CAAC4D,OAAJ,CAAYD,UAAZ,CAAuB5E,IAAvB;AACD,GAHD;;AAKA,MAAMqD,YAAY,GAAG,SAAfA,YAAe,CAACH,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACyB,cAAN;AACA,QAAMlC,GAAG,GAAGqC,MAAM,CAACC,MAAP,CAAc,6BAAd,CAAZ,CAF8B,CAG9B;;AACA,QAAI,CAACtC,GAAL,EAAU;AACVxB,IAAAA,GAAG,CAAC4D,OAAJ,CAAYG,OAAZ,CAAoBxC,WAApB,EAAiCC,GAAjC;AACD,GAND;;AAQA,MAAMqB,aAAa,GAAG,SAAhBA,aAAgB,CAACZ,KAAD,EAAW;AAC/BA,IAAAA,KAAK,CAACyB,cAAN;AACA,QAAMlC,GAAG,GAAGqC,MAAM,CAACC,MAAP,CAAc,6BAAd,CAAZ;AACA,QAAI,CAACtC,GAAL,EAAU;AACVxB,IAAAA,GAAG,CAAC4D,OAAJ,CAAYG,OAAZ,CAAoBlC,YAApB,EAAkCL,GAAlC;AACD,GALD;;AAOA,MAAM0B,YAAY,GAAG,SAAfA,YAAe,CAACjB,KAAD,EAAQlD,IAAR,EAAiB;AACpCkD,IAAAA,KAAK,CAACyB,cAAN;AAEA,QAAMzE,MAAM,GAAGe,GAAG,CAAC4D,OAAnB;AACA,QAAM3D,KAAK,GAAGhB,MAAM,CAACgB,KAArB;AACA,QAAMpB,QAAQ,GAAGoB,KAAK,CAACpB,QAAvB,CALoC,CAOpC;;AACA,QAAIE,IAAI,KAAK,eAAT,IAA4BA,IAAI,KAAK,eAAzC,EAA0D;AACxD,UAAMiD,QAAQ,GAAGlB,QAAQ,CAAC/B,IAAD,CAAzB;AACA,UAAMiF,MAAM,GAAGlD,QAAQ,CAAC,WAAD,CAAvB;;AAEA,UAAIkD,MAAJ,EAAY;AACV/E,QAAAA,MAAM,CACHgF,SADH,CACajC,QAAQ,GAAG7B,YAAH,GAAkBpB,IADvC,EAEGmF,WAFH,CAEe,eAFf,EAGGA,WAHH,CAGe,eAHf;AAID,OALD,MAKO;AACLjF,QAAAA,MAAM,CAACgF,SAAP,CAAiBjC,QAAQ,GAAG7B,YAAH,GAAkBpB,IAA3C;AACD;AACF,KAZD,MAYO;AACL;AACA,UAAMiF,OAAM,GAAGlD,QAAQ,CAAC,WAAD,CAAvB;;AACA,UAAMqD,MAAM,GAAGlE,KAAK,CAACN,MAAN,CAAaiB,IAAb,CAAkB,UAACwD,KAAD,EAAW;AAC1C,eAAO,CAAC,CAACvF,QAAQ,CAACwF,UAAT,CACPD,KAAK,CAAC5E,GADC,EAEP,UAACuD,MAAD;AAAA,iBAAYA,MAAM,CAAChE,IAAP,KAAgBA,IAA5B;AAAA,SAFO,CAAT;AAID,OALc,CAAf;;AAOA,UAAIiF,OAAM,IAAIG,MAAd,EAAsB;AACpBlF,QAAAA,MAAM,CACHgF,SADH,CACa9D,YADb,EAEG+D,WAFH,CAEe,eAFf,EAGGA,WAHH,CAGe,eAHf;AAID,OALD,MAKO,IAAIF,OAAJ,EAAY;AACjB/E,QAAAA,MAAM,CACHiF,WADH,CAEInF,IAAI,KAAK,eAAT,GAA2B,eAA3B,GAA6C,eAFjD,EAIGuF,SAJH,CAIavF,IAJb;AAKD,OANM,MAMA;AACLE,QAAAA,MAAM,CAACgF,SAAP,CAAiB,WAAjB,EAA8BK,SAA9B,CAAwCvF,IAAxC;AACD;AACF;AACF,GA7CD;;AA+CA,MAAMwF,aAAa,GAAG,SAAhBA,aAAgB,CAACtC,KAAD,EAAQhD,MAAR,EAAgBmE,IAAhB,EAAyB;AAC7C,QAAM3B,MAAM,GAAGxC,MAAM,CAACuF,cAAP,CAAsBvC,KAAtB,CAAf;AACA,QAAI,CAACR,MAAD,IAAWQ,KAAK,CAAClD,IAAN,KAAe,MAA9B,EAAsC,OAAOqE,IAAI,EAAX;AAEtC,QAAMqB,QAAQ,GAAGpG,gBAAgB,CAAC4D,KAAD,CAAjC;AAJ6C,QAKrClD,IALqC,GAKf0F,QALe,CAKrC1F,IALqC;AAAA,QAK/B2F,IAL+B,GAKfD,QALe,CAK/BC,IAL+B;AAAA,QAKzBC,KALyB,GAKfF,QALe,CAKzBE,KALyB;;AAO7C,QAAI5F,IAAI,KAAK,OAAb,EAAsB;AAAA,iDACD4F,KADC;AAAA;;AAAA;AAAA;AAAA,cACTC,IADS;AAElB,cAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAFkB,iCAGHF,IAAI,CAAC7F,IAAL,CAAUsC,KAAV,CAAgB,GAAhB,CAHG;AAAA;AAAA,cAGX0D,IAHW;;AAIlB,cAAIA,IAAI,KAAK,OAAb,EAAsB;AAEtBF,UAAAA,MAAM,CAACG,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC/F,YAAAA,MAAM,CAAC8E,OAAP,CAAexC,WAAf,EAA4BsD,MAAM,CAACI,MAAnC,EAA2CxD,MAA3C;AACD,WAFD;AAIAoD,UAAAA,MAAM,CAACK,aAAP,CAAqBN,IAArB;AAVkB;;AACpB,4DAA0B;AAAA;;AAAA,mCAGF;AAOvB;AAXmB;AAAA;AAAA;AAAA;AAAA;;AAYpB;AACD;;AAED,QAAI7F,IAAI,KAAK,MAAb,EAAqB;AACnB,UAAI,CAACJ,KAAK,CAAC+F,IAAD,CAAV,EAAkB,OAAOtB,IAAI,EAAX;AAClB,UAAI,CAACrC,OAAO,CAAC2D,IAAD,CAAZ,EAAoB,OAAOtB,IAAI,EAAX;AACpBnE,MAAAA,MAAM,CAAC8E,OAAP,CAAexC,WAAf,EAA4BmD,IAA5B,EAAkCjD,MAAlC;AACA;AACD;;AAED2B,IAAAA,IAAI;AACL,GA9BD;;AAgCA,MAAM+B,iBAAiB,GACrB,MAAC,aAAD,QACGrD,gBAAgB,CACf,MADe,YAEZvD,MAAM,CAAC,KAAD,CAFM,cAEKA,MAAM,CAAC,SAAD,CAFX,kBADnB,EAKGuD,gBAAgB,CACf,QADe,YAEZvD,MAAM,CAAC,KAAD,CAFM,cAEKA,MAAM,CAAC,WAAD,CAFX,oBALnB,EASGuD,gBAAgB,CACf,YADe,YAEZvD,MAAM,CAAC,KAAD,CAFM,cAEKA,MAAM,CAAC,cAAD,CAFX,uBATnB,EAaGuD,gBAAgB,CACf,MADe,YAEZvD,MAAM,CAAC,KAAD,CAFM,cAEKA,MAAM,CAAC,SAAD,CAFX,kBAbnB,EAiBGuE,iBAAiB,CAChB,aADgB,YAEbvE,MAAM,CAAC,KAAD,CAFO,cAEIA,MAAM,CAAC,OAAD,CAFV,qBAjBpB,EAqBGuE,iBAAiB,CAChB,aADgB,YAEbvE,MAAM,CAAC,KAAD,CAFO,cAEIA,MAAM,CAAC,OAAD,CAFV,qBArBpB,EAyBGuE,iBAAiB,CAChB,aADgB,YAEbvE,MAAM,CAAC,KAAD,CAFO,cAEIA,MAAM,CAAC,gBAAD,CAFV,yBAzBpB,EA6BGuE,iBAAiB,CAChB,eADgB,YAEbvE,MAAM,CAAC,KAAD,CAFO,cAEIA,MAAM,CAAC,YAAD,CAFV,qBA7BpB,EAiCGuE,iBAAiB,CAChB,eADgB,YAEbvE,MAAM,CAAC,KAAD,CAFO,cAEIA,MAAM,CAAC,YAAD,CAFV,qBAjCpB,EAqCG4D,iBAAiB,WAAI5D,MAAM,CAAC,KAAD,CAAV,cAAqBA,MAAM,CAAC,UAAD,CAA3B,mBArCpB,EAsCGqE,kBAAkB,WACdrE,MAAM,CAAC,KAAD,CADQ,cACGA,MAAM,CAAC,WAAD,CADT,oBAtCrB,EA0CG8D,gBAAgB,WAAI9D,MAAM,CAAC,KAAD,CAAV,cAAqBA,MAAM,CAAC,SAAD,CAA3B,kBA1CnB,CADF;;AA+CA,SACE;AAAK,IAAA,SAAS,EAAEA,MAAM,CAAC,aAAD;AAAtB,KACSwB,KAAK,CAACqF,YAAN,GACD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,GAAG,EAAE,MAA1B;AAAkCC,MAAAA,eAAe,EAAE,MAAnD;AAA2DC,MAAAA,KAAK,EAAE;AAAlE;AADT,KAIGL,iBAJH,CADC,GAQD;AAAK,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAE;AAAR;AAAZ,KACGL,iBADH,CATR,EAaE,MAAC,MAAD;AACE,IAAA,GAAG,EAAEnF,GADP;AAEE,IAAA,SAAS,EAAEzB,MAAM,CAAC,QAAD,CAFnB;AAGE,IAAA,KAAK,EAAE0B,KAHT;AAIE,IAAA,QAAQ,EAAE,kBAACwF,IAAD,EAAU;AAACvF,MAAAA,QAAQ,CAACuF,IAAI,CAACxF,KAAN,CAAR;AAAqB,KAJ5C;AAKE,IAAA,SAAS,EAAEwD,SALb;AAME,IAAA,UAAU,EAAED,UANd;AAOE,IAAA,WAAW,EAAEL,WAPf;AAQE,IAAA,MAAM,EAAEoB,aARV;AASE,IAAA,MAAM,EAAE3F;AATV,IAbF,CADF;AA2BD,CAjaD;;GAAMkB,U;;KAAAA,U;AAoaN,OAAO,IAAM4F,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAe;AACrC,MAAMC,UAAU,GAAG;AACjBC,IAAAA,CAAC,EAAE,WADc;AAEjBC,IAAAA,UAAU,EAAE,aAFK;AAGjBC,IAAAA,EAAE,iBAHe;AAIjBC,IAAAA,EAAE,eAJe;AAKjBC,IAAAA,EAAE,eALe;AAMjBC,IAAAA,EAAE,aANe;AAOjBC,IAAAA,EAAE,iBAPe;AAQjBC,IAAAA,GAAG;AARc,GAAnB,CADqC,CAYrC;;AACA,MAAMC,SAAS,GAAG;AAChBC,IAAAA,EAAE,EAAE,QADY;AAEhBC,IAAAA,MAAM,EAAE,MAFQ;AAGhBC,IAAAA,CAAC,EAAE,YAHa;AAIhBtH,IAAAA,IAAI;AAJY,GAAlB;AAQA,MAAMuH,KAAK,GAAG,CACZ;AACEC,IAAAA,WADF,uBACcC,EADd,EACkBvD,IADlB,EACwB;AACpB,UAAMrE,IAAI,GAAG6G,UAAU,CAACe,EAAE,CAACC,OAAH,CAAWC,WAAX,EAAD,CAAvB;;AACA,UAAI9H,IAAJ,EAAU;AACR,eAAO;AACL+H,UAAAA,MAAM,EAAE,OADH;AAEL/H,UAAAA,IAAI,EAAEA,IAFD;AAGL6C,UAAAA,IAAI,EAAE;AACJmF,YAAAA,SAAS,EAAEJ,EAAE,CAACK,YAAH,CAAgB,OAAhB;AADP,WAHD;AAMLvH,UAAAA,KAAK,EAAE2D,IAAI,CAACuD,EAAE,CAACM,UAAJ;AANN,SAAP;AAQD;AACF,KAbH;AAcEC,IAAAA,SAdF,qBAcYC,GAdZ,EAciB7D,QAdjB,EAc2B;AACvB,UAAI6D,GAAG,CAACL,MAAJ,IAAc,OAAlB,EAA2B;AACzB,gBAAQK,GAAG,CAACpI,IAAZ;AACE,eAAK,WAAL;AACE,mBACE;AACE,cAAA,SAAS,EAAE4G,SAAS,CAAC,WAAD,CADtB;AAEE,cAAA,CAAC;AAFH,4BAGaA,SAAS,CAAC,gBAAD,CAHtB,GAKE,iBAAIrC,QAAJ,CALF,CADF;;AASF,eAAK,aAAL;AACE,mBACE;AAAK,cAAA,SAAS,YAAKqC,SAAS,CAAC,gBAAD,CAAd;AAAd,eACE,0BAAarC,QAAb,CADF,CADF;;AAKF,eAAK,eAAL;AACE,mBACE;AAAK,cAAA,SAAS,EAAEqC,SAAS,CAAC,gBAAD;AAAzB,eACE,kBAAKrC,QAAL,CADF,CADF;;AAKF,eAAK,aAAL;AACE,mBACE;AAAK,cAAA,SAAS,EAAEqC,SAAS,CAAC,gBAAD;AAAzB,eACE;AAAI,cAAA,SAAS,EAAEA,SAAS,CAAC,SAAD;AAAxB,eAAsCrC,QAAtC,CADF,CADF;;AAKF,eAAK,aAAL;AACE,mBACE;AAAK,cAAA,SAAS,EAAEqC,SAAS,CAAC,gBAAD;AAAzB,eACE,kBAAKrC,QAAL,CADF,CADF;;AAKF,eAAK,WAAL;AACE,mBAAO,kBAAKA,QAAL,CAAP;;AACF,eAAK,eAAL;AACE,mBACE;AAAK,cAAA,SAAS,EAAEqC,SAAS,CAAC,gBAAD;AAAzB,eACE,kBAAKrC,QAAL,CADF,CADF;;AAKF,eAAK,OAAL;AAAc;AACZ,kBAAM9B,GAAG,GAAG2F,GAAG,CAACvF,IAAJ,CAAS,KAAT,CAAZ;AACA,qBACE;AAAK,gBAAA,SAAS,YAAK+D,SAAS,CAAC,gBAAD,CAAd;AAAd,iBACE;AAAQ,gBAAA,SAAS,EAAEA,SAAS,CAAC,iBAAD;AAA5B,iBACE;AAAK,gBAAA,GAAG,EAAEnE,GAAV;AAAe,gBAAA,OAAO,EAAC;AAAvB,gBADF,CADF,CADF;AAOD;;AACD,eAAK,QAAL;AAAe;AACb,kBAAMA,KAAG,GAAG2F,GAAG,CAACvF,IAAJ,CAAS,KAAT,CAAZ;AACA,qBACE;AAAK,gBAAA,SAAS,YAAK+D,SAAS,CAAC,gBAAD,CAAd;AAAd,iBACE;AAAQ,gBAAA,SAAS,EAAEA,SAAS,CAAC,iBAAD;AAA5B,iBACE;AAAK,gBAAA,GAAG,EAAEnE,KAAV;AAAe,gBAAA,OAAO,EAAC;AAAvB,gBADF,EAEE,0BACE,sBAAS8B,QAAT,CADF,CAFF,CADF,CADF;AAUD;AAjEH;AAmED;AACF;AApFH,GADY,EAuFZ;AACA;AACEoD,IAAAA,WADF,uBACcC,EADd,EACkBvD,IADlB,EACwB;AACpB,UAAMrE,IAAI,GAAGsH,SAAS,CAACM,EAAE,CAACC,OAAH,CAAWC,WAAX,EAAD,CAAtB;;AACA,UAAI9H,IAAJ,EAAU;AACR,eAAO;AACL+H,UAAAA,MAAM,EAAE,MADH;AAEL/H,UAAAA,IAAI,EAAEA,IAFD;AAGLU,UAAAA,KAAK,EAAE2D,IAAI,CAACuD,EAAE,CAACM,UAAJ;AAHN,SAAP;AAKD;AACF,KAVH;AAWEC,IAAAA,SAXF,qBAWYC,GAXZ,EAWiB7D,QAXjB,EAW2B;AACvB,UAAI6D,GAAG,CAACL,MAAJ,IAAc,MAAlB,EAA0B;AACxB,gBAAQK,GAAG,CAACpI,IAAZ;AACE,eAAK,MAAL;AACE,mBAAO,sBAASuE,QAAT,CAAP;;AACF,eAAK,QAAL;AACE,mBAAO,kBAAKA,QAAL,CAAP;;AACF,eAAK,MAAL;AACE,mBAAO,oBAAOA,QAAP,CAAP;;AACF,eAAK,YAAL;AACE,mBAAO,iBAAIA,QAAJ,CAAP;AARJ;AAUD;AACF;AAxBH,GAxFY,CAAd;AAmHA,SAAOmD,KAAP;AACD,CAzIM;AA+IP,eAAe3G,UAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Editor, getEventTransfer } from \"slate-react\";\nimport { Block } from \"slate\";\nimport styles from \"./TextEditor.module.css\";\nimport FormatToolbar from \"./FormatToolbar\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport imageExtensions from \"image-extensions\";\nimport isUrl from \"is-url\";\n\n\n\nconst schema = {\n  document: {\n    last: { type: \"paragraph\" },\n    normalize: (editor, { code, node, child }) => {\n      switch (code) {\n        case \"last_child_type_invalid\": {\n          const paragraph = Block.create(\"paragraph\");\n          return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n        }\n      }\n    },\n  },\n  blocks: {\n    image: {\n      isVoid: true,\n    },\n  },\n};\n\n\nconst TextEditor = (props) => {\n  const ref = useRef();\n  const value = props.value;\n  const setValue = props.setValue;\n  const DEFAULT_NODE = \"paragraph\";\n  const isBoldHotkey = isKeyHotkey(\"mod+b\");\n  const isItalicHotkey = isKeyHotkey(\"mod+i\");\n  const isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\n  const isCodeHotkey = isKeyHotkey(\"mod+`\");\n  const isTabHotkey = isKeyHotkey(\"tab\");\n  const bodyStyles = props.styles;\n\n  const hasMark = (type) => {\n    return value.activeMarks.some((mark) => mark.type === type);\n  };\n\n  const hasBlock = (type) => {\n    return value.blocks.some((node) => node.type === type);\n  };\n\n  const isImage = (url) => {\n    return imageExtensions.includes(getExtension(url));\n  };\n\n  const getExtension = (url) => {\n    return new URL(url).pathname.split(\".\").pop;\n  };\n\n  const insertImage = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"image\",\n      data: { src },\n    });\n  };\n\n  const insertFigure = (editor, src, target) => {\n    if (target) {\n      editor.select(target);\n    }\n\n    editor.insertBlock({\n      type: \"figure\",\n      data: { src },\n    });\n  };\n\n  const renderMarkButton = (type, icon) => {\n    const isActive = hasMark(type);\n    return (\n      <div\n        onPointerDown={(event) => onClickMark(event, type)}\n        className={\n          isActive\n            ? `${styles[\"active\"]} ${styles[\"tooltip-icon-button\"]}`\n            : styles[\"tooltip-icon-button\"]\n        }\n      >\n        <i className={icon} />\n      </div>\n    );\n  };\n\n  const renderImageButton = (icon) => {\n    return (\n      <div\n        className={styles[\"tooltip-icon-button\"]}\n        onPointerDown={onClickImage}\n      >\n        <i className={icon} />\n      </div>\n    );\n  };\n\n  const renderSaveButton = (icon) => {\n    return (\n      <div\n        className={styles[\"tooltip-icon-button\"]}\n        onPointerDown={\n          props.onSave\n            ? props.onSave\n            : () => console.log(JSON.stringify(value.toJSON()))\n        }\n      >\n        <i className={icon} />\n      </div>\n    );\n  };\n\n  const renderFigureButton = (icon) => {\n    let isActive = hasBlock(\"figure\");\n    return (\n      <div\n      className={\n        isActive\n          ? `${styles[\"active\"]} ${styles[\"tooltip-icon-button\"]}`\n          : styles[\"tooltip-icon-button\"]\n      }\n        onPointerDown={onClickFigure}\n      >\n        <i className={icon} />\n      </div>\n    );\n  };\n\n  const renderBlockButton = (type, icon) => {\n    let isActive = hasBlock(type);\n    if ([\"numbered-list\", \"bulleted-list\"].includes(type)) {\n      const { document, blocks } = value;\n\n      if (blocks.size > 0) {\n        const parent = document.getParent(blocks.first().key);\n        isActive = hasBlock(\"list-item\") && parent && parent.type === type;\n      }\n    }\n\n    return (\n      <div\n        className={\n          isActive\n            ?`${styles[\"active\"]} ${styles[\"tooltip-icon-button\"]}`\n            : styles[\"tooltip-icon-button\"]\n        }\n        onPointerDown={(event) => onClickBlock(event, type)}\n      >\n        <i className={icon}></i>\n      </div>\n    );\n  };\n\n  const renderBlock = (props, editor, next) => {\n    const { attributes, children, node } = props;\n\n    switch (node.type) {\n      case \"paragraph\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <p>{children}</p>\n          </div>\n        );\n      case \"block-quote\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <blockquote>{children}</blockquote>\n          </div>\n        );\n      case \"bulleted-list\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <ul>{children}</ul>\n          </div>\n        );\n      case \"heading-one\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <h1 className={bodyStyles[\"heading\"]}>{children}</h1>\n          </div>\n        );\n      case \"heading-two\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <h2>{children}</h2>\n          </div>\n        );\n      case \"list-item\":\n        return (\n            <li>{children}</li>\n        );\n      case \"numbered-list\":\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <ol>{children}</ol>\n          </div>\n        );\n      case \"image\": {\n        const src = node.data.get(\"src\");\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <figure className={bodyStyles[\"image-container\"]}>\n              <img src={src} loading=\"lazy\" />\n            </figure>\n          </div>\n        );\n      }\n      case \"figure\": {\n        const src = node.data.get(\"src\");\n        return (\n          <div className={bodyStyles[\"main-pane-item\"]}>\n            <figure className={bodyStyles[\"image-container\"]}>\n              <img src={src} loading=\"lazy\"/>\n              <figcaption>\n                <strong>{children}</strong>\n              </figcaption>\n            </figure>\n          </div>\n        );\n      }\n      default:\n        return next();\n    }\n  };\n\n  const renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case \"bold\":\n        return <strong {...attributes}>{children}</strong>;\n      case \"code\":\n        return <code {...attributes}>{children}</code>;\n      case \"italic\":\n        return <em {...attributes}>{children}</em>;\n      case \"underlined\":\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n\n  const onKeyDown = (event, editor, next) => {\n    let mark;\n\n    if (isBoldHotkey(event)) {\n      mark = \"bold\";\n    } else if (isItalicHotkey(event)) {\n      mark = \"italic\";\n    } else if (isUnderlinedHotkey(event)) {\n      mark = \"underlined\";\n    } else if (isCodeHotkey(event)) {\n      mark = \"code\";\n    } else if (isTabHotkey(event)) {\n      event.preventDefault();\n      return next();\n    } else {\n      return next();\n    }\n\n    event.preventDefault();\n    editor.toggleMark(mark);\n  };\n\n  const onClickMark = (event, type) => {\n    event.preventDefault();\n    ref.current.toggleMark(type);\n  };\n\n  const onClickImage = (event) => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\");\n    // const caption = window.prompt(\"enter a caption for the image\")\n    if (!src) return;\n    ref.current.command(insertImage, src);\n  };\n\n  const onClickFigure = (event) => {\n    event.preventDefault();\n    const src = window.prompt(\"enter the URL of the image:\");\n    if (!src) return;\n    ref.current.command(insertFigure, src);\n  };\n\n  const onClickBlock = (event, type) => {\n    event.preventDefault();\n\n    const editor = ref.current;\n    const value = editor.value;\n    const document = value.document;\n\n    // Handle everything but list buttons.\n    if (type !== \"bulleted-list\" && type !== \"numbered-list\") {\n      const isActive = hasBlock(type);\n      const isList = hasBlock(\"list-item\");\n\n      if (isList) {\n        editor\n          .setBlocks(isActive ? DEFAULT_NODE : type)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_NODE : type);\n      }\n    } else {\n      // Handle the extra wrapping required for list buttons.\n      const isList = hasBlock(\"list-item\");\n      const isType = value.blocks.some((block) => {\n        return !!document.getClosest(\n          block.key,\n          (parent) => parent.type === type\n        );\n      });\n\n      if (isList && isType) {\n        editor\n          .setBlocks(DEFAULT_NODE)\n          .unwrapBlock(\"bulleted-list\")\n          .unwrapBlock(\"numbered-list\");\n      } else if (isList) {\n        editor\n          .unwrapBlock(\n            type === \"bulleted-list\" ? \"numbered-list\" : \"bulleted-list\"\n          )\n          .wrapBlock(type);\n      } else {\n        editor.setBlocks(\"list-item\").wrapBlock(type);\n      }\n    }\n  };\n\n  const onDropOrPaste = (event, editor, next) => {\n    const target = editor.findEventRange(event);\n    if (!target && event.type === \"drop\") return next();\n\n    const transfer = getEventTransfer(event);\n    const { type, text, files } = transfer;\n\n    if (type === \"files\") {\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split(\"/\");\n        if (mime !== \"image\") continue;\n\n        reader.addEventListener(\"load\", () => {\n          editor.command(insertImage, reader.result, target);\n        });\n\n        reader.readAsDataURL(file);\n      }\n      return;\n    }\n\n    if (type === \"text\") {\n      if (!isUrl(text)) return next();\n      if (!isImage(text)) return next();\n      editor.command(insertImage, text, target);\n      return;\n    }\n\n    next();\n  };\n\n  const renderOnceToolbar = (\n    <FormatToolbar>\n      {renderMarkButton(\n        \"bold\",\n        `${styles[\"fas\"]} ${styles[\"fa-bold\"]} fas fa-bold`\n      )}\n      {renderMarkButton(\n        \"italic\",\n        `${styles[\"fas\"]} ${styles[\"fa-italic\"]} fas fa-italic`\n      )}\n      {renderMarkButton(\n        \"underlined\",\n        `${styles[\"fas\"]} ${styles[\"fa-underline\"]} fas fa-underline`\n      )}\n      {renderMarkButton(\n        \"code\",\n        `${styles[\"fas\"]} ${styles[\"fa-code\"]} fas fa-code`\n      )}\n      {renderBlockButton(\n        \"heading-one\",\n        `${styles[\"fas\"]} ${styles[\"fa-h1\"]} fas fa-heading`\n      )}\n      {renderBlockButton(\n        \"heading-two\",\n        `${styles[\"fas\"]} ${styles[\"fa-h2\"]} fas fa-heading`\n      )}\n      {renderBlockButton(\n        \"block-quote\",\n        `${styles[\"fas\"]} ${styles[\"fa-quote-right\"]} fas fa-quote-right`\n      )}\n      {renderBlockButton(\n        \"numbered-list\",\n        `${styles[\"fas\"]} ${styles[\"fa-list-ol\"]} fas fa-list-ol`\n      )}\n      {renderBlockButton(\n        \"bulleted-list\",\n        `${styles[\"fas\"]} ${styles[\"fa-list-ul\"]} fas fa-list-ul`\n      )}\n      {renderImageButton(`${styles[\"fas\"]} ${styles[\"fa-image\"]} fas fa-image`)}\n      {renderFigureButton(\n        `${styles[\"fas\"]} ${styles[\"fa-images\"]} fas fa-images`\n      )}\n\n      {renderSaveButton(`${styles[\"fas\"]} ${styles[\"fa-save\"]} fas fa-save`)}\n    </FormatToolbar>\n  );\n\n  return (\n    <div className={styles[\"overarching\"]}>\n            {props.toolbarFixed ? (\n            <div\n              style={{ position: \"fixed\", top: \"66px\", backgroundColor: \"#fff\", width: \"100%\" }}\n            >\n              {/* <div style={{ position: \"fixed\", top: \"103.5px\", right: \"0px\"}}> */}\n              {renderOnceToolbar}\n            </div>\n          ) : (\n            <div style={{width: \"100%\"}}>\n              {renderOnceToolbar}\n            </div>\n          )}\n      <Editor\n        ref={ref}\n        className={styles[\"Editor\"]}\n        value={value}\n        onChange={(opts) => {setValue(opts.value)}}\n        onKeyDown={onKeyDown}\n        renderMark={renderMark}\n        renderBlock={renderBlock}\n        onDrop={onDropOrPaste}\n        schema={schema}\n      />\n    </div>\n  );\n};\n\n\nexport const getRules = (cssStyles) => {\n  const BLOCK_TAGS = {\n    p: \"paragraph\",\n    blockquote: \"block-quote\",\n    ul: `bulleted-list`,\n    h1: `heading-one`,\n    h2: `heading-two`,\n    li: `list-item`,\n    ol: `numbered-list`,\n    img: `image`,\n  };\n  \n  // Add a dictionary of mark tags.\n  const MARK_TAGS = {\n    em: \"italic\",\n    strong: \"bold\",\n    u: \"underlined\",\n    code: `code`,\n  };\n  \n\n  const rules = [\n    {\n      deserialize(el, next) {\n        const type = BLOCK_TAGS[el.tagName.toLowerCase()];\n        if (type) {\n          return {\n            object: \"block\",\n            type: type,\n            data: {\n              className: el.getAttribute(\"class\"),\n            },\n            nodes: next(el.childNodes),\n          };\n        }\n      },\n      serialize(obj, children) {\n        if (obj.object == \"block\") {\n          switch (obj.type) {\n            case \"paragraph\":\n              return (\n                <di\n                  className={cssStyles[\"main-pane\"]}\n                  v\n                  className={cssStyles[\"main-pane-item\"]}\n                >\n                  <p>{children}</p>\n                </di>\n              );\n            case \"block-quote\":\n              return (\n                <div className={`${cssStyles[\"main-pane-item\"]}`}>\n                  <blockquote>{children}</blockquote>\n                </div>\n              );\n            case \"bulleted-list\":\n              return (\n                <div className={cssStyles[\"main-pane-item\"]}>\n                  <ul>{children}</ul>\n                </div>\n              );\n            case \"heading-one\":\n              return (\n                <div className={cssStyles[\"main-pane-item\"]}>\n                  <h1 className={cssStyles[\"heading\"]}>{children}</h1>\n                </div>\n              );\n            case \"heading-two\":\n              return (\n                <div className={cssStyles[\"main-pane-item\"]}>\n                  <h2>{children}</h2>\n                </div>\n              );\n            case \"list-item\":\n              return <li>{children}</li>;\n            case \"numbered-list\":\n              return (\n                <div className={cssStyles[\"main-pane-item\"]}>\n                  <ol>{children}</ol>\n                </div>\n              );\n            case \"image\": {\n              const src = obj.data[\"src\"];\n              return (\n                <div className={`${cssStyles[\"main-pane-item\"]}`}>\n                  <figure className={cssStyles[\"image-container\"]}>\n                    <img src={src} loading=\"lazy\"/>\n                  </figure>\n                </div>\n              );\n            }\n            case \"figure\": {\n              const src = obj.data[\"src\"];\n              return (\n                <div className={`${cssStyles[\"main-pane-item\"]}`}>\n                  <figure className={cssStyles[\"image-container\"]}>\n                    <img src={src} loading=\"lazy\"/>\n                    <figcaption>\n                      <strong>{children}</strong>\n                    </figcaption>\n                  </figure>\n                </div>\n              );\n            }\n          }\n        }\n      },\n    },\n    // Add a new rule that handles marks...\n    {\n      deserialize(el, next) {\n        const type = MARK_TAGS[el.tagName.toLowerCase()];\n        if (type) {\n          return {\n            object: \"mark\",\n            type: type,\n            nodes: next(el.childNodes),\n          };\n        }\n      },\n      serialize(obj, children) {\n        if (obj.object == \"mark\") {\n          switch (obj.type) {\n            case \"bold\":\n              return <strong>{children}</strong>;\n            case \"italic\":\n              return <em>{children}</em>;\n            case \"code\":\n              return <code>{children}</code>;\n            case \"underlined\":\n              return <u>{children}</u>;\n          }\n        }\n      },\n    },\n  ];\n  return rules;\n}\n\n\n \n\n\nexport default TextEditor;\n\n\n\n"]},"metadata":{},"sourceType":"module"}