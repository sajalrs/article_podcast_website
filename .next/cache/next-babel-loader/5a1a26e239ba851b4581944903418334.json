{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport SmallCard from \"../Cards/SmallCard/SmallCard.js\";\nimport styles from \"./SidePanel.module.css\";\nimport { Card } from \"../Cards/Card.js\";\nimport { VideoPlayerContext } from \"../../contexts/reducers/videoPlayerContext\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { NetworkStatus, useQuery } from \"@apollo/client\";\nimport { ALL_YOUTUBE_LINKS_QUERY } from \"../../pages/_app\";\n\nconst SidePanel = props => {\n  const cardListRef = useRef();\n  const sidePanelDivRef = useRef();\n  const {\n    0: videoPlayerState,\n    1: videoPlayerDispatch\n  } = useContext(VideoPlayerContext);\n  const {\n    loading,\n    error,\n    fetchMore,\n    data,\n    networkStatus\n  } = useQuery(ALL_YOUTUBE_LINKS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  });\n  const loadingMoreYoutubeLinks = networkStatus === NetworkStatus.fetchMore;\n  let youtubeVideos;\n\n  if (loading && !loadingMoreYoutubeLinks) {\n    podcasts = [];\n  } else {\n    youtubeVideos = data.youtubeLinks, map((item, index) => ({\n      index: index,\n      id: item.id,\n      title: item.title,\n      image: `https://img.youtube.com/vi/${item.id}/hqdefault.jpg`,\n      link: `https://www.youtube.com/embed/${item.id}?rel=0&start=0&autoplay=1`,\n      date: item.date,\n      contentType: Card.ContentType[\"video-youtube\"]\n    }));\n  }\n\n  useEffect(() => {\n    if (props.sidebarClicked && props.sidebarFixed) {\n      disableBodyScroll(cardListRef.current);\n    } else {\n      enableBodyScroll(cardListRef.current);\n    }\n  }, [props.sidebarClicked, props.sidebarFixed]);\n  return __jsx(\"div\", {\n    ref: sidePanelDivRef,\n    className: props.sidebarClicked ? `${styles[\"SidePanel\"]} ${styles[\"maximized\"]}` : `${styles[\"SidePanel\"]} ${styles[\"minimized\"]}`\n  }, __jsx(\"label\", {\n    className: props.sidebarFixed ? styles[\"side-panel-title\"] : `${styles[\"side-panel-title\"]} ${styles[\"side-panel-title-not-fixed\"]} `,\n    onClick: () => {\n      props.setSidebarClicked(!props.sidebarClicked);\n    }\n  }, __jsx(\"label\", {\n    className: styles[\"side-panel-title-text\"]\n  }, \"VIDEO PODCASTS\", \" \"), __jsx(\"i\", {\n    className: props.sidebarClicked ? `${styles[\"fas\"]} ${styles[\"fa-chevron-right\"]} fas fa-chevron-right` : `${styles[\"fas\"]} ${styles[\"fa-chevron-left\"]} fas fa-chevron-left`\n  })), __jsx(\"ul\", {\n    ref: cardListRef,\n    className: props.sidebarFixed ? `${styles[\"card-list\"]} ${styles[\"card-list-fixed\"]} ` : `${styles[\"card-list\"]} ${styles[\"card-list-not-fixed\"]} `\n  }, youtubeVideos.map((item, index) => {\n    return __jsx(\"li\", {\n      key: index\n    }, __jsx(SmallCard, {\n      title: item.title,\n      image: item.image,\n      contentType: Card.ContentType[\"video-youtube\"],\n      onClick: props.playVideo,\n      link: item.link\n    }));\n  })));\n};\n\nexport default SidePanel;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/components/SidePanel/SidePanel.js"],"names":["React","useEffect","useRef","useContext","SmallCard","styles","Card","VideoPlayerContext","disableBodyScroll","enableBodyScroll","NetworkStatus","useQuery","ALL_YOUTUBE_LINKS_QUERY","SidePanel","props","cardListRef","sidePanelDivRef","videoPlayerState","videoPlayerDispatch","loading","error","fetchMore","data","networkStatus","notifyOnNetworkStatusChange","loadingMoreYoutubeLinks","youtubeVideos","podcasts","youtubeLinks","map","item","index","id","title","image","link","date","contentType","ContentType","sidebarClicked","sidebarFixed","current","setSidebarClicked","playVideo"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useContext } from \"react\";\nimport SmallCard from \"../Cards/SmallCard/SmallCard.js\";\nimport styles from \"./SidePanel.module.css\";\nimport { Card } from \"../Cards/Card.js\";\nimport { VideoPlayerContext } from \"../../contexts/reducers/videoPlayerContext\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { NetworkStatus, useQuery } from \"@apollo/client\";\nimport { ALL_YOUTUBE_LINKS_QUERY } from \"../../pages/_app\";\n\nconst SidePanel = (props) => {\n  const cardListRef = useRef();\n  const sidePanelDivRef = useRef();\n  const [videoPlayerState, videoPlayerDispatch] = useContext(\n    VideoPlayerContext\n  );\n\n  const {\n    loading,\n    error,\n    fetchMore,\n    data,\n    networkStatus,\n  } = useQuery(ALL_YOUTUBE_LINKS_QUERY, { notifyOnNetworkStatusChange: true });\n\n  const loadingMoreYoutubeLinks = networkStatus === NetworkStatus.fetchMore;\n\n  let youtubeVideos;\n  if (loading && !loadingMoreYoutubeLinks) {\n    podcasts = [];\n  } else {\n    youtubeVideos = data.youtubeLinks,map((item, index) => \n      ({\n        index: index,\n        id: item.id,\n        title: item.title,\n        image: `https://img.youtube.com/vi/${item.id}/hqdefault.jpg`,\n        link: `https://www.youtube.com/embed/${item.id}?rel=0&start=0&autoplay=1`,\n        date: item.date,\n        contentType: Card.ContentType[\"video-youtube\"],\n      })\n    );\n  }\n\n  useEffect(() => {\n    if (props.sidebarClicked && props.sidebarFixed) {\n      disableBodyScroll(cardListRef.current);\n    } else {\n      enableBodyScroll(cardListRef.current);\n    }\n  }, [props.sidebarClicked, props.sidebarFixed]);\n\n  return (\n    <div\n      ref={sidePanelDivRef}\n      className={\n        props.sidebarClicked\n          ? `${styles[\"SidePanel\"]} ${styles[\"maximized\"]}`\n          : `${styles[\"SidePanel\"]} ${styles[\"minimized\"]}`\n      }\n    >\n      {/* style={{right: titlePos}} */}\n      <label\n        className={\n          props.sidebarFixed\n            ? styles[\"side-panel-title\"]\n            : `${styles[\"side-panel-title\"]} ${styles[\"side-panel-title-not-fixed\"]} `\n        }\n        onClick={() => {\n          props.setSidebarClicked(!props.sidebarClicked);\n        }}\n      >\n        <label className={styles[\"side-panel-title-text\"]}>\n          VIDEO PODCASTS{\" \"}\n        </label>\n        <i\n          className={\n            props.sidebarClicked\n              ? `${styles[\"fas\"]} ${styles[\"fa-chevron-right\"]} fas fa-chevron-right`\n              : `${styles[\"fas\"]} ${styles[\"fa-chevron-left\"]} fas fa-chevron-left`\n          }\n        ></i>\n      </label>\n      <ul\n        ref={cardListRef}\n        className={\n          props.sidebarFixed\n            ? `${styles[\"card-list\"]} ${styles[\"card-list-fixed\"]} `\n            : `${styles[\"card-list\"]} ${styles[\"card-list-not-fixed\"]} `\n        }\n      >\n        {youtubeVideos.map((item, index) => {\n          return (\n            <li key={index}>\n              <SmallCard\n                title={item.title}\n                image={item.image}\n                contentType={Card.ContentType[\"video-youtube\"]}\n                onClick={props.playVideo}\n                link={item.link}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SidePanel;\n"]},"metadata":{},"sourceType":"module"}