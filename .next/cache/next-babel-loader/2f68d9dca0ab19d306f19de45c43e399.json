{"ast":null,"code":"import { ApolloServer } from \"apollo-server-micro\";\n\nrequire(\"dotenv/config\");\n\nimport { typeDefs } from \"./typeDefs\";\nimport { resolvers } from \"./resolvers\";\nimport connectDb from \"../middlewares/dbMiddleware.js\";\nimport withCookies from \"../middlewares/cookiesMiddleware\";\nimport verify from \"../verification/verifyTokenGraphql\";\n\nconst context = ctx => {\n  const io = ctx.req.app.get(\"socket-io\");\n  return {\n    cookie: ctx.res.cookie,\n    authData: ctx.req.authData,\n    io: io\n  };\n};\n\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers,\n  context\n});\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default withCookies(connectDb(verify(apolloServer.createHandler({\n  path: \"/api/graphql\"\n}))));","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/pages/api/graphql/index.js"],"names":["ApolloServer","require","typeDefs","resolvers","connectDb","withCookies","verify","context","ctx","io","req","app","get","cookie","res","authData","apolloServer","config","api","bodyParser","createHandler","path"],"mappings":"AAAA,SAASA,YAAT,QAA6B,qBAA7B;;AACAC,OAAO,CAAC,eAAD,CAAP;;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;;AAEA,MAAMC,OAAO,GAAIC,GAAD,IAAS;AACvB,QAAMC,EAAE,GAAGD,GAAG,CAACE,GAAJ,CAAQC,GAAR,CAAYC,GAAZ,CAAgB,WAAhB,CAAX;AACA,SAAO;AACLC,IAAAA,MAAM,EAAEL,GAAG,CAACM,GAAJ,CAAQD,MADX;AAELE,IAAAA,QAAQ,EAAEP,GAAG,CAACE,GAAJ,CAAQK,QAFb;AAGLN,IAAAA,EAAE,EAAEA;AAHC,GAAP;AAKD,CAPD;;AASA,MAAMO,YAAY,GAAG,IAAIhB,YAAJ,CAAiB;AACpCE,EAAAA,QADoC;AAEpCC,EAAAA,SAFoC;AAGpCI,EAAAA;AAHoC,CAAjB,CAArB;AAMA,OAAO,MAAMU,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,eAAed,WAAW,CACxBD,SAAS,CAACE,MAAM,CAACU,YAAY,CAACI,aAAb,CAA2B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA3B,CAAD,CAAP,CADe,CAA1B","sourcesContent":["import { ApolloServer } from \"apollo-server-micro\";\nrequire(\"dotenv/config\");\nimport { typeDefs } from \"./typeDefs\";\nimport { resolvers } from \"./resolvers\";\nimport connectDb from \"../middlewares/dbMiddleware.js\";\nimport withCookies from \"../middlewares/cookiesMiddleware\";\nimport verify from \"../verification/verifyTokenGraphql\";\n\nconst context = (ctx) => {\n  const io = ctx.req.app.get(\"socket-io\");\n  return {\n    cookie: ctx.res.cookie,\n    authData: ctx.req.authData,\n    io: io,\n  };\n};\n\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers,\n  context,\n});\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n};\n\nexport default withCookies(\n  connectDb(verify(apolloServer.createHandler({ path: \"/api/graphql\" })))\n);\n"]},"metadata":{},"sourceType":"module"}