{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport SmallCard from \"../Cards/SmallCard/SmallCard.js\";\nimport styles from \"./SidePanel.module.css\";\nimport { Card } from \"../Cards/Card.js\";\nimport { VideoPlayerContext } from \"../../contexts/reducers/videoPlayerContext\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\n\nvar SidePanel = function SidePanel(props) {\n  _s();\n\n  var cardListRef = useRef();\n  var sidePanelDivRef = useRef();\n\n  var _useContext = useContext(VideoPlayerContext),\n      videoPlayerState = _useContext[0],\n      videoPlayerDispatch = _useContext[1];\n\n  var youtubeVideos = videoPlayerState.youtubeVideos;\n  useEffect(function () {\n    if (props.sidebarClicked && props.sidebarFixed) {\n      disableBodyScroll(cardListRef.current);\n    } else {\n      enableBodyScroll(cardListRef.current);\n    }\n  }, [props.sidebarClicked, props.sidebarFixed]);\n  return __jsx(\"div\", {\n    ref: sidePanelDivRef,\n    className: props.sidebarClicked ? \"\".concat(styles[\"SidePanel\"], \" \").concat(styles[\"maximized\"]) : \"\".concat(styles[\"SidePanel\"], \" \").concat(styles[\"minimized\"])\n  }, __jsx(\"label\", {\n    className: props.sidebarFixed ? styles[\"side-panel-title\"] : \"\".concat(styles[\"side-panel-title\"], \" \").concat(styles[\"side-panel-title-not-fixed\"], \" \"),\n    onClick: function onClick() {\n      props.setSidebarClicked(!props.sidebarClicked);\n    }\n  }, __jsx(\"label\", {\n    className: styles[\"side-panel-title-text\"]\n  }, \"VIDEO PODCASTS\", \" \"), __jsx(\"i\", {\n    className: props.sidebarClicked ? \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-chevron-right\"], \" fas fa-chevron-right\") : \"\".concat(styles[\"fas\"], \" \").concat(styles[\"fa-chevron-left\"], \" fas fa-chevron-left\")\n  })), __jsx(\"ul\", {\n    ref: cardListRef,\n    className: props.sidebarFixed ? \"\".concat(styles[\"card-list\"], \" \").concat(styles[\"card-list-fixed\"], \" \") : \"\".concat(styles[\"card-list\"], \" \").concat(styles[\"card-list-not-fixed\"], \" \")\n  }, youtubeVideos.map(function (item, index) {\n    return __jsx(\"li\", {\n      key: index\n    }, __jsx(SmallCard, {\n      title: item.title,\n      image: item.image,\n      contentType: Card.ContentType[\"video-youtube\"],\n      onClick: props.playVideo,\n      link: item.link\n    }));\n  })));\n};\n\n_s(SidePanel, \"WzR+lqLH1I3dhzwqj/iKYqxqcBo=\");\n\n_c = SidePanel;\nexport default SidePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidePanel\");","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/components/SidePanel/SidePanel.js"],"names":["React","useEffect","useRef","useContext","SmallCard","styles","Card","VideoPlayerContext","disableBodyScroll","enableBodyScroll","SidePanel","props","cardListRef","sidePanelDivRef","videoPlayerState","videoPlayerDispatch","youtubeVideos","sidebarClicked","sidebarFixed","current","setSidebarClicked","map","item","index","title","image","ContentType","playVideo","link"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,kBAHP;;AAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AAC3B,MAAMC,WAAW,GAAGV,MAAM,EAA1B;AACA,MAAMW,eAAe,GAAGX,MAAM,EAA9B;;AAF2B,oBAGqBC,UAAU,CACxDI,kBADwD,CAH/B;AAAA,MAGpBO,gBAHoB;AAAA,MAGFC,mBAHE;;AAM3B,MAAMC,aAAa,GAAGF,gBAAgB,CAACE,aAAvC;AACAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,KAAK,CAACM,cAAN,IAAwBN,KAAK,CAACO,YAAlC,EAAgD;AAC9CV,MAAAA,iBAAiB,CAACI,WAAW,CAACO,OAAb,CAAjB;AACD,KAFD,MAEO;AACLV,MAAAA,gBAAgB,CAACG,WAAW,CAACO,OAAb,CAAhB;AACD;AACF,GANQ,EAMN,CAACR,KAAK,CAACM,cAAP,EAAuBN,KAAK,CAACO,YAA7B,CANM,CAAT;AAQA,SACE;AACE,IAAA,GAAG,EAAEL,eADP;AAEE,IAAA,SAAS,EACPF,KAAK,CAACM,cAAN,aACOZ,MAAM,CAAC,WAAD,CADb,cAC8BA,MAAM,CAAC,WAAD,CADpC,cAEOA,MAAM,CAAC,WAAD,CAFb,cAE8BA,MAAM,CAAC,WAAD,CAFpC;AAHJ,KASE;AACE,IAAA,SAAS,EACPM,KAAK,CAACO,YAAN,GACIb,MAAM,CAAC,kBAAD,CADV,aAEOA,MAAM,CAAC,kBAAD,CAFb,cAEqCA,MAAM,CAAC,4BAAD,CAF3C,MAFJ;AAME,IAAA,OAAO,EAAE,mBAAM;AACbM,MAAAA,KAAK,CAACS,iBAAN,CAAwB,CAACT,KAAK,CAACM,cAA/B;AACD;AARH,KAUE;AAAO,IAAA,SAAS,EAAEZ,MAAM,CAAC,uBAAD;AAAxB,uBACiB,GADjB,CAVF,EAaE;AACE,IAAA,SAAS,EACPM,KAAK,CAACM,cAAN,aACOZ,MAAM,CAAC,KAAD,CADb,cACwBA,MAAM,CAAC,kBAAD,CAD9B,uCAEOA,MAAM,CAAC,KAAD,CAFb,cAEwBA,MAAM,CAAC,iBAAD,CAF9B;AAFJ,IAbF,CATF,EA8BE;AACE,IAAA,GAAG,EAAEO,WADP;AAEE,IAAA,SAAS,EACPD,KAAK,CAACO,YAAN,aACOb,MAAM,CAAC,WAAD,CADb,cAC8BA,MAAM,CAAC,iBAAD,CADpC,mBAEOA,MAAM,CAAC,WAAD,CAFb,cAE8BA,MAAM,CAAC,qBAAD,CAFpC;AAHJ,KAQGW,aAAa,CAACK,GAAd,CAAkB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAClC,WACE;AAAI,MAAA,GAAG,EAAEA;AAAT,OACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAED,IAAI,CAACE,KADd;AAEE,MAAA,KAAK,EAAEF,IAAI,CAACG,KAFd;AAGE,MAAA,WAAW,EAAEnB,IAAI,CAACoB,WAAL,CAAiB,eAAjB,CAHf;AAIE,MAAA,OAAO,EAAEf,KAAK,CAACgB,SAJjB;AAKE,MAAA,IAAI,EAAEL,IAAI,CAACM;AALb,MADF,CADF;AAWD,GAZA,CARH,CA9BF,CADF;AAuDD,CAtED;;GAAMlB,S;;KAAAA,S;AAwEN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef, useContext } from \"react\";\nimport SmallCard from \"../Cards/SmallCard/SmallCard.js\";\nimport styles from \"./SidePanel.module.css\";\nimport { Card } from \"../Cards/Card.js\";\nimport { VideoPlayerContext } from \"../../contexts/reducers/videoPlayerContext\";\nimport {\n  disableBodyScroll,\n  enableBodyScroll,\n} from \"body-scroll-lock\";\n\nconst SidePanel = (props) => {\n  const cardListRef = useRef();\n  const sidePanelDivRef = useRef();\n  const [videoPlayerState, videoPlayerDispatch] = useContext(\n    VideoPlayerContext\n  );\n  const youtubeVideos = videoPlayerState.youtubeVideos;\n  useEffect(() => {\n    if (props.sidebarClicked && props.sidebarFixed) {\n      disableBodyScroll(cardListRef.current);\n    } else {\n      enableBodyScroll(cardListRef.current);\n    }\n  }, [props.sidebarClicked, props.sidebarFixed]);\n\n  return (\n    <div\n      ref={sidePanelDivRef}\n      className={\n        props.sidebarClicked\n          ? `${styles[\"SidePanel\"]} ${styles[\"maximized\"]}`\n          : `${styles[\"SidePanel\"]} ${styles[\"minimized\"]}`\n      }\n    >\n      {/* style={{right: titlePos}} */}\n      <label\n        className={\n          props.sidebarFixed\n            ? styles[\"side-panel-title\"]\n            : `${styles[\"side-panel-title\"]} ${styles[\"side-panel-title-not-fixed\"]} `\n        }\n        onClick={() => {\n          props.setSidebarClicked(!props.sidebarClicked);\n        }}\n      >\n        <label className={styles[\"side-panel-title-text\"]}>\n          VIDEO PODCASTS{\" \"}\n        </label>\n        <i\n          className={\n            props.sidebarClicked\n              ? `${styles[\"fas\"]} ${styles[\"fa-chevron-right\"]} fas fa-chevron-right`\n              : `${styles[\"fas\"]} ${styles[\"fa-chevron-left\"]} fas fa-chevron-left`\n          }\n        ></i>\n      </label>\n      <ul\n        ref={cardListRef}\n        className={\n          props.sidebarFixed\n            ? `${styles[\"card-list\"]} ${styles[\"card-list-fixed\"]} `\n            : `${styles[\"card-list\"]} ${styles[\"card-list-not-fixed\"]} `\n        }\n      >\n        {youtubeVideos.map((item, index) => {\n          return (\n            <li key={index}>\n              <SmallCard\n                title={item.title}\n                image={item.image}\n                contentType={Card.ContentType[\"video-youtube\"]}\n                onClick={props.playVideo}\n                link={item.link}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SidePanel;\n"]},"metadata":{},"sourceType":"module"}