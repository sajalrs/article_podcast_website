{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query AllPodcastsQuery {\\n    podcasts {\\n      title\\n      by\\n      link\\n      date\\n      image\\n      description\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useRef, useEffect, forwardRef, useContext } from \"react\";\nimport { AudioPlayerContext } from \"../../contexts/reducers/audioPlayerContext\";\nimport { setAudioPlayerIsPlayingAction, setAudioPlayerCurrentTimeAction, setAudioPlayerSelectedAction } from \"../../contexts/actions\";\nimport styles from \"./AudioPlayer.module.css\";\nimport { gql, useQuery } from \"@apollo/client\";\nexport var ALL_PODCASTS_QUERY = gql(_templateObject());\nvar AudioPlayer = /*#__PURE__*/forwardRef(_c = _s2(function (props, ref) {\n  var _s = $RefreshSig$();\n\n  _s2();\n\n  var _useContext = useContext(AudioPlayerContext),\n      audioPlayerState = _useContext[0],\n      audioPlayerDispatch = _useContext[1];\n\n  var podcasts = audioPlayerState.podcasts;\n  var data = useQuery(ALL_PODCASTS_QUERY);\n  console.log(data); //selected refers to the currently playing audio track.\n  //It is global set to allow clicks and links to change tracks\n\n  var selected = audioPlayerState.selected; //audioPLayerRef is initialized to an html5 audio element in the\n  //App.js file and the reference is stored in the global redux\n  //store. This was done for the player to hold its data between\n  //page redirects.This is supposedly bad as only serializable\n  // data should be kept in store but it does the job for now.\n\n  var audioPlayerRef = audioPlayerState.audioPlayerRef;\n  var prevTrack = usePrevious(podcasts[selected]) || {\n    title: \"False Nine Podcast #17 Champions League RO16 first Leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link: \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n    image: \"https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/8497059/8497059-1599895849523-cbb8b2f53d641.jpg\"\n  };\n  var isPlaying = audioPlayerState.isPlaying;\n  var currentTime = audioPlayerState.currentTime; //React redux useDispatch() hook\n\n  var wasPlaying = usePrevious(isPlaying);\n\n  var setAudioPlayerIsPlaying = function setAudioPlayerIsPlaying(setTo) {\n    audioPlayerDispatch(setAudioPlayerIsPlayingAction(setTo));\n  };\n\n  var setAudioPlayerCurrentTime = function setAudioPlayerCurrentTime(setTo) {\n    audioPlayerDispatch(setAudioPlayerCurrentTimeAction(setTo));\n  };\n\n  var setAudioPlayerSelected = function setAudioPlayerSelected(setTo) {\n    audioPlayerDispatch(setAudioPlayerSelectedAction(setTo));\n  }; //Don't need setDuration can probably get rid of. If it ain't broke....\n\n\n  var _useState = useState(2172.892),\n      duration = _useState[0],\n      setDuration = _useState[1]; //seekbar shows the time elapsed in the song\n\n\n  var seekBarRef = useRef();\n  useEffect(function () {\n    if (audioPlayerRef && isPlaying !== wasPlaying) {\n      if (!isPlaying && audioPlayerRef.current) {\n        audioPlayerRef.current.pause();\n      } else if (isPlaying && !wasPlaying && audioPlayerRef.current) {\n        audioPlayerRef.current.play();\n      }\n    }\n  }, [isPlaying, audioPlayerRef]);\n  useEffect(function () {\n    if (audioPlayerRef && podcasts[selected].title != prevTrack.title) {\n      var track = podcasts[selected] ? podcasts[selected].link : null;\n\n      if (track && audioPlayerRef.current) {\n        if (audioPlayerRef.current.src !== track) {\n          audioPlayerRef.current.src = track;\n          audioPlayerRef.current.play();\n          setAudioPlayerIsPlaying(true);\n        }\n      }\n    }\n  }, [audioPlayerRef, podcasts[selected]]);\n  useEffect(function () {\n    if (audioPlayerRef && audioPlayerRef.current) {\n      audioPlayerRef.current.addEventListener(\"timeupdate\", function (e) {\n        setAudioPlayerCurrentTime(e.target.currentTime);\n      });\n    }\n  }, [audioPlayerRef]);\n\n  var handleSliderChange = function handleSliderChange(e) {\n    var time = duration * (e.target.value / 100);\n    audioPlayerRef.current.currentTime = time;\n    setAudioPlayerCurrentTime(time);\n  };\n\n  var rewindPodcasts = function rewindPodcasts() {\n    if (selected === podcasts.length - 1) {\n      setAudioPlayerSelected(0);\n    } else {\n      setAudioPlayerSelected(selected + 1);\n    }\n  };\n\n  var forwardPodcasts = function forwardPodcasts() {\n    if (selected === 0) {\n      setAudioPlayerSelected(podcasts.length - 1);\n    } else {\n      setAudioPlayerSelected(selected - 1);\n    }\n  }; //Useful custom hook which stores the previous value of a\n  //variable\n\n\n  function usePrevious(value) {\n    _s();\n\n    var ref = useRef();\n    useEffect(function () {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  _s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n  function getTime(time) {\n    if (!isNaN(time)) {\n      return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n    }\n  }\n\n  var progressDuration = getTime(duration);\n  var progressTime = getTime(currentTime);\n  var progress = 100 / duration * currentTime;\n  return __jsx(\"div\", {\n    ref: ref,\n    className: styles[\"audio-player\"]\n  }, __jsx(\"div\", {\n    className: props.isActive ? styles[\"image-container\"] : \"\".concat(styles[\"image-container\"], \" \").concat(styles[\"image-container-inactive\"])\n  }, __jsx(\"img\", {\n    className: styles[\"image\"],\n    src: podcasts[selected].image,\n    loading: \"lazy\"\n  })), __jsx(\"div\", {\n    className: styles[\"player\"]\n  }, __jsx(\"div\", {\n    className: styles[\"minimized\"]\n  }, !props.isActive && __jsx(\"div\", {\n    id: styles[\"bars\"]\n  }, __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying === \"playing\" ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  })), __jsx(\"div\", {\n    className: styles[\"title-container\"],\n    onClick: function onClick() {\n      return props.setActive(!props.isActive);\n    }\n  }, podcasts[selected].title.toUpperCase()), props.isActive ? __jsx(\"i\", {\n    onClick: function onClick() {\n      return props.setActive(false);\n    },\n    className: \"\".concat(styles[\"audio-player-inactive\"], \" \").concat(styles[\"fas\"], \" \").concat(styles[\"fa-chevron-down\"], \" fas fa-chevron-down\")\n  }) : __jsx(\"i\", {\n    onClick: function onClick() {\n      return props.setActive(true);\n    },\n    className: \"\".concat(styles[\"audio-player-active\"], \" \").concat(styles[\"fas\"], \" \").concat(styles[\"fa-chevron-up\"], \" fas fa-chevron-up\")\n  })), __jsx(\"div\", {\n    className: props.isActive ? styles[\"image-controls\"] : \"\".concat(styles[\"image-controls\"], \" \").concat(styles[\"image-controls-inactive\"])\n  }, __jsx(\"div\", {\n    className: styles[\"controls\"]\n  }, __jsx(\"i\", {\n    onClick: function onClick() {\n      return rewindPodcasts();\n    },\n    className: \"\".concat(styles[\"backward-button\"], \" \").concat(styles[\"fas\"], \" \").concat(styles[\"fa-step-backward\"], \" fas fa-step-backward\")\n  }), audioPlayerRef && !isPlaying && __jsx(\"i\", {\n    onClick: function onClick() {\n      audioPlayerRef.current.play();\n      setAudioPlayerIsPlaying(true);\n    },\n    className: \"\".concat(styles[\"play-button\"], \" \").concat(styles[\"far\"], \" \").concat(styles[\"fa-play-circle\"], \" far fa-play-circle\")\n  }), audioPlayerRef && isPlaying && __jsx(\"i\", {\n    //Use effect automatically handles changes in redux\n    //state hook to pause the audio player\n    onClick: function onClick() {\n      return setAudioPlayerIsPlaying(false);\n    },\n    className: \"\".concat(styles[\"pause-button\"], \" \").concat(styles[\"far\"], \" \").concat(styles[\"fa-pause-circle\"], \" far fa-pause-circle\")\n  }), __jsx(\"i\", {\n    //On ios devices apparently users must explicitly press\n    //play and audio player can't play through callbacks hence this\n    onClick: function onClick() {\n      audioPlayerRef.current.play();\n      forwardPodcasts();\n    },\n    className: \"\".concat(styles[\"forward-button\"], \" \").concat(styles[\"fas\"], \" \").concat(styles[\"fa-step-forward\"], \" fas fa-step-forward\")\n  })), __jsx(\"div\", {\n    className: styles[\"progress-bar\"]\n  }, progressTime, \" \", __jsx(\"input\", {\n    ref: seekBarRef,\n    type: \"range\",\n    className: styles[\"progress-bar-slider\"],\n    onChange: handleSliderChange,\n    value: progress\n  }), \" \", progressDuration))));\n}, \"R+zj/ZpQiHiHpNYUBlI0AfkHBmE=\", false, function () {\n  return [useQuery, usePrevious, usePrevious];\n}));\n_c2 = AudioPlayer;\nexport default AudioPlayer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AudioPlayer$forwardRef\");\n$RefreshReg$(_c2, \"AudioPlayer\");","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/components/AudioPlayer/AudioPlayer.js"],"names":["React","useState","useRef","useEffect","forwardRef","useContext","AudioPlayerContext","setAudioPlayerIsPlayingAction","setAudioPlayerCurrentTimeAction","setAudioPlayerSelectedAction","styles","gql","useQuery","ALL_PODCASTS_QUERY","AudioPlayer","props","ref","audioPlayerState","audioPlayerDispatch","podcasts","data","console","log","selected","audioPlayerRef","prevTrack","usePrevious","title","by","link","date","image","isPlaying","currentTime","wasPlaying","setAudioPlayerIsPlaying","setTo","setAudioPlayerCurrentTime","setAudioPlayerSelected","duration","setDuration","seekBarRef","current","pause","play","track","src","addEventListener","e","target","handleSliderChange","time","value","rewindPodcasts","length","forwardPodcasts","getTime","isNaN","Math","floor","slice","progressDuration","progressTime","progress","isActive","setActive","toUpperCase"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useContext,\n} from \"react\";\nimport { AudioPlayerContext } from \"../../contexts/reducers/audioPlayerContext\";\nimport {\n  setAudioPlayerIsPlayingAction,\n  setAudioPlayerCurrentTimeAction,\n  setAudioPlayerSelectedAction,\n} from \"../../contexts/actions\";\nimport styles from \"./AudioPlayer.module.css\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nexport const ALL_PODCASTS_QUERY = gql`\n  query AllPodcastsQuery {\n    podcasts {\n      title\n      by\n      link\n      date\n      image\n      description\n    }\n  }\n`;\n\nconst AudioPlayer = forwardRef((props, ref) => {\n  const [audioPlayerState, audioPlayerDispatch] = useContext(\n    AudioPlayerContext\n  );\n  const podcasts = audioPlayerState.podcasts;\n  const data = useQuery(ALL_PODCASTS_QUERY);\n  console.log(data);\n  //selected refers to the currently playing audio track.\n  //It is global set to allow clicks and links to change tracks\n  const selected = audioPlayerState.selected;\n\n  //audioPLayerRef is initialized to an html5 audio element in the\n  //App.js file and the reference is stored in the global redux\n  //store. This was done for the player to hold its data between\n  //page redirects.This is supposedly bad as only serializable\n  // data should be kept in store but it does the job for now.\n  const audioPlayerRef = audioPlayerState.audioPlayerRef;\n  const prevTrack = usePrevious(podcasts[selected]) || {\n    title: \"False Nine Podcast #17 Champions League RO16 first Leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link:\n      \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n    image:\n      \"https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/8497059/8497059-1599895849523-cbb8b2f53d641.jpg\",\n  };\n\n  const isPlaying = audioPlayerState.isPlaying;\n  const currentTime = audioPlayerState.currentTime;\n\n  //React redux useDispatch() hook\n  const wasPlaying = usePrevious(isPlaying);\n  const setAudioPlayerIsPlaying = (setTo) => {\n    audioPlayerDispatch(setAudioPlayerIsPlayingAction(setTo));\n  };\n\n  const setAudioPlayerCurrentTime = (setTo) => {\n    audioPlayerDispatch(setAudioPlayerCurrentTimeAction(setTo));\n  };\n\n  const setAudioPlayerSelected = (setTo) => {\n    audioPlayerDispatch(setAudioPlayerSelectedAction(setTo));\n  };\n\n  //Don't need setDuration can probably get rid of. If it ain't broke....\n  const [duration, setDuration] = useState(2172.892);\n\n  //seekbar shows the time elapsed in the song\n  const seekBarRef = useRef();\n\n  useEffect(() => {\n    if (audioPlayerRef && isPlaying !== wasPlaying) {\n      if (!isPlaying && audioPlayerRef.current) {\n        audioPlayerRef.current.pause();\n      } else if (isPlaying && !wasPlaying && audioPlayerRef.current) {\n        audioPlayerRef.current.play();\n      }\n    }\n  }, [isPlaying, audioPlayerRef]);\n\n  useEffect(() => {\n    if (audioPlayerRef && podcasts[selected].title != prevTrack.title) {\n      let track = podcasts[selected] ? podcasts[selected].link : null;\n      if (track && audioPlayerRef.current) {\n        if (audioPlayerRef.current.src !== track) {\n          audioPlayerRef.current.src = track;\n          audioPlayerRef.current.play();\n          setAudioPlayerIsPlaying(true);\n        }\n      }\n    }\n  }, [audioPlayerRef, podcasts[selected]]);\n\n  useEffect(() => {\n    if (audioPlayerRef && audioPlayerRef.current) {\n      audioPlayerRef.current.addEventListener(\"timeupdate\", (e) => {\n        setAudioPlayerCurrentTime(e.target.currentTime);\n      });\n    }\n  }, [audioPlayerRef]);\n\n  const handleSliderChange = (e) => {\n    const time = duration * (e.target.value / 100);\n    audioPlayerRef.current.currentTime = time;\n    setAudioPlayerCurrentTime(time);\n  };\n\n  const rewindPodcasts = () => {\n    if (selected === podcasts.length - 1) {\n      setAudioPlayerSelected(0);\n    } else {\n      setAudioPlayerSelected(selected + 1);\n    }\n  };\n\n  const forwardPodcasts = () => {\n    if (selected === 0) {\n      setAudioPlayerSelected(podcasts.length - 1);\n    } else {\n      setAudioPlayerSelected(selected - 1);\n    }\n  };\n\n  //Useful custom hook which stores the previous value of a\n  //variable\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  function getTime(time) {\n    if (!isNaN(time)) {\n      return (\n        Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n      );\n    }\n  }\n  const progressDuration = getTime(duration);\n  const progressTime = getTime(currentTime);\n  const progress = (100 / duration) * currentTime;\n  return (\n    <div ref={ref} className={styles[\"audio-player\"]}>\n      <div\n        className={\n          props.isActive\n            ? styles[\"image-container\"]\n            : `${styles[\"image-container\"]} ${styles[\"image-container-inactive\"]}`\n        }\n      >\n        <img\n          className={styles[\"image\"]}\n          src={podcasts[selected].image}\n          loading=\"lazy\"\n        />\n      </div>\n      <div className={styles[\"player\"]}>\n        <div className={styles[\"minimized\"]}>\n          {!props.isActive && (\n            <div id={styles[\"bars\"]}>\n              {/*Animation similar to old windows media player/}\n          {/which is displayed when podcast is playing and/}\n        {/player is maximized*/}\n\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={\n                  isPlaying === \"playing\" ? styles[\"bar\"] : styles[\"bar-paused\"]\n                }\n              ></div>\n\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n            </div>\n          )}\n\n          <div\n            className={styles[\"title-container\"]}\n            onClick={() => props.setActive(!props.isActive)}\n          >\n            {podcasts[selected].title.toUpperCase()}\n          </div>\n          {/*isActive refers to whether audioplayer is minimized/}\n          {/While minimized only playing animation and title appears*/}\n          {props.isActive ? (\n            <i\n              onClick={() => props.setActive(false)}\n              className={`${styles[\"audio-player-inactive\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-down\"]} fas fa-chevron-down`}\n            ></i>\n          ) : (\n            <i\n              onClick={() => props.setActive(true)}\n              className={`${styles[\"audio-player-active\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-up\"]} fas fa-chevron-up`}\n            ></i>\n          )}\n        </div>\n\n        <div\n          className={\n            props.isActive\n              ? styles[\"image-controls\"]\n              : `${styles[\"image-controls\"]} ${styles[\"image-controls-inactive\"]}`\n          }\n        >\n          <div className={styles[\"controls\"]}>\n            <i\n              onClick={() => rewindPodcasts()}\n              className={`${styles[\"backward-button\"]} ${styles[\"fas\"]} ${styles[\"fa-step-backward\"]} fas fa-step-backward`}\n            ></i>\n            {audioPlayerRef && !isPlaying && (\n              <i\n                onClick={() => {\n                  audioPlayerRef.current.play();\n                  setAudioPlayerIsPlaying(true);\n                }}\n                className={`${styles[\"play-button\"]} ${styles[\"far\"]} ${styles[\"fa-play-circle\"]} far fa-play-circle`}\n              ></i>\n            )}\n            {audioPlayerRef && isPlaying && (\n              <i\n                //Use effect automatically handles changes in redux\n                //state hook to pause the audio player\n                onClick={() => setAudioPlayerIsPlaying(false)}\n                className={`${styles[\"pause-button\"]} ${styles[\"far\"]} ${styles[\"fa-pause-circle\"]} far fa-pause-circle`}\n              ></i>\n            )}\n            <i\n              //On ios devices apparently users must explicitly press\n              //play and audio player can't play through callbacks hence this\n              onClick={() => {\n                audioPlayerRef.current.play();\n                forwardPodcasts();\n              }}\n              className={`${styles[\"forward-button\"]} ${styles[\"fas\"]} ${styles[\"fa-step-forward\"]} fas fa-step-forward`}\n            ></i>\n          </div>\n          <div className={styles[\"progress-bar\"]}>\n            {progressTime}{\" \"}\n            <input\n              ref={seekBarRef}\n              type=\"range\"\n              className={styles[\"progress-bar-slider\"]}\n              onChange={handleSliderChange}\n              value={progress}\n            />{\" \"}\n            {progressDuration}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}