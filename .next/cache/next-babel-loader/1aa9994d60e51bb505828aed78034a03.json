{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Card } from \"../components/Cards/Card.js\";\nimport App from \"next/app\";\nimport AppGlobal from \"../components/App/App\";\nimport Router from \"next/router\";\nimport NProgress from \"nprogress\";\nimport \"../styles/loadingscreenspinner.css\";\nimport { AudioPlayerContextProvider } from \"../contexts/reducers/audioPlayerContext\";\nimport { DeviceContextProvider } from \"../contexts/reducers/deviceContext\";\nimport { HeaderContextProvider } from \"../contexts/reducers/headerContext\";\nimport { LoginContextProvider } from \"../contexts/reducers/loginContext\";\nimport { VideoPlayerContextProvider } from \"../contexts/reducers/videoPlayerContext\";\nimport { SocketContextProvider } from \"../contexts/reducers/socketContext\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { useApollo, initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { ALL_PODCASTS_QUERY } from \"../components/AudioPlayer/AudioPlayer\";\nNProgress.configure({\n  showSpinner: true\n});\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = () => {\n  NProgress.done();\n};\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const apolloClient = useApollo(pageProps);\n  return __jsx(ApolloProvider, {\n    client: apolloClient\n  }, __jsx(AudioPlayerContextProvider, {\n    initialState: pageProps.audioPlayerInitialState\n  }, __jsx(DeviceContextProvider, null, __jsx(HeaderContextProvider, null, __jsx(LoginContextProvider, {\n    initialState: pageProps.loginInitialState\n  }, __jsx(VideoPlayerContextProvider, {\n    initialState: pageProps.videoPlayerInitialState\n  }, __jsx(SocketContextProvider, null, __jsx(AppGlobal, null, __jsx(Component, pageProps)))))))));\n};\n\nMyApp.getInitialProps = async ctx => {\n  const apolloClient = initializeApollo();\n  const appProps = await App.getInitialProps(ctx);\n  appProps.pageProps.loginInitialState = {\n    isLoggedIn: false,\n    user: null\n  };\n  let podcasts = [{\n    title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link: \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n    image: \"https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/8497059/8497059-1599895849523-cbb8b2f53d641.jpg\",\n    description: \"In this episode, Ishan, Ojash and Susajjan review the first leg ties of the Champions league Round of 16 first leg.\\n\\n\"\n  }];\n\n  try {\n    const res = await fetch(`${process.env.NEXT_PUBLIC_DOMAIN}/api/podcasts`);\n    const json = await res.json();\n    podcasts = json[\"items\"].map((item, index) => {\n      return _objectSpread(_objectSpread({\n        index: index\n      }, item), {}, {\n        contentType: Card.ContentType[\"audio-internal\"]\n      });\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n\n  appProps.pageProps.audioPlayerInitialState = {\n    selected: 0,\n    isPlaying: false,\n    currentTime: 0,\n    podcasts: podcasts,\n    audioPlayerRef: null\n  };\n  let curVideos = [];\n\n  try {\n    const res = await fetch(`${process.env.NEXT_PUBLIC_DOMAIN}/api/youtube`);\n    const json = await res.json();\n    curVideos = json[\"items\"].map((item, index) => {\n      return {\n        index: index,\n        id: item.id,\n        title: item.title,\n        image: `https://img.youtube.com/vi/${item.id}/hqdefault.jpg`,\n        link: `https://www.youtube.com/embed/${item.id}?rel=0&start=0&autoplay=1`,\n        date: item.date,\n        contentType: Card.ContentType[\"video-youtube\"]\n      };\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n\n  appProps.pageProps.videoPlayerInitialState = {\n    selected: \"https://www.youtube.com/embed/vpWIvnnWxaY?rel=0&start=0&autoplay=1\",\n    isPlaying: false,\n    youtubeVideos: curVideos\n  };\n  const query = await apolloClient.query({\n    query: ALL_PODCASTS_QUERY\n  });\n  console.log(query);\n  return addApolloState(apolloClient, _objectSpread({}, appProps));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/pages/_app.js"],"names":["React","Card","App","AppGlobal","Router","NProgress","AudioPlayerContextProvider","DeviceContextProvider","HeaderContextProvider","LoginContextProvider","VideoPlayerContextProvider","SocketContextProvider","ApolloProvider","useApollo","initializeApollo","addApolloState","ALL_PODCASTS_QUERY","configure","showSpinner","onRouteChangeStart","start","onRouteChangeComplete","done","onRouteChangeError","MyApp","Component","pageProps","apolloClient","audioPlayerInitialState","loginInitialState","videoPlayerInitialState","getInitialProps","ctx","appProps","isLoggedIn","user","podcasts","title","by","link","date","image","description","res","fetch","process","env","NEXT_PUBLIC_DOMAIN","json","map","item","index","contentType","ContentType","error","console","log","message","selected","isPlaying","currentTime","audioPlayerRef","curVideos","id","youtubeVideos","query"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card } from \"../components/Cards/Card.js\";\nimport App from \"next/app\";\nimport AppGlobal from \"../components/App/App\";\nimport Router from \"next/router\";\nimport NProgress from \"nprogress\";\nimport \"../styles/loadingscreenspinner.css\";\nimport { AudioPlayerContextProvider } from \"../contexts/reducers/audioPlayerContext\";\nimport { DeviceContextProvider } from \"../contexts/reducers/deviceContext\";\nimport { HeaderContextProvider } from \"../contexts/reducers/headerContext\";\nimport { LoginContextProvider } from \"../contexts/reducers/loginContext\";\nimport { VideoPlayerContextProvider } from \"../contexts/reducers/videoPlayerContext\";\nimport { SocketContextProvider } from \"../contexts/reducers/socketContext\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport {\n  useApollo,\n  initializeApollo,\n  addApolloState,\n} from \"../lib/apolloClient\";\nimport { ALL_PODCASTS_QUERY } from \"../components/AudioPlayer/AudioPlayer\";\nNProgress.configure({ showSpinner: true });\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = () => {\n  NProgress.done();\n};\n\nconst MyApp = ({ Component, pageProps }) => {\n  const apolloClient = useApollo(pageProps);\n  return (\n    <ApolloProvider client={apolloClient}>\n      <AudioPlayerContextProvider\n        initialState={pageProps.audioPlayerInitialState}\n      >\n        <DeviceContextProvider>\n          <HeaderContextProvider>\n            <LoginContextProvider initialState={pageProps.loginInitialState}>\n              <VideoPlayerContextProvider\n                initialState={pageProps.videoPlayerInitialState}\n              >\n                <SocketContextProvider>\n                  <AppGlobal>\n                    <Component {...pageProps} />\n                  </AppGlobal>\n                </SocketContextProvider>\n              </VideoPlayerContextProvider>\n            </LoginContextProvider>\n          </HeaderContextProvider>\n        </DeviceContextProvider>\n      </AudioPlayerContextProvider>\n    </ApolloProvider>\n  );\n};\n\nMyApp.getInitialProps = async (ctx) => {\n  const apolloClient = initializeApollo();\n\n  const appProps = await App.getInitialProps(ctx);\n\n  appProps.pageProps.loginInitialState = {\n    isLoggedIn: false,\n    user: null,\n  };\n\n  let podcasts = [\n    {\n      title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n      by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n      link:\n        \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n      date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n      image:\n        \"https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/8497059/8497059-1599895849523-cbb8b2f53d641.jpg\",\n      description:\n        \"In this episode, Ishan, Ojash and Susajjan review the first leg ties of the Champions league Round of 16 first leg.\\n\\n\",\n    },\n  ];\n\n  try {\n    const res = await fetch(`${process.env.NEXT_PUBLIC_DOMAIN}/api/podcasts`);\n    const json = await res.json();\n    podcasts = json[\"items\"].map((item, index) => {\n      return {\n        index: index,\n        ...item,\n        contentType: Card.ContentType[\"audio-internal\"],\n      };\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n\n  appProps.pageProps.audioPlayerInitialState = {\n    selected: 0,\n    isPlaying: false,\n    currentTime: 0,\n    podcasts: podcasts,\n    audioPlayerRef: null,\n  };\n\n  let curVideos = [];\n\n  try {\n    const res = await fetch(`${process.env.NEXT_PUBLIC_DOMAIN}/api/youtube`);\n    const json = await res.json();\n    curVideos = json[\"items\"].map((item, index) => {\n      return {\n        index: index,\n        id: item.id,\n        title: item.title,\n        image: `https://img.youtube.com/vi/${item.id}/hqdefault.jpg`,\n        link: `https://www.youtube.com/embed/${item.id}?rel=0&start=0&autoplay=1`,\n        date: item.date,\n        contentType: Card.ContentType[\"video-youtube\"],\n      };\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n\n  appProps.pageProps.videoPlayerInitialState = {\n    selected:\n      \"https://www.youtube.com/embed/vpWIvnnWxaY?rel=0&start=0&autoplay=1\",\n    isPlaying: false,\n    youtubeVideos: curVideos,\n  };\n\n  const query = await apolloClient.query({\n    query: ALL_PODCASTS_QUERY,\n  });\n\n  console.log(query);\n  return addApolloState(apolloClient, { ...appProps });\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}