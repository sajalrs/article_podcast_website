{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useRef, useEffect, forwardRef, useContext } from \"react\";\nimport { AudioPlayerContext } from \"../../contexts/reducers/audioPlayerContext\";\nimport { setAudioPlayerIsPlayingAction, setAudioPlayerCurrentTimeAction, setAudioPlayerSelectedAction } from \"../../contexts/actions\";\nimport styles from \"./AudioPlayer.module.css\";\nimport { gql, NetworkStatus, useQuery } from \"@apollo/client\";\nexport const ALL_PODCASTS_QUERY = gql`\n  query AllPodcastsQuery {\n    podcasts {\n      title\n      by\n      link\n      date\n      image\n      description\n    }\n  }\n`;\nconst AudioPlayer = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    0: audioPlayerState,\n    1: audioPlayerDispatch\n  } = useContext(AudioPlayerContext); // const podcasts = audioPlayerState.podcasts;\n\n  const {\n    loading,\n    error,\n    data,\n    networkStatus\n  } = useQuery(ALL_PODCASTS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  });\n  const loadingMorePodcasts = networkStatus === NetworkStatus.fetchMore;\n  let podcasts;\n\n  if (loading && !loadingMorePodcasts) {\n    podcasts = [{\n      title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n      by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n      link: \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n      date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n      image: \"https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/8497059/8497059-1599895849523-cbb8b2f53d641.jpg\",\n      description: \"In this episode, Ishan, Ojash and Susajjan review the first leg ties of the Champions league Round of 16 first leg.\\n\\n\"\n    }];\n  } else {\n    podcasts = data.podcasts;\n    console.log(\"Done loading\");\n  } //selected refers to the currently playing audio track.\n  //It is global set to allow clicks and links to change tracks\n\n\n  const selected = audioPlayerState.selected; //audioPLayerRef is initialized to an html5 audio element in the\n  //App.js file and the reference is stored in the global redux\n  //store. This was done for the player to hold its data between\n  //page redirects.This is supposedly bad as only serializable\n  // data should be kept in store but it does the job for now.\n\n  const audioPlayerRef = audioPlayerState.audioPlayerRef;\n  const prevTrack = usePrevious(podcasts[selected]) || {\n    title: \"False Nine Podcast #17 Champions League RO16 first Leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link: \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n    image: \"https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/8497059/8497059-1599895849523-cbb8b2f53d641.jpg\"\n  };\n  const isPlaying = audioPlayerState.isPlaying;\n  const currentTime = audioPlayerState.currentTime; //React redux useDispatch() hook\n\n  const wasPlaying = usePrevious(isPlaying);\n\n  const setAudioPlayerIsPlaying = setTo => {\n    audioPlayerDispatch(setAudioPlayerIsPlayingAction(setTo));\n  };\n\n  const setAudioPlayerCurrentTime = setTo => {\n    audioPlayerDispatch(setAudioPlayerCurrentTimeAction(setTo));\n  };\n\n  const setAudioPlayerSelected = setTo => {\n    audioPlayerDispatch(setAudioPlayerSelectedAction(setTo));\n  }; //Don't need setDuration can probably get rid of. If it ain't broke....\n\n\n  const {\n    0: duration,\n    1: setDuration\n  } = useState(2172.892); //seekbar shows the time elapsed in the song\n\n  const seekBarRef = useRef();\n  useEffect(() => {\n    if (audioPlayerRef && isPlaying !== wasPlaying) {\n      if (!isPlaying && audioPlayerRef.current) {\n        audioPlayerRef.current.pause();\n      } else if (isPlaying && !wasPlaying && audioPlayerRef.current) {\n        audioPlayerRef.current.play();\n      }\n    }\n  }, [isPlaying, audioPlayerRef]);\n  useEffect(() => {\n    if (audioPlayerRef && podcasts[selected].title != prevTrack.title) {\n      let track = podcasts[selected] ? podcasts[selected].link : null;\n\n      if (track && audioPlayerRef.current) {\n        if (audioPlayerRef.current.src !== track) {\n          audioPlayerRef.current.src = track;\n          audioPlayerRef.current.play();\n          setAudioPlayerIsPlaying(true);\n        }\n      }\n    }\n  }, [audioPlayerRef, podcasts[selected]]);\n  useEffect(() => {\n    if (audioPlayerRef && audioPlayerRef.current) {\n      audioPlayerRef.current.addEventListener(\"timeupdate\", e => {\n        setAudioPlayerCurrentTime(e.target.currentTime);\n      });\n    }\n  }, [audioPlayerRef]);\n\n  const handleSliderChange = e => {\n    const time = duration * (e.target.value / 100);\n    audioPlayerRef.current.currentTime = time;\n    setAudioPlayerCurrentTime(time);\n  };\n\n  const rewindPodcasts = () => {\n    if (selected === podcasts.length - 1) {\n      setAudioPlayerSelected(0);\n    } else {\n      setAudioPlayerSelected(selected + 1);\n    }\n  };\n\n  const forwardPodcasts = () => {\n    if (selected === 0) {\n      setAudioPlayerSelected(podcasts.length - 1);\n    } else {\n      setAudioPlayerSelected(selected - 1);\n    }\n  }; //Useful custom hook which stores the previous value of a\n  //variable\n\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  function getTime(time) {\n    if (!isNaN(time)) {\n      return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n    }\n  }\n\n  const progressDuration = getTime(duration);\n  const progressTime = getTime(currentTime);\n  const progress = 100 / duration * currentTime;\n  return __jsx(\"div\", {\n    ref: ref,\n    className: styles[\"audio-player\"]\n  }, __jsx(\"div\", {\n    className: props.isActive ? styles[\"image-container\"] : `${styles[\"image-container\"]} ${styles[\"image-container-inactive\"]}`\n  }, __jsx(\"img\", {\n    className: styles[\"image\"],\n    src: podcasts[selected].image,\n    loading: \"lazy\"\n  })), __jsx(\"div\", {\n    className: styles[\"player\"]\n  }, __jsx(\"div\", {\n    className: styles[\"minimized\"]\n  }, !props.isActive && __jsx(\"div\", {\n    id: styles[\"bars\"]\n  }, __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying === \"playing\" ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  }), __jsx(\"div\", {\n    className: isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]\n  })), __jsx(\"div\", {\n    className: styles[\"title-container\"],\n    onClick: () => props.setActive(!props.isActive)\n  }, podcasts[selected].title.toUpperCase()), props.isActive ? __jsx(\"i\", {\n    onClick: () => props.setActive(false),\n    className: `${styles[\"audio-player-inactive\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-down\"]} fas fa-chevron-down`\n  }) : __jsx(\"i\", {\n    onClick: () => props.setActive(true),\n    className: `${styles[\"audio-player-active\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-up\"]} fas fa-chevron-up`\n  })), __jsx(\"div\", {\n    className: props.isActive ? styles[\"image-controls\"] : `${styles[\"image-controls\"]} ${styles[\"image-controls-inactive\"]}`\n  }, __jsx(\"div\", {\n    className: styles[\"controls\"]\n  }, __jsx(\"i\", {\n    onClick: () => rewindPodcasts(),\n    className: `${styles[\"backward-button\"]} ${styles[\"fas\"]} ${styles[\"fa-step-backward\"]} fas fa-step-backward`\n  }), audioPlayerRef && !isPlaying && __jsx(\"i\", {\n    onClick: () => {\n      audioPlayerRef.current.play();\n      setAudioPlayerIsPlaying(true);\n    },\n    className: `${styles[\"play-button\"]} ${styles[\"far\"]} ${styles[\"fa-play-circle\"]} far fa-play-circle`\n  }), audioPlayerRef && isPlaying && __jsx(\"i\", {\n    //Use effect automatically handles changes in redux\n    //state hook to pause the audio player\n    onClick: () => setAudioPlayerIsPlaying(false),\n    className: `${styles[\"pause-button\"]} ${styles[\"far\"]} ${styles[\"fa-pause-circle\"]} far fa-pause-circle`\n  }), __jsx(\"i\", {\n    //On ios devices apparently users must explicitly press\n    //play and audio player can't play through callbacks hence this\n    onClick: () => {\n      audioPlayerRef.current.play();\n      forwardPodcasts();\n    },\n    className: `${styles[\"forward-button\"]} ${styles[\"fas\"]} ${styles[\"fa-step-forward\"]} fas fa-step-forward`\n  })), __jsx(\"div\", {\n    className: styles[\"progress-bar\"]\n  }, progressTime, \" \", __jsx(\"input\", {\n    ref: seekBarRef,\n    type: \"range\",\n    className: styles[\"progress-bar-slider\"],\n    onChange: handleSliderChange,\n    value: progress\n  }), \" \", progressDuration))));\n});\nexport default AudioPlayer;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/components/AudioPlayer/AudioPlayer.js"],"names":["React","useState","useRef","useEffect","forwardRef","useContext","AudioPlayerContext","setAudioPlayerIsPlayingAction","setAudioPlayerCurrentTimeAction","setAudioPlayerSelectedAction","styles","gql","NetworkStatus","useQuery","ALL_PODCASTS_QUERY","AudioPlayer","props","ref","audioPlayerState","audioPlayerDispatch","loading","error","data","networkStatus","notifyOnNetworkStatusChange","loadingMorePodcasts","fetchMore","podcasts","title","by","link","date","image","description","console","log","selected","audioPlayerRef","prevTrack","usePrevious","isPlaying","currentTime","wasPlaying","setAudioPlayerIsPlaying","setTo","setAudioPlayerCurrentTime","setAudioPlayerSelected","duration","setDuration","seekBarRef","current","pause","play","track","src","addEventListener","e","target","handleSliderChange","time","value","rewindPodcasts","length","forwardPodcasts","getTime","isNaN","Math","floor","slice","progressDuration","progressTime","progress","isActive","setActive","toUpperCase"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useContext,\n} from \"react\";\nimport { AudioPlayerContext } from \"../../contexts/reducers/audioPlayerContext\";\nimport {\n  setAudioPlayerIsPlayingAction,\n  setAudioPlayerCurrentTimeAction,\n  setAudioPlayerSelectedAction,\n} from \"../../contexts/actions\";\nimport styles from \"./AudioPlayer.module.css\";\nimport { gql, NetworkStatus, useQuery } from \"@apollo/client\";\n\nexport const ALL_PODCASTS_QUERY = gql`\n  query AllPodcastsQuery {\n    podcasts {\n      title\n      by\n      link\n      date\n      image\n      description\n    }\n  }\n`;\n\nconst AudioPlayer = forwardRef((props, ref) => {\n  const [audioPlayerState, audioPlayerDispatch] = useContext(\n    AudioPlayerContext\n  );\n  // const podcasts = audioPlayerState.podcasts;\n  const {\n    loading,\n    error,\n    data,\n\n    networkStatus,\n  } = useQuery(ALL_PODCASTS_QUERY, { notifyOnNetworkStatusChange: true });\n\n  const loadingMorePodcasts = networkStatus === NetworkStatus.fetchMore;\n\n  let podcasts;\n  if (loading && !loadingMorePodcasts) {\n    podcasts = [\n      {\n        title: \"False Nine Podcast #17 Champions League RO16 first leg review\",\n        by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n        link:\n          \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n        date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n        image:\n          \"https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/8497059/8497059-1599895849523-cbb8b2f53d641.jpg\",\n        description:\n          \"In this episode, Ishan, Ojash and Susajjan review the first leg ties of the Champions league Round of 16 first leg.\\n\\n\",\n      },\n    ];\n  } else {\n    podcasts = data.podcasts;\n    console.log(\"Done loading\");\n  }\n\n  //selected refers to the currently playing audio track.\n  //It is global set to allow clicks and links to change tracks\n  const selected = audioPlayerState.selected;\n\n  //audioPLayerRef is initialized to an html5 audio element in the\n  //App.js file and the reference is stored in the global redux\n  //store. This was done for the player to hold its data between\n  //page redirects.This is supposedly bad as only serializable\n  // data should be kept in store but it does the job for now.\n  const audioPlayerRef = audioPlayerState.audioPlayerRef;\n  const prevTrack = usePrevious(podcasts[selected]) || {\n    title: \"False Nine Podcast #17 Champions League RO16 first Leg review\",\n    by: \"Ishan Sharma, Susajjan Dhungana and Ojash Dangal\",\n    link:\n      \"https://anchor.fm/s/333e122c/podcast/play/19475297/sponsor/a3205tm/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2020-09-12%2F9ca05751732f6a1351863756bdfb662b.m4a\",\n    date: \"Sat, 12 Sep 2020 08:42:34 GMT\",\n    image:\n      \"https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/8497059/8497059-1599895849523-cbb8b2f53d641.jpg\",\n  };\n\n  const isPlaying = audioPlayerState.isPlaying;\n  const currentTime = audioPlayerState.currentTime;\n\n  //React redux useDispatch() hook\n  const wasPlaying = usePrevious(isPlaying);\n  const setAudioPlayerIsPlaying = (setTo) => {\n    audioPlayerDispatch(setAudioPlayerIsPlayingAction(setTo));\n  };\n\n  const setAudioPlayerCurrentTime = (setTo) => {\n    audioPlayerDispatch(setAudioPlayerCurrentTimeAction(setTo));\n  };\n\n  const setAudioPlayerSelected = (setTo) => {\n    audioPlayerDispatch(setAudioPlayerSelectedAction(setTo));\n  };\n\n  //Don't need setDuration can probably get rid of. If it ain't broke....\n  const [duration, setDuration] = useState(2172.892);\n\n  //seekbar shows the time elapsed in the song\n  const seekBarRef = useRef();\n\n  useEffect(() => {\n    if (audioPlayerRef && isPlaying !== wasPlaying) {\n      if (!isPlaying && audioPlayerRef.current) {\n        audioPlayerRef.current.pause();\n      } else if (isPlaying && !wasPlaying && audioPlayerRef.current) {\n        audioPlayerRef.current.play();\n      }\n    }\n  }, [isPlaying, audioPlayerRef]);\n\n  useEffect(() => {\n    if (audioPlayerRef && podcasts[selected].title != prevTrack.title) {\n      let track = podcasts[selected] ? podcasts[selected].link : null;\n      if (track && audioPlayerRef.current) {\n        if (audioPlayerRef.current.src !== track) {\n          audioPlayerRef.current.src = track;\n          audioPlayerRef.current.play();\n          setAudioPlayerIsPlaying(true);\n        }\n      }\n    }\n  }, [audioPlayerRef, podcasts[selected]]);\n\n  useEffect(() => {\n    if (audioPlayerRef && audioPlayerRef.current) {\n      audioPlayerRef.current.addEventListener(\"timeupdate\", (e) => {\n        setAudioPlayerCurrentTime(e.target.currentTime);\n      });\n    }\n  }, [audioPlayerRef]);\n\n  const handleSliderChange = (e) => {\n    const time = duration * (e.target.value / 100);\n    audioPlayerRef.current.currentTime = time;\n    setAudioPlayerCurrentTime(time);\n  };\n\n  const rewindPodcasts = () => {\n    if (selected === podcasts.length - 1) {\n      setAudioPlayerSelected(0);\n    } else {\n      setAudioPlayerSelected(selected + 1);\n    }\n  };\n\n  const forwardPodcasts = () => {\n    if (selected === 0) {\n      setAudioPlayerSelected(podcasts.length - 1);\n    } else {\n      setAudioPlayerSelected(selected - 1);\n    }\n  };\n\n  //Useful custom hook which stores the previous value of a\n  //variable\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  function getTime(time) {\n    if (!isNaN(time)) {\n      return (\n        Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n      );\n    }\n  }\n  const progressDuration = getTime(duration);\n  const progressTime = getTime(currentTime);\n  const progress = (100 / duration) * currentTime;\n  return (\n    <div ref={ref} className={styles[\"audio-player\"]}>\n      <div\n        className={\n          props.isActive\n            ? styles[\"image-container\"]\n            : `${styles[\"image-container\"]} ${styles[\"image-container-inactive\"]}`\n        }\n      >\n        <img\n          className={styles[\"image\"]}\n          src={podcasts[selected].image}\n          loading=\"lazy\"\n        />\n      </div>\n      <div className={styles[\"player\"]}>\n        <div className={styles[\"minimized\"]}>\n          {!props.isActive && (\n            <div id={styles[\"bars\"]}>\n              {/*Animation similar to old windows media player/}\n          {/which is displayed when podcast is playing and/}\n        {/player is maximized*/}\n\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={\n                  isPlaying === \"playing\" ? styles[\"bar\"] : styles[\"bar-paused\"]\n                }\n              ></div>\n\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n              <div\n                className={isPlaying ? styles[\"bar\"] : styles[\"bar-paused\"]}\n              ></div>\n            </div>\n          )}\n\n          <div\n            className={styles[\"title-container\"]}\n            onClick={() => props.setActive(!props.isActive)}\n          >\n            {podcasts[selected].title.toUpperCase()}\n          </div>\n          {/*isActive refers to whether audioplayer is minimized/}\n          {/While minimized only playing animation and title appears*/}\n          {props.isActive ? (\n            <i\n              onClick={() => props.setActive(false)}\n              className={`${styles[\"audio-player-inactive\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-down\"]} fas fa-chevron-down`}\n            ></i>\n          ) : (\n            <i\n              onClick={() => props.setActive(true)}\n              className={`${styles[\"audio-player-active\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-up\"]} fas fa-chevron-up`}\n            ></i>\n          )}\n        </div>\n\n        <div\n          className={\n            props.isActive\n              ? styles[\"image-controls\"]\n              : `${styles[\"image-controls\"]} ${styles[\"image-controls-inactive\"]}`\n          }\n        >\n          <div className={styles[\"controls\"]}>\n            <i\n              onClick={() => rewindPodcasts()}\n              className={`${styles[\"backward-button\"]} ${styles[\"fas\"]} ${styles[\"fa-step-backward\"]} fas fa-step-backward`}\n            ></i>\n            {audioPlayerRef && !isPlaying && (\n              <i\n                onClick={() => {\n                  audioPlayerRef.current.play();\n                  setAudioPlayerIsPlaying(true);\n                }}\n                className={`${styles[\"play-button\"]} ${styles[\"far\"]} ${styles[\"fa-play-circle\"]} far fa-play-circle`}\n              ></i>\n            )}\n            {audioPlayerRef && isPlaying && (\n              <i\n                //Use effect automatically handles changes in redux\n                //state hook to pause the audio player\n                onClick={() => setAudioPlayerIsPlaying(false)}\n                className={`${styles[\"pause-button\"]} ${styles[\"far\"]} ${styles[\"fa-pause-circle\"]} far fa-pause-circle`}\n              ></i>\n            )}\n            <i\n              //On ios devices apparently users must explicitly press\n              //play and audio player can't play through callbacks hence this\n              onClick={() => {\n                audioPlayerRef.current.play();\n                forwardPodcasts();\n              }}\n              className={`${styles[\"forward-button\"]} ${styles[\"fas\"]} ${styles[\"fa-step-forward\"]} fas fa-step-forward`}\n            ></i>\n          </div>\n          <div className={styles[\"progress-bar\"]}>\n            {progressTime}{\" \"}\n            <input\n              ref={seekBarRef}\n              type=\"range\"\n              className={styles[\"progress-bar-slider\"]}\n              onChange={handleSliderChange}\n              value={progress}\n            />{\" \"}\n            {progressDuration}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}