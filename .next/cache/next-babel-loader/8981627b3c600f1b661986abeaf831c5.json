{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport styles from \"./Comment.module.css\";\nimport { getRules } from \"../../components/TextEditor/TextEditor\";\nimport { Card } from \"../Cards/Card\";\nimport Html from \"slate-html-serializer\";\n\nconst Comment = props => {\n  const author = props.author;\n  const fullDate = Card.formatDate(props.date);\n  const date = fullDate.date;\n  const time = fullDate.time;\n  const rules = getRules(styles);\n  const html = new Html({\n    rules\n  });\n  const maximized = html.serialize(props.commentText);\n\n  const oneNode = _objectSpread(_objectSpread({}, props.commentText), {}, {\n    document: _objectSpread(_objectSpread({}, props.commentText.document), {}, {\n      nodes: props.commentText.document.nodes.filter((item, index) => index === 0)\n    })\n  });\n\n  const minimized = html.serialize(oneNode);\n  const {\n    0: isMinimized,\n    1: setMinimized\n  } = useState(true);\n  return __jsx(\"div\", {\n    className: styles[\"Comment\"]\n  }, __jsx(\"div\", {\n    className: styles[\"card-body\"]\n  }, author ? __jsx(\"p\", null, author && __jsx(\"span\", {\n    className: styles[\"author\"]\n  }, author)) : null), __jsx(\"div\", {\n    className: isMinimized ? `${styles[\"minimized\"]} ${styles[\"comment-body\"]}` : styles[\"comment-body\"],\n    dangerouslySetInnerHTML: {\n      __html: isMinimized ? minimized : maximized\n    }\n  }), __jsx(\"div\", {\n    className: styles[\"date-time-ellipsis\"]\n  }, props.date ? __jsx(\"p\", null, __jsx(\"span\", {\n    className: styles[\"date\"]\n  }, date), __jsx(\"span\", {\n    className: styles[\"time\"]\n  }, time)) : null, props.commentText.document.nodes.length > 1 && __jsx(\"div\", null, isMinimized ? __jsx(\"i\", {\n    onClick: () => setMinimized(false),\n    className: `${styles[\"comment-maximize\"]} ${styles[\"fas\"]} ${styles[\"fa-ellipsis-h\"]} fas fa-ellipsis-h`\n  }) : __jsx(\"i\", {\n    onClick: () => setMinimized(true),\n    className: `${styles[\"comment-minimize\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-up\"]} fas fa-chevron-up`\n  }))));\n};\n\nexport default Comment;","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/components/Comment/Comment.js"],"names":["React","useState","styles","getRules","Card","Html","Comment","props","author","fullDate","formatDate","date","time","rules","html","maximized","serialize","commentText","oneNode","document","nodes","filter","item","index","minimized","isMinimized","setMinimized","__html","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Comment.module.css\";\nimport { getRules } from \"../../components/TextEditor/TextEditor\";\nimport { Card } from \"../Cards/Card\";\nimport Html from \"slate-html-serializer\";\nconst Comment = (props) => {\n  const author = props.author;\n  const fullDate = Card.formatDate(props.date);\n  const date = fullDate.date;\n  const time = fullDate.time;\n  const rules = getRules(styles);\n  const html = new Html({ rules });\n  const maximized = html.serialize(props.commentText);\n  const oneNode = {...props.commentText, document: {...props.commentText.document, nodes: props.commentText.document.nodes.filter((item, index) => index === 0)}}\n  const minimized = html.serialize(oneNode);\n\n  const [isMinimized, setMinimized] = useState(true);\n  return (\n    <div className={styles[\"Comment\"]}>\n      <div className={styles[\"card-body\"]}>\n        {author ? (\n          <p>\n            {author && <span className={styles[\"author\"]}>{author}</span>}\n                  </p>\n        ) : null}\n      </div>\n\n      <div\n        className={\n          isMinimized\n            ? `${styles[\"minimized\"]} ${styles[\"comment-body\"]}`\n            : styles[\"comment-body\"]\n        }\n        dangerouslySetInnerHTML={{ __html: isMinimized? minimized : maximized}}\n      ></div>\n\n\n<div className={styles[\"date-time-ellipsis\"]}>\n{props.date ? (\n          <p>\n            <span className={styles[\"date\"]}>{date}</span>\n            <span className={styles[\"time\"]}>{time}</span>\n          </p>): null}\n{props.commentText.document.nodes.length > 1 &&(<div>\n{isMinimized ? (\n            <i\n              onClick={() => setMinimized(false)}\n  \n              className={`${styles[\"comment-maximize\"]} ${styles[\"fas\"]} ${styles[\"fa-ellipsis-h\"]} fas fa-ellipsis-h`}\n            ></i>\n          ) : (\n            <i\n              onClick={() => setMinimized(true)}\n              className={`${styles[\"comment-minimize\"]} ${styles[\"fas\"]} ${styles[\"fa-chevron-up\"]} fas fa-chevron-up`}\n            ></i>\n          )}\n        </div>)}\n        </div>\n    </div>\n  );\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}