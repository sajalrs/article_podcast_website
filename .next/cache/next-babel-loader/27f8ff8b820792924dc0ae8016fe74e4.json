{"ast":null,"code":"// import { ApolloServer } from \"apollo-server-micro\";\nimport { makeExecutableSchema } from \"graphql-tools\";\nimport { ApolloServer, graphqlExpress } from \"apollo-server-express\";\n\nrequire(\"dotenv/config\");\n\nimport { typeDefs } from \"./typeDefs\";\nimport { resolvers } from \"./resolvers\";\nimport connectDb from \"../middlewares/dbMiddleware.js\";\nconst schema = makeExecutableSchema({\n  typeDefs,\n  resolvers\n});\nconst apolloServer = new ApolloServer(graphqlExpress((req, res) => ({\n  schema,\n  context: {\n    req,\n    res\n  }\n})));\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default connectDb(apolloServer.createHandler({\n  path: \"/api/graphql\"\n}));","map":{"version":3,"sources":["/home/sajalrs/ReactProgramming/article_podcast_website/pages/api/graphql/index.js"],"names":["makeExecutableSchema","ApolloServer","graphqlExpress","require","typeDefs","resolvers","connectDb","schema","apolloServer","req","res","context","config","api","bodyParser","createHandler","path"],"mappings":"AAAA;AACA,SAASA,oBAAT,QAAqC,eAArC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,uBAA7C;;AACAC,OAAO,CAAC,eAAD,CAAP;;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AAEA,MAAMC,MAAM,GAAGP,oBAAoB,CAAC;AAClCI,EAAAA,QADkC;AAElCC,EAAAA;AAFkC,CAAD,CAAnC;AAKA,MAAMG,YAAY,GAAG,IAAIP,YAAJ,CACnBC,cAAc,CAAC,CAACO,GAAD,EAAMC,GAAN,MAAe;AAC5BH,EAAAA,MAD4B;AAE5BI,EAAAA,OAAO,EAAE;AAAEF,IAAAA,GAAF;AAAOC,IAAAA;AAAP;AAFmB,CAAf,CAAD,CADK,CAArB;AAOA,OAAO,MAAME,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,eAAeR,SAAS,CAACE,YAAY,CAACO,aAAb,CAA2B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA3B,CAAD,CAAxB","sourcesContent":["// import { ApolloServer } from \"apollo-server-micro\";\nimport { makeExecutableSchema } from \"graphql-tools\";\nimport { ApolloServer, graphqlExpress } from \"apollo-server-express\";\nrequire(\"dotenv/config\");\nimport { typeDefs } from \"./typeDefs\";\nimport { resolvers } from \"./resolvers\";\nimport connectDb from \"../middlewares/dbMiddleware.js\";\n\nconst schema = makeExecutableSchema({\n  typeDefs,\n  resolvers,\n});\n\nconst apolloServer = new ApolloServer(\n  graphqlExpress((req, res) => ({\n    schema,\n    context: { req, res },\n  }))\n);\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n};\n\nexport default connectDb(apolloServer.createHandler({ path: \"/api/graphql\" }));\n"]},"metadata":{},"sourceType":"module"}